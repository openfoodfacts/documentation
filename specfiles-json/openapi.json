{
  "openapi": "3.1.0",
  "info": {
    "title": "Open Food Facts Open API",
    "description": "As a developer, the Open Food Facts API allows you to get information\nand contribute to the products database. You can create great apps to\nhelp people make better food choices and also provide data to enhance the database.\n\n**IMPORTANT**: Please read the [API introduction](https://openfoodfacts.github.io/openfoodfacts-server/api/) before using this API.\n",
    "termsOfService": "https://world.openfoodfacts.org/terms-of-use",
    "contact": {
      "name": "Open Food Facts",
      "url": "https://slack.openfoodfacts.org/",
      "email": "reuse@openfoodfacts.org"
    },
    "license": {
      "name": "data: ODbL",
      "url": "https://opendatacommons.org/licenses/odbl/summary/index.html",
      "x-identifier": "ODbL-1.0"
    },
    "version": "2"
  },
  "externalDocs": {
    "description": "**IMPORTANT**: Please read the API introduction before using this API.\n",
    "url": "https://openfoodfacts.github.io/openfoodfacts-server/api/"
  },
  "servers": [
    {
      "description": "dev",
      "url": "https://world.openfoodfacts.net"
    },
    {
      "description": "prod",
      "url": "https://world.openfoodfacts.org"
    },
    {
      "description": "proxy (for doc purpose)",
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/api/v2/product/{barcode}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Product Details",
        "description": "Fetches product details by its unique barcode. \nCan return all product details or specific fields like knowledge panels.\n",
        "operationId": "get-product-by-barcode",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "description": "The barcode of the product to be fetched",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "examples": [
                "3017620422003"
              ]
            }
          },
          {
            "name": "product_type",
            "in": "query",
            "description": "Used for READ queries for one product. Expected product type of the requested product. Defaults to the product type of the server the query is sent to (e.g. 'food' for Open Food Facts, 'beauty' for Open Beauty Facts, etc.). 'all' matches all product types. If the product exists on a different server that matches the requested product type, the API will return a 302 redirect to the correct server. Otherwise, the API will return a 404 error. It is possible that new product types will be added in the future.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "beauty",
                "food",
                "petfood",
                "product"
              ],
              "description": "Expected product type of the requested product",
              "examples": [
                "all",
                "food"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specific fields to return. Use 'knowledge_panels' for Knowledge Panels only.",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_.-]+(,[a-zA-Z0-9_.-]+)*$",
              "description": "Custom comma-separated list of product field names",
              "examples": [
                "knowledge_panels",
                "knowledge_panels,product_name,nutriments",
                "categories_tags,packaging_tags",
                "allergens_tags,nutriscores",
                "images,brands_tags,categories_tags,countries_tags,languages_tags,ecoscore_tags"
              ]
            }
          },
          {
            "schema": {
              "type": "string",
              "example": "heatlh_card, environment_card"
            },
            "in": "query",
            "name": "knowledge_panels_included",
            "description": "When knowledge_panels are requested, you can specify which panels should be in the response. All the others will be excluded.\n"
          },
          {
            "schema": {
              "type": "string",
              "example": "heatlh_card, environment_card"
            },
            "in": "query",
            "name": "knowledge_panels_excluded",
            "description": "When knowledge_panels are requested, you can specify which panels to exclude from the response. All the others will be included.\nIf a panel is both excluded and included (with the knowledge_panels_excluded parameter), it will be excluded.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "get_product_by_barcode_all_response",
                  "oneOf": [
                    {
                      "type": "object",
                      "title": "get_product_by_barcode_response",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "get_product_by_barcode_base_response",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Barcode of the product\n(can be EAN-13 or internal codes for some food stores).\nFor products without a barcode, Open Food Facts assigns a \nnumber starting with the 200 reserved prefix.\n"
                            },
                            "status": {
                              "type": "integer",
                              "enum": [
                                0,
                                1
                              ],
                              "description": "Return values based on ProductOpener/Display.pm analysis"
                            },
                            "status_verbose": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "product": {
                              "$ref": "#/components/schemas/Product"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "title": "get_product_by_barcode_knowledge_panels_response",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "get_product_by_barcode_base_response",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Barcode of the product\n(can be EAN-13 or internal codes for some food stores).\nFor products without a barcode, Open Food Facts assigns a \nnumber starting with the 200 reserved prefix.\n"
                            },
                            "status": {
                              "type": "integer",
                              "enum": [
                                0,
                                1
                              ],
                              "description": "Return values based on ProductOpener/Display.pm analysis"
                            },
                            "status_verbose": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "product": {
                              "type": "object",
                              "description": "Knowledge panels for a product\n",
                              "properties": {
                                "knowledge_panels": {
                                  "type": "object",
                                  "title": "panels",
                                  "description": "The panels object is a dictionary of individual panel objects.\nEach key of the dictionary is the id of the panel, and the value is the panel object.\n\nApps typically display a number of root panels with known panel ids (e.g. health_card and environment_card). Panels can reference other panels and display them as sub-panels.",
                                  "examples": [
                                    {
                                      "additionalProperties": "string"
                                    }
                                  ],
                                  "properties": {
                                    "additionalProperties": {
                                      "title": "panel",
                                      "type": "object",
                                      "description": "Each panel contains an optional title and an optional array of elements.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "Type of the panel. If set to \"card\", the panel and its sub-panels should be displayed in a card. If set to \"inline\", the panel should have its content always displayed."
                                        },
                                        "expanded": {
                                          "type": "boolean",
                                          "description": "If true, the panel is to be displayed already expanded. If false, only the title should be displayed, and the user should be able to click or tap it to open the panel and display the elements."
                                        },
                                        "expand_for": {
                                          "type": "string",
                                          "description": "If set to \"large\", the content of the panel should be expanded on large screens, but it should still be possible to unexpand it."
                                        },
                                        "evaluation": {
                                          "type": "string",
                                          "description": "An evaluation status specifically for this title element. This can be used to directly color the icon if 'icon_color_from_evaluation' is true and this field is present, or it might provide context for the title itself. e.g. bad is red. Please be careful in choosing colors, to avoid 50 shades of red.",
                                          "example": "bad",
                                          "enum": [
                                            "good",
                                            "average",
                                            "neutral",
                                            "bad",
                                            "unknown"
                                          ]
                                        },
                                        "half_width_on_mobile": {
                                          "type": "boolean",
                                          "description": "If true, suggests that this panel could be rendered as half-width on mobile devices, allowing for side-by-side display with another half-width panel if applicable.",
                                          "example": true
                                        },
                                        "title_element": {
                                          "title": "title_element",
                                          "x-stoplight": {
                                            "id": "lox0wvl9bdgy2"
                                          },
                                          "type": "object",
                                          "description": "The title of a panel.",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "A short name of this panel, not including any actual values"
                                            },
                                            "title": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "grade",
                                                "percentage"
                                              ],
                                              "description": "Used to indicate how the value of this item is measured, such as \"grade\" for Nutri-Score and Green-Score or \"percentage\" for Salt"
                                            },
                                            "grade": {
                                              "type": "string",
                                              "description": "The value for this panel where it corresponds to a A to E grade such as the Nutri-Score or the Green-Score.",
                                              "enum": [
                                                "a+",
                                                "a",
                                                "b",
                                                "c",
                                                "d",
                                                "e",
                                                "f",
                                                "unknown"
                                              ]
                                            },
                                            "value": {
                                              "type": "number",
                                              "description": "The numeric value of the panel, where the type is \"percentage\""
                                            },
                                            "icon_url": {
                                              "type": "string"
                                            },
                                            "icon_color_from_evaluation": {
                                              "type": "string"
                                            },
                                            "icon_size": {
                                              "type": "string",
                                              "description": "If set to \"small\", the icon should be displayed at a small size.\n"
                                            }
                                          }
                                        },
                                        "elements": {
                                          "type": "array",
                                          "description": "An ordered list of elements to display in the content of the panel.",
                                          "items": {
                                            "title": "element",
                                            "x-stoplight": {
                                              "id": "e2ybdrtmx0tme"
                                            },
                                            "type": "object",
                                            "description": "Each element object contains one specific element object such as a text element or an image element.\n",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "text",
                                                  "image",
                                                  "action",
                                                  "panel",
                                                  "panel_group",
                                                  "table"
                                                ],
                                                "description": "The type of the included element object.\nThe type also indicates which field contains the included element object.\ne.g. if the type is \"text\", the included element object will be in the \"text_element\" field.\n\nNote that in the future, new type of element may be added,\nso your code should ignore unrecognized types, and unknown properties.\n\nTODO: add Map type\n"
                                              },
                                              "text_element": {
                                                "title": "text_element",
                                                "x-stoplight": {
                                                  "id": "vdwxlt73qnqfa"
                                                },
                                                "type": "object",
                                                "description": "A text in simple HTML format to display.\n\nFor some specific texts that correspond to a product field (e.g. a product name, the ingredients list of a product),the edit_field_* fields are used to indicate how to edit the field value.",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "description": "the type of text, might influence the way you display it.\n",
                                                    "enum": [
                                                      "summary",
                                                      "warning",
                                                      "notes"
                                                    ]
                                                  },
                                                  "html": {
                                                    "type": "string",
                                                    "description": "Text to display in HTML format."
                                                  },
                                                  "language": {
                                                    "type": "string",
                                                    "description": "Language of the text. The name of the language is returned in the language requested when making the API call. e.g. if the text is in Polish, and the requested language is French, the language field will contain \"Polonais\" (French for \"Polish\"). Only set for specific fields such as the list of ingredients of a product."
                                                  },
                                                  "lc": {
                                                    "type": "string",
                                                    "description": "2 letter language code for the text. Only set for specific fields such as the list of ingredients of a product."
                                                  },
                                                  "edit_field_id": {
                                                    "type": "string",
                                                    "description": "id of the field used to edit this text in the product edit API."
                                                  },
                                                  "edit_field_type": {
                                                    "type": "string",
                                                    "description": "Type of the product field."
                                                  },
                                                  "edit_field_value": {
                                                    "type": "string",
                                                    "description": "Current value of the product field. This may differ from the html field which can contain extra formating."
                                                  },
                                                  "source_url": {
                                                    "type": "string",
                                                    "description": "Link to the source",
                                                    "example": "https://en.wikipedia.org/wiki/Sodium acetate"
                                                  },
                                                  "source_text": {
                                                    "type": "string",
                                                    "description": "name of the source",
                                                    "example": "Wikipedia"
                                                  },
                                                  "source_lc": {
                                                    "type": "string",
                                                    "description": "Source locale name",
                                                    "example": "en"
                                                  },
                                                  "source_language": {
                                                    "type": "string",
                                                    "description": "Human readable source locale name",
                                                    "example": "English"
                                                  }
                                                }
                                              },
                                              "image_element": {
                                                "title": "image_element",
                                                "x-stoplight": {
                                                  "id": "k4v4kwt489q3j"
                                                },
                                                "type": "object",
                                                "properties": {
                                                  "url": {
                                                    "type": "string",
                                                    "description": "full URL of the image"
                                                  },
                                                  "width": {
                                                    "type": "integer",
                                                    "description": "Width of the image.\n\nThis is just a suggestion coming from the server, \nthe client may choose to use its own dimensions for the image.\n"
                                                  },
                                                  "height": {
                                                    "type": "integer",
                                                    "description": "Height of the image.\n\nThis is just a suggestion coming from the server,\nthe client may choose to use its own dimensions for the image.\n"
                                                  },
                                                  "alt_text": {
                                                    "type": "string",
                                                    "description": "Alt Text of the image."
                                                  }
                                                }
                                              },
                                              "action_element": {
                                                "type": "string"
                                              },
                                              "panel_element": {
                                                "title": "panel_element",
                                                "x-stoplight": {
                                                  "id": "ymx41elz4yrnj"
                                                },
                                                "type": "object",
                                                "description": "Panels can include other panels as sub-panels using the panel_element.",
                                                "properties": {
                                                  "panel_id": {
                                                    "type": "string",
                                                    "description": "The id of the panel to include. The id is the key of the panel in the panels object returned in the knowledge_panels field."
                                                  }
                                                }
                                              },
                                              "panel_group_element": {
                                                "title": "panel_group_element",
                                                "x-stoplight": {
                                                  "id": "b7emlfrgiuue2"
                                                },
                                                "type": "object",
                                                "properties": {
                                                  "title": {
                                                    "type": "string"
                                                  },
                                                  "panel_ids": {
                                                    "type": "array",
                                                    "description": "The ids of the panels to include. The ids are the keys of the panels in the panels object returned in the knowledge_panels field.",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "image": {
                                                    "type": "object",
                                                    "description": "An image related to the panel group (e.g. the ingredients or nutrition facts image for the ingredients and nutrition panel groups)."
                                                  }
                                                },
                                                "description": "The panel group element is used to display an optional title followed by a number of sub-panels."
                                              },
                                              "table_element": {
                                                "title": "table_element",
                                                "type": "object",
                                                "description": "Element to display a table.",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "An id for the table."
                                                  },
                                                  "title": {
                                                    "type": "string",
                                                    "description": "Title of the column.\n"
                                                  },
                                                  "rows": {
                                                    "type": "string"
                                                  },
                                                  "columns": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "title": "table_column",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string"
                                                        },
                                                        "text": {
                                                          "type": "string"
                                                        },
                                                        "text_for_small_screens": {
                                                          "type": "string"
                                                        },
                                                        "style": {
                                                          "type": "string"
                                                        },
                                                        "column_group_id": {
                                                          "type": "string"
                                                        },
                                                        "shown_by_default": {
                                                          "type": "boolean"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ]
                                          }
                                        },
                                        "level": {
                                          "type": "string",
                                          "description": "a message level, as levels we use in log.\nIt might help theming the panel visually. Some possible values: info, recommendation\n",
                                          "example": "info"
                                        },
                                        "size": {
                                          "type": "string",
                                          "enum": [
                                            "small"
                                          ],
                                          "description": "size is either empty (normal display) \nor small to indicate a panel that should have a smaller font size\n",
                                          "example": "small"
                                        },
                                        "topics": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "example": "health"
                                          },
                                          "description": "topics currently include health, environment, problem"
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                "examples": {
                  "full-product": {
                    "summary": "retrieved values for a well known chocolate and nut spread",
                    "value": {
                      "code": "3017620422003",
                      "product": {
                        "_id": "3017620422003",
                        "_keywords": [
                          "et",
                          "pate",
                          "cacao",
                          "produit",
                          "ferrero",
                          "gluten",
                          "petit-dejeuner",
                          "san",
                          "au",
                          "aux",
                          "sucre",
                          "nutella"
                        ],
                        "abbreviated_product_name": "Nutella t.400",
                        "abbreviated_product_name_fr": "Nutella t.400",
                        "added_countries_tags": [],
                        "additives_n": 1,
                        "additives_original_tags": [
                          "en:e322"
                        ],
                        "additives_prev_original_tags": [
                          "en:e322"
                        ],
                        "additives_tags": [
                          "en:e322"
                        ],
                        "allergens": "en:milk,en:nuts,en:soybeans",
                        "allergens_from_ingredients": "en:nuts, hazelnuts",
                        "allergens_from_user": "(fr) en:milk,en:nuts,en:soybeans",
                        "allergens_hierarchy": [
                          "en:milk",
                          "en:nuts",
                          "en:soybeans"
                        ],
                        "allergens_lc": "fr",
                        "allergens_tags": [
                          "en:milk",
                          "en:nuts",
                          "en:soybeans"
                        ],
                        "amino_acids_prev_tags": [],
                        "amino_acids_tags": [],
                        "brands": "Ferrero",
                        "brands_tags": [
                          "ferrero"
                        ],
                        "carbon_footprint_percent_of_known_ingredients": 13,
                        "categories": "Produits à tartiner,Petit-déjeuners,Produits à tartiner sucrés,Pâtes à tartiner,Pâtes à tartiner aux noisettes,Pâtes à tartiner aux noisettes et au cacao",
                        "categories_hierarchy": [
                          "en:breakfasts",
                          "en:spreads",
                          "en:sweet-spreads",
                          "en:hazelnut-spreads",
                          "en:chocolate-spreads",
                          "en:cocoa-and-hazelnuts-spreads"
                        ],
                        "categories_lc": "fr",
                        "categories_properties": {
                          "agribalyse_food_code:en": "31032",
                          "agribalyse_proxy_food_code:en": "31032",
                          "ciqual_food_code:en": "31032"
                        },
                        "categories_properties_tags": [
                          "all-products",
                          "categories-known",
                          "agribalyse-food-code-31032",
                          "agribalyse-food-code-known",
                          "agribalyse-proxy-food-code-31032",
                          "agribalyse-proxy-food-code-known",
                          "ciqual-food-code-31032",
                          "ciqual-food-code-known",
                          "agribalyse-known",
                          "agribalyse-31032"
                        ],
                        "categories_tags": [
                          "en:breakfasts",
                          "en:spreads",
                          "en:sweet-spreads",
                          "fr:pates-a-tartiner",
                          "en:hazelnut-spreads",
                          "en:chocolate-spreads",
                          "en:cocoa-and-hazelnuts-spreads"
                        ],
                        "category_properties": {
                          "ciqual_food_name:en": "Chocolate spread with hazelnuts"
                        },
                        "checked": "on",
                        "checkers_tags": [
                          "moon-rabbit"
                        ],
                        "ciqual_food_name_tags": [
                          "chocolate-spread-with-hazelnuts"
                        ],
                        "cities_tags": [],
                        "code": "3017620422003",
                        "codes_tags": [
                          "code-13",
                          "3017620422xxx",
                          "301762042xxxx",
                          "30176204xxxxx",
                          "3017620xxxxxx",
                          "301762xxxxxxx",
                          "30176xxxxxxxx",
                          "3017xxxxxxxxx",
                          "301xxxxxxxxxx",
                          "30xxxxxxxxxxx",
                          "3xxxxxxxxxxxx"
                        ],
                        "compared_to_category": "en:cocoa-and-hazelnuts-spreads",
                        "complete": 0,
                        "completeness": 0.875,
                        "conservation_conditions": "A conserver au sec et à l'abri de la chaleur. Ne pas mettre au réfrigérateur.",
                        "conservation_conditions_fr": "A conserver au sec et à l'abri de la chaleur. Ne pas mettre au réfrigérateur.",
                        "correctors_tags": [
                          "user1",
                          "user2",
                          "user3",
                          "user4"
                        ],
                        "countries": "en:Algeria  Austria  Belgium  Canada  France  Germany  Italy  Luxembourg  Mexico  Morocco  Netherlands  Portugal  Senegal  Spain  Switzerland  Tunisia  United Kingdom  United States",
                        "countries_beforescanbot": "Belgium,France",
                        "countries_hierarchy": [
                          "en:Algeria  Austria  Belgium  Canada  France  Germany  Italy  Luxembourg  Mexico  Morocco  Netherlands  Portugal  Senegal  Spain  Switzerland  Tunisia  United Kingdom  United States"
                        ],
                        "countries_lc": "fr",
                        "countries_tags": [
                          "en:algeria-austria-belgium-canada-france-germany-italy-luxembourg-mexico-morocco-netherlands-portugal-senegal-spain-switzerland-tunisia-united-kingdom-united-states"
                        ],
                        "created_t": 1457680652,
                        "creator": "openfoodfacts-contributors",
                        "customer_service": "FERRERO FRANCE COMMERCIALE - Service Consommateurs, CS 90058 - 76136 MONT SAINT AIGNAN Cedex",
                        "customer_service_fr": "FERRERO FRANCE COMMERCIALE - Service Consommateurs, CS 90058 - 76136 MONT SAINT AIGNAN Cedex",
                        "data_quality_bugs_tags": [],
                        "data_quality_errors_tags": [],
                        "data_quality_info_tags": [
                          "en:packaging-data-incomplete",
                          "en:ingredients-percent-analysis-ok",
                          "en:ecoscore-extended-data-computed",
                          "en:ecoscore-extended-data-less-precise-than-agribalyse",
                          "en:food-groups-1-known",
                          "en:food-groups-2-known",
                          "en:food-groups-3-unknown"
                        ],
                        "data_quality_tags": [
                          "en:packaging-data-incomplete",
                          "en:ingredients-percent-analysis-ok",
                          "en:ecoscore-extended-data-computed",
                          "en:ecoscore-extended-data-less-precise-than-agribalyse",
                          "en:food-groups-1-known",
                          "en:food-groups-2-known",
                          "en:food-groups-3-unknown",
                          "en:ecoscore-origins-of-ingredients-origins-are-100-percent-unknown",
                          "en:ecoscore-packaging-unspecified-shape",
                          "en:ecoscore-production-system-no-label"
                        ],
                        "data_quality_warnings_tags": [
                          "en:ecoscore-origins-of-ingredients-origins-are-100-percent-unknown",
                          "en:ecoscore-packaging-unspecified-shape",
                          "en:ecoscore-production-system-no-label"
                        ],
                        "data_sources": "Database - FoodRepo / openfood.ch, Databases, Producer - Ferrero, Producers, App - yuka, Apps, Producer - ferrero-france-commerciale, Database - Equadis, Database - GDSN, App - InFood, App - Open Food Facts, App - halal-healthy, App - smoothie-openfoodfacts",
                        "data_sources_tags": [
                          "database-foodrepo-openfood-ch",
                          "databases",
                          "producer-ferrero",
                          "producers",
                          "app-yuka",
                          "apps",
                          "producer-ferrero-france-commerciale",
                          "database-equadis",
                          "database-gdsn",
                          "app-infood",
                          "app-open-food-facts",
                          "app-halal-healthy",
                          "app-smoothie-openfoodfacts"
                        ],
                        "ecoscore_data": {
                          "adjustments": {
                            "origins_of_ingredients": {
                              "aggregated_origins": [
                                {
                                  "origin": "en:unknown",
                                  "percent": 100
                                }
                              ],
                              "epi_score": 0,
                              "epi_value": -5,
                              "origins_from_origins_field": [
                                "en:unknown"
                              ],
                              "transportation_scores": {
                                "fr": 0,
                                "no": 0,
                                "uk": 0,
                                "us": 0,
                                "world": 0
                              },
                              "transportation_values": {
                                "fr": 0,
                                "no": 0,
                                "uk": 0,
                                "us": 0,
                                "world": 0
                              },
                              "values": {
                                "fr": -5,
                                "no": -5,
                                "uk": -5,
                                "us": -5,
                                "world": -5
                              },
                              "warning": "origins_are_100_percent_unknown"
                            },
                            "packaging": {
                              "non_recyclable_and_non_biodegradable_materials": 0,
                              "packagings": [
                                {
                                  "ecoscore_material_score": 81,
                                  "ecoscore_shape_ratio": 1,
                                  "material": "en:clear-glass",
                                  "shape": "en:unknown"
                                }
                              ],
                              "score": 81,
                              "value": -2,
                              "warning": "unspecified_shape"
                            },
                            "production_system": {
                              "labels": [],
                              "value": 0,
                              "warning": "no_label"
                            },
                            "threatened_species": {
                              "ingredient": "en:palm-oil",
                              "value": -10
                            }
                          },
                          "agribalyse": {
                            "agribalyse_food_code": "31032",
                            "co2_agriculture": 8.7770996,
                            "co2_consumption": 0,
                            "co2_distribution": 0.014104999,
                            "co2_packaging": 0.18864842,
                            "co2_processing": 0.69167973,
                            "co2_total": 9.8742343,
                            "co2_transportation": 0.19708507,
                            "code": "31032",
                            "dqr": "2.54",
                            "ef_agriculture": 0.61477708,
                            "ef_consumption": 0,
                            "ef_distribution": 0.0045906531,
                            "ef_packaging": 0.020453714,
                            "ef_processing": 0.085674643,
                            "ef_total": 0.74366703,
                            "ef_transportation": 0.017824104,
                            "is_beverage": 0,
                            "name_en": "Chocolate spread with hazelnuts",
                            "name_fr": "Pâte à tartiner chocolat et noisette",
                            "score": 40
                          },
                          "grade": "d",
                          "grades": {
                            "fr": "d",
                            "no": "d",
                            "uk": "d",
                            "us": "d",
                            "world": "d"
                          },
                          "missing": {
                            "labels": 1,
                            "origins": 1,
                            "packagings": 1
                          },
                          "missing_data_warning": 1,
                          "score": 23,
                          "scores": {
                            "fr": 23,
                            "no": 23,
                            "uk": 23,
                            "us": 23,
                            "world": 23
                          },
                          "status": "known"
                        },
                        "ecoscore_extended_data": {
                          "impact": {
                            "ef_single_score_log_stddev": 0.0539895633164057,
                            "likeliest_impacts": {
                              "Climate_change": 0.172717449218484,
                              "EF_single_score": 0.023255035815491
                            },
                            "likeliest_recipe": {
                              "en:emulsifier": 0.388589430098073,
                              "en:hazelnut_oil": 12.806852015349,
                              "en:palm_oil": 16.6103749736231,
                              "en:sugar": 52.9709312507153,
                              "en:water": 4.90093151221936,
                              "fr:Cacao_Maigre_7": 3.94056985087663,
                              "fr:Lait__cr_m__En_Poudre_8": 6.8959972390341
                            },
                            "mass_ratio_uncharacterized": 0.11,
                            "uncharacterized_ingredients": {
                              "impact": [
                                "fr:Lait Écrémé En Poudre 8",
                                "fr:Cacao Maigre 7"
                              ],
                              "nutrition": [
                                "fr:Lait Écrémé En Poudre 8",
                                "fr:Cacao Maigre 7"
                              ]
                            },
                            "uncharacterized_ingredients_mass_proportion": {
                              "impact": 0.11,
                              "nutrition": 0.11
                            },
                            "uncharacterized_ingredients_ratio": {
                              "impact": 0.333333333333333,
                              "nutrition": 0.333333333333333
                            },
                            "warnings": [
                              "The product has a high number of nutrition uncharacterized ingredients: 33%",
                              "The product has a high number of impact uncharacterized ingredients: 33%",
                              "The estimated mass of nutrition uncharacterized ingredients in the product is high: 11%",
                              "The estimated mass of impact uncharacterized ingredients in the product is high: 11%"
                            ]
                          }
                        },
                        "ecoscore_extended_data_version": "4",
                        "ecoscore_grade": "d",
                        "ecoscore_score": 23,
                        "ecoscore_tags": [
                          "d"
                        ],
                        "editors_tags": [
                          "user1",
                          "user2",
                          "user3",
                          "user4"
                        ],
                        "emb_codes": "",
                        "emb_codes_20141016": "",
                        "emb_codes_orig": "",
                        "emb_codes_tags": [],
                        "entry_dates_tags": [
                          "2016-03-11",
                          "2016-03",
                          "2016"
                        ],
                        "environment_impact_level": "",
                        "environment_impact_level_tags": [],
                        "expiration_date": "09/2021",
                        "food_groups": "en:sweets",
                        "food_groups_tags": [
                          "en:sugary-snacks",
                          "en:sweets"
                        ],
                        "fruits-vegetables-nuts_100g_estimate": 0,
                        "generic_name": "",
                        "generic_name_ar": "نوتلا",
                        "generic_name_de": "Nuss-Nougat-Creme",
                        "generic_name_en": "",
                        "generic_name_es": "Crema de Avellanas con cacao",
                        "generic_name_fr": "Pâte à tartiner aux noisettes",
                        "generic_name_id": "",
                        "generic_name_it": "Nutella",
                        "generic_name_nl": "",
                        "grades": {},
                        "id": "3017620422003",
                        "image_front_small_url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.200.jpg",
                        "image_front_thumb_url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.100.jpg",
                        "image_front_url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.400.jpg",
                        "image_nutrition_small_url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.200.jpg",
                        "image_nutrition_thumb_url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.100.jpg",
                        "image_nutrition_url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.400.jpg",
                        "image_small_url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.200.jpg",
                        "image_thumb_url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.100.jpg",
                        "image_url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.400.jpg",
                        "images": {
                          "1": {
                            "sizes": {
                              "100": {
                                "h": 100,
                                "w": 56
                              },
                              "400": {
                                "h": 400,
                                "w": 225
                              },
                              "full": {
                                "h": 2000,
                                "w": 1125
                              }
                            },
                            "uploaded_t": "1457680652",
                            "uploader": "openfoodfacts-contributors"
                          },
                          "2": {
                            "sizes": {
                              "100": {
                                "h": 100,
                                "w": 75
                              },
                              "400": {
                                "h": 400,
                                "w": 300
                              },
                              "full": {
                                "h": 3264,
                                "w": 2448
                              }
                            },
                            "uploaded_t": "1462829284",
                            "uploader": "openfoodfacts-contributors"
                          },
                          "3": {
                            "sizes": {
                              "100": {
                                "h": 100,
                                "w": 56
                              },
                              "400": {
                                "h": 400,
                                "w": 225
                              },
                              "full": {
                                "h": 2000,
                                "w": 1125
                              }
                            },
                            "uploaded_t": "1468510986",
                            "uploader": "user3"
                          },
                          "front_en": {
                            "angle": "0",
                            "coordinates_image_size": "full",
                            "geometry": "0x0-0-0",
                            "imgid": "1",
                            "normalize": "false",
                            "rev": "399",
                            "sizes": {
                              "100": {
                                "h": 100,
                                "w": 77
                              },
                              "200": {
                                "h": 200,
                                "w": 155
                              },
                              "400": {
                                "h": 400,
                                "w": 310
                              },
                              "full": {
                                "h": 1808,
                                "w": 1400
                              }
                            },
                            "white_magic": "false",
                            "x1": "0",
                            "x2": "0",
                            "y1": "0",
                            "y2": "0"
                          },
                          "front_fr": {
                            "angle": 0,
                            "coordinates_image_size": "400",
                            "geometry": "0x0--5--5",
                            "imgid": "2",
                            "normalize": "false",
                            "rev": "415",
                            "sizes": {
                              "100": {
                                "h": 100,
                                "w": 77
                              },
                              "200": {
                                "h": 200,
                                "w": 155
                              },
                              "400": {
                                "h": 400,
                                "w": 310
                              },
                              "full": {
                                "h": 1808,
                                "w": 1400
                              }
                            },
                            "white_magic": "false",
                            "x1": "-1",
                            "x2": "-1",
                            "y1": "-1",
                            "y2": "-1"
                          },
                          "ingredients_fr": {
                            "angle": null,
                            "coordinates_image_size": "400",
                            "geometry": "0x0-0-0",
                            "imgid": "3",
                            "normalize": null,
                            "rev": "299",
                            "sizes": {
                              "100": {
                                "h": 16,
                                "w": 100
                              },
                              "200": {
                                "h": 33,
                                "w": 200
                              },
                              "400": {
                                "h": 65,
                                "w": 400
                              },
                              "full": {
                                "h": 334,
                                "w": 2046
                              }
                            },
                            "white_magic": null,
                            "x1": null,
                            "x2": null,
                            "y1": null,
                            "y2": null
                          },
                          "nutrition_en": {
                            "angle": "0",
                            "coordinates_image_size": "full",
                            "geometry": "0x0-0-0",
                            "imgid": "3",
                            "normalize": "false",
                            "rev": "400",
                            "sizes": {
                              "100": {
                                "h": 100,
                                "w": 96
                              },
                              "200": {
                                "h": 200,
                                "w": 192
                              },
                              "400": {
                                "h": 400,
                                "w": 383
                              },
                              "full": {
                                "h": 572,
                                "w": 548
                              }
                            },
                            "white_magic": "false",
                            "x1": "0",
                            "x2": "0",
                            "y1": "0",
                            "y2": "0"
                          },
                          "packaging_fr": {
                            "angle": 0,
                            "coordinates_image_size": "full",
                            "geometry": "0x0--1--1",
                            "imgid": "3",
                            "normalize": null,
                            "rev": "420",
                            "sizes": {
                              "100": {
                                "h": 31,
                                "w": 100
                              },
                              "200": {
                                "h": 61,
                                "w": 200
                              },
                              "400": {
                                "h": 122,
                                "w": 400
                              },
                              "full": {
                                "h": 638,
                                "w": 2084
                              }
                            },
                            "white_magic": null,
                            "x1": "-1",
                            "x2": "-1",
                            "y1": "-1",
                            "y2": "-1"
                          }
                        },
                        "informers_tags": [
                          "user1",
                          "user2",
                          "user3",
                          "user4"
                        ],
                        "ingredients": [
                          {
                            "id": "en:sugar",
                            "percent_estimate": 46.5,
                            "percent_max": 63,
                            "percent_min": 30,
                            "text": "sugar",
                            "vegan": "yes",
                            "vegetarian": "yes"
                          },
                          {
                            "from_palm_oil": "yes",
                            "id": "en:palm-oil",
                            "percent_estimate": 25.5,
                            "percent_max": 38,
                            "percent_min": 13,
                            "text": "palm oil",
                            "vegan": "yes",
                            "vegetarian": "yes"
                          },
                          {
                            "id": "en:hazelnut",
                            "percent": 13,
                            "percent_estimate": 13,
                            "percent_max": 13,
                            "percent_min": 13,
                            "text": "hazelnuts",
                            "vegan": "yes",
                            "vegetarian": "yes"
                          },
                          {
                            "id": "en:skim-milk-powder-8",
                            "percent": 7,
                            "percent_estimate": 7,
                            "percent_max": 7,
                            "percent_min": 7,
                            "text": "skim milk powder 8"
                          },
                          {
                            "id": "en:lean-cocoa-7",
                            "percent": 4,
                            "percent_estimate": 4,
                            "percent_max": 4,
                            "percent_min": 4,
                            "text": "lean cocoa 7"
                          },
                          {
                            "id": "en:emulsifier",
                            "ingredients": [
                              {
                                "id": "en:soya-lecithin",
                                "percent_estimate": 2,
                                "percent_max": 4,
                                "percent_min": 0,
                                "text": "soy lecithins",
                                "vegan": "yes",
                                "vegetarian": "yes"
                              }
                            ],
                            "percent_estimate": 2,
                            "percent_max": 4,
                            "percent_min": 0,
                            "text": "emulsifiers"
                          },
                          {
                            "id": "en:vanillin",
                            "percent_estimate": 2,
                            "percent_max": 4,
                            "percent_min": 0,
                            "text": "vanillin"
                          }
                        ],
                        "ingredients_analysis": {
                          "en:palm-oil": [
                            "en:palm-oil"
                          ],
                          "en:vegan-status-unknown": [
                            "en:skim-milk-powder-8",
                            "en:lean-cocoa-7",
                            "en:vanillin"
                          ],
                          "en:vegetarian-status-unknown": [
                            "en:skim-milk-powder-8",
                            "en:lean-cocoa-7",
                            "en:vanillin"
                          ]
                        },
                        "ingredients_analysis_tags": [
                          "en:palm-oil",
                          "en:vegan-status-unknown",
                          "en:vegetarian-status-unknown"
                        ],
                        "ingredients_from_or_that_may_be_from_palm_oil_n": 0,
                        "ingredients_from_palm_oil_n": 0,
                        "ingredients_from_palm_oil_tags": [],
                        "ingredients_hierarchy": [
                          "en:sugar",
                          "en:added-sugar",
                          "en:disaccharide",
                          "en:palm-oil",
                          "en:oil-and-fat",
                          "en:vegetable-oil-and-fat",
                          "en:palm-oil-and-fat",
                          "en:hazelnut",
                          "en:nut",
                          "en:tree-nut",
                          "en:skim-milk-powder-8",
                          "en:lean-cocoa-7",
                          "en:emulsifier",
                          "en:vanillin",
                          "en:soya-lecithin",
                          "en:e322",
                          "en:e322i"
                        ],
                        "ingredients_n": 8,
                        "ingredients_n_tags": [
                          "8",
                          "1-10"
                        ],
                        "ingredients_original_tags": [
                          "en:sugar",
                          "en:palm-oil",
                          "en:hazelnut",
                          "en:skim-milk-powder-8",
                          "en:lean-cocoa-7",
                          "en:emulsifier",
                          "en:vanillin",
                          "en:soya-lecithin"
                        ],
                        "ingredients_percent_analysis": 1,
                        "ingredients_tags": [
                          "en:sugar",
                          "en:added-sugar",
                          "en:disaccharide",
                          "en:palm-oil",
                          "en:oil-and-fat",
                          "en:vegetable-oil-and-fat",
                          "en:palm-oil-and-fat",
                          "en:hazelnut",
                          "en:nut",
                          "en:tree-nut",
                          "en:skim-milk-powder-8",
                          "en:lean-cocoa-7",
                          "en:emulsifier",
                          "en:vanillin",
                          "en:soya-lecithin",
                          "en:e322",
                          "en:e322i"
                        ],
                        "ingredients_text": "sugar, palm oil,  hazelnuts 13%, skim milk powder 8, 7%, lean cocoa 7, 4%, emulsifiers: soy lecithins, vanillin",
                        "ingredients_text_en": "sugar, palm oil,  hazelnuts 13%, skim milk powder 8, 7%, lean cocoa 7, 4%, emulsifiers: soy lecithins, vanillin",
                        "ingredients_text_fr": "Sucre, huile de palme, _NOISETTES_ 13%, _LAIT_ écrémé en poudre 8,7%, cacao maigre 7,4%, émulsifiants: lécithine [SOJA]; vanilline. Sans gluten",
                        "ingredients_text_with_allergens": "sugar, palm oil,  <span class=\"allergen\">hazelnuts</span> 13%, skim milk powder 8, 7%, lean cocoa 7, 4%, emulsifiers: soy lecithins, vanillin",
                        "ingredients_text_with_allergens_en": "sugar, palm oil,  <span class=\"allergen\">hazelnuts</span> 13%, skim milk powder 8, 7%, lean cocoa 7, 4%, emulsifiers: soy lecithins, vanillin",
                        "ingredients_text_with_allergens_fr": "Sucre, huile de palme, <span class=\"allergen\">NOISETTES</span> 13%, <span class=\"allergen\">LAIT</span> écrémé en poudre 8,7%, cacao maigre 7,4%, émulsifiants: lécithine [<span class=\"allergen\">SOJA</span>]; vanilline. Sans gluten",
                        "ingredients_that_may_be_from_palm_oil_n": 0,
                        "ingredients_that_may_be_from_palm_oil_tags": [],
                        "ingredients_with_specified_percent_n": 3,
                        "ingredients_with_specified_percent_sum": 24,
                        "ingredients_with_unspecified_percent_n": 4,
                        "ingredients_with_unspecified_percent_sum": 76,
                        "interface_version_created": "20120622",
                        "interface_version_modified": "20150316.jqm2",
                        "known_ingredients_n": 15,
                        "labels": "Sans gluten,en:nonorganic",
                        "labels_hierarchy": [
                          "en:no-gluten",
                          "en:nonorganic"
                        ],
                        "labels_lc": "fr",
                        "labels_tags": [
                          "en:no-gluten",
                          "en:nonorganic"
                        ],
                        "lang": "en",
                        "languages": {
                          "en:arabic": 2,
                          "en:english": 4,
                          "en:french": 10,
                          "en:german": 3,
                          "en:italian": 3,
                          "en:spanish": 7
                        },
                        "languages_codes": {
                          "en": 4,
                          "fr": 10
                        },
                        "languages_hierarchy": [
                          "en:english",
                          "en:french"
                        ],
                        "languages_tags": [
                          "en:english",
                          "en:french",
                          "en:multilingual"
                        ],
                        "last_check_dates_tags": [
                          "2021-07-21",
                          "2021-07",
                          "2021"
                        ],
                        "last_checked_t": 1626872806,
                        "last_checker": "user3",
                        "last_edit_dates_tags": [
                          "2022-07-29",
                          "2022-07",
                          "2022"
                        ],
                        "last_editor": "user4",
                        "last_image_dates_tags": [
                          "2022-07-29",
                          "2022-07",
                          "2022"
                        ],
                        "last_image_t": 1659084293,
                        "last_modified_by": "user4",
                        "last_modified_t": 1659084329,
                        "lc": "en",
                        "link": "",
                        "main_countries_tags": [],
                        "manufacturing_places": "",
                        "manufacturing_places_tags": [],
                        "max_imgid": "121",
                        "minerals_prev_tags": [],
                        "minerals_tags": [],
                        "misc_tags": [
                          "en:nutrition-no-fiber",
                          "en:nutrition-fruits-vegetables-nuts-estimate-from-ingredients",
                          "en:nutrition-no-fiber-or-fruits-vegetables-nuts",
                          "en:nutriscore-computed",
                          "en:ecoscore-extended-data-computed",
                          "en:ecoscore-extended-data-version-4",
                          "en:ecoscore-missing-data-warning",
                          "en:ecoscore-missing-data-labels",
                          "en:ecoscore-missing-data-origins",
                          "en:ecoscore-missing-data-packagings",
                          "en:ecoscore-computed"
                        ],
                        "no_nutrition_data": "null",
                        "nova_group": 4,
                        "nova_groups": "4",
                        "nova_groups_markers": {
                          "3": [
                            [
                              "ingredients",
                              "en:sugar"
                            ]
                          ],
                          "4": [
                            [
                              "additives",
                              "en:e322"
                            ],
                            [
                              "ingredients",
                              "en:emulsifier"
                            ]
                          ]
                        },
                        "nova_groups_tags": [
                          "en:4-ultra-processed-food-and-drink-products"
                        ],
                        "nucleotides_prev_tags": [],
                        "nucleotides_tags": [],
                        "nutrient_levels": {
                          "fat": "high",
                          "salt": "low",
                          "saturated-fat": "high",
                          "sugars": "high"
                        },
                        "nutrient_levels_tags": [
                          "en:fat-in-high-quantity",
                          "en:saturated-fat-in-high-quantity",
                          "en:sugars-in-high-quantity",
                          "en:salt-in-low-quantity"
                        ],
                        "nutriments": {
                          "alcohol": 0,
                          "alcohol_100g": 0,
                          "alcohol_serving": 0,
                          "alcohol_unit": "% vol",
                          "alcohol_value": 0,
                          "carbohydrates": 57.5,
                          "carbohydrates_100g": 57.5,
                          "carbohydrates_serving": 8.62,
                          "carbohydrates_unit": "g",
                          "carbohydrates_value": 57.5,
                          "carbon-footprint-from-known-ingredients_product": 135,
                          "carbon-footprint-from-known-ingredients_serving": 5.07,
                          "energy": 2252,
                          "energy-kcal": 539,
                          "energy-kcal_100g": 539,
                          "energy-kcal_serving": 80.8,
                          "energy-kcal_unit": "kcal",
                          "energy-kcal_value": 539,
                          "energy-kj": 2252,
                          "energy-kj_100g": 2252,
                          "energy-kj_serving": 338,
                          "energy-kj_unit": "kJ",
                          "energy-kj_value": 2252,
                          "energy_100g": 2252,
                          "energy_serving": 338,
                          "energy_unit": "kJ",
                          "energy_value": 2252,
                          "fat": 30.9,
                          "fat_100g": 30.9,
                          "fat_serving": 4.63,
                          "fat_unit": "g",
                          "fat_value": 30.9,
                          "fruits-vegetables-nuts-estimate-from-ingredients_100g": 13,
                          "fruits-vegetables-nuts-estimate-from-ingredients_serving": 13,
                          "nova-group": 4,
                          "nova-group_100g": 4,
                          "nova-group_serving": 4,
                          "nutrition-score-fr": 26,
                          "nutrition-score-fr_100g": 26,
                          "proteins": 6.3,
                          "proteins_100g": 6.3,
                          "proteins_serving": 0.945,
                          "proteins_unit": "g",
                          "proteins_value": 6.3,
                          "salt": 0.107,
                          "salt_100g": 0.107,
                          "salt_serving": 0.016,
                          "salt_unit": "g",
                          "salt_value": 0.107,
                          "saturated-fat": 10.6,
                          "saturated-fat_100g": 10.6,
                          "saturated-fat_serving": 1.59,
                          "saturated-fat_unit": "g",
                          "saturated-fat_value": 10.6,
                          "sodium": 0.0428,
                          "sodium_100g": 0.0428,
                          "sodium_serving": 0.00642,
                          "sodium_unit": "g",
                          "sodium_value": 0.0428,
                          "sugars": 56.3,
                          "sugars_100g": 56.3,
                          "sugars_serving": 8.44,
                          "sugars_unit": "g",
                          "sugars_value": 56.3
                        },
                        "nutriscore_data": {
                          "energy": 2252,
                          "energy_points": 6,
                          "energy_value": 2252,
                          "fiber": 0,
                          "fiber_points": 0,
                          "fiber_value": 0,
                          "fruits_vegetables_nuts_colza_walnut_olive_oils": 13,
                          "fruits_vegetables_nuts_colza_walnut_olive_oils_points": 0,
                          "fruits_vegetables_nuts_colza_walnut_olive_oils_value": 13,
                          "grade": "e",
                          "is_beverage": 0,
                          "is_cheese": 0,
                          "is_fat": 0,
                          "is_water": 0,
                          "negative_points": 26,
                          "positive_points": 0,
                          "proteins": 6.3,
                          "proteins_points": 3,
                          "proteins_value": 6.3,
                          "saturated_fat": 10.6,
                          "saturated_fat_points": 10,
                          "saturated_fat_ratio": 34.3042071197411,
                          "saturated_fat_ratio_points": 5,
                          "saturated_fat_ratio_value": 34.3,
                          "saturated_fat_value": 10.6,
                          "score": 26,
                          "sodium": 42.8,
                          "sodium_points": 0,
                          "sodium_value": 42.8,
                          "sugars": 56.3,
                          "sugars_points": 10,
                          "sugars_value": 56.3
                        },
                        "nutriscore_grade": "e",
                        "nutriscore_score": 26,
                        "nutriscore_score_opposite": -26,
                        "nutrition_data": "on",
                        "nutrition_data_per": "100g",
                        "nutrition_data_prepared": "",
                        "nutrition_data_prepared_per": "100g",
                        "nutrition_grade_fr": "e",
                        "nutrition_grades": "e",
                        "nutrition_grades_tags": [
                          "e"
                        ],
                        "nutrition_score_beverage": 0,
                        "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients": 1,
                        "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value": 13,
                        "nutrition_score_warning_no_fiber": 1,
                        "obsolete": "",
                        "obsolete_since_date": "",
                        "origin": "",
                        "origins": "",
                        "origins_hierarchy": [],
                        "origins_lc": "fr",
                        "origins_tags": [],
                        "other_nutritional_substances_tags": [],
                        "owner": "org-ferrero-france-commerciale",
                        "owners_tags": "org-ferrero-france-commerciale",
                        "packaging": "PP 5 Ummi PLASTIQUE / PLASTIEK PAP 27 WWW PAPIER / PAPIER CIPAP 82 PANNEAU DE FIBRE COMPOSITES/ COMPOSIET VEZELPLAAT GL 70 VERRE / GLAS",
                        "packaging_hierarchy": [
                          "fr:PP 5 Ummi PLASTIQUE / PLASTIEK PAP 27 WWW PAPIER / PAPIER CIPAP 82 PANNEAU DE FIBRE COMPOSITES/ COMPOSIET VEZELPLAAT GL 70 VERRE / GLAS"
                        ],
                        "packaging_lc": "fr",
                        "packaging_tags": [
                          "fr:pp-5-ummi-plastique-plastiek-pap-27-www-papier-papier-cipap-82-panneau-de-fibre-composites-composiet-vezelplaat-gl-70-verre-glas"
                        ],
                        "packaging_text": "",
                        "packaging_text_ar": "",
                        "packaging_text_de": "",
                        "packaging_text_en": "",
                        "packaging_text_es": "Pot en verre, couvercle en plastique.",
                        "packaging_text_fr": "1 couvercle plastique blanc opaque PP à jeter,\r\n1 plaque en carton PAP 21 à recycler,\r\n1 opercule en carton C/PAP 82 à recycler,\r\n1 pot en verre à recycler",
                        "packaging_text_id": "",
                        "packaging_text_it": "",
                        "packaging_text_nl": "",
                        "packagings": [
                          {
                            "material": "en:clear-glass"
                          }
                        ],
                        "photographers_tags": [
                          "user1",
                          "user2",
                          "user3",
                          "user4"
                        ],
                        "pnns_groups_1": "Sugary snacks",
                        "pnns_groups_1_tags": [
                          "sugary-snacks",
                          "known"
                        ],
                        "pnns_groups_2": "Sweets",
                        "pnns_groups_2_tags": [
                          "sweets",
                          "known"
                        ],
                        "popularity_key": 20999992556,
                        "popularity_tags": [
                          "top-10-scans-2021",
                          "top-50-scans-2021",
                          "top-100-scans-2021",
                          "top-500-scans-2021",
                          "top-1000-scans-2021",
                          "top-5000-scans-2021",
                          "top-10000-scans-2021",
                          "top-50000-scans-2021",
                          "top-100000-scans-2021",
                          "top-10-fr-scans-2021",
                          "top-50-fr-scans-2021",
                          "top-100-fr-scans-2021",
                          "top-500-fr-scans-2021",
                          "top-1000-fr-scans-2021",
                          "top-5000-fr-scans-2021",
                          "top-10000-fr-scans-2021",
                          "top-50000-fr-scans-2021",
                          "top-100000-fr-scans-2021",
                          "top-country-fr-scans-2021",
                          "at-least-5-fr-scans-2021",
                          "at-least-10-fr-scans-2021"
                        ],
                        "product_name": "Nutella",
                        "product_name_ar": "نوتيلا",
                        "product_name_de": "Nutella",
                        "product_name_en": "Nutella",
                        "product_name_es": "Nutella",
                        "product_name_fr": "Pâte à tartiner Nutella noisettes et cacao - 400g",
                        "product_name_id": "",
                        "product_name_it": "Nutella",
                        "product_name_nl": "",
                        "product_quantity": "400",
                        "purchase_places": "F - 77480 Mousseaux les Bray  France",
                        "purchase_places_tags": [
                          "f-77480-mousseaux-les-bray-france"
                        ],
                        "quantity": "400g",
                        "removed_countries_tags": [],
                        "rev": 421,
                        "scans_n": 3713,
                        "scores": {},
                        "selected_images": {
                          "front": {
                            "display": {
                              "en": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.400.jpg",
                              "fr": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_fr.415.400.jpg"
                            },
                            "small": {
                              "en": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.200.jpg",
                              "fr": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_fr.415.200.jpg"
                            },
                            "thumb": {
                              "en": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.100.jpg",
                              "fr": "https://images.openfoodfacts.org/images/products/301/762/042/2003/front_fr.415.100.jpg"
                            }
                          },
                          "ingredients": {
                            "display": {
                              "fr": "https://images.openfoodfacts.org/images/products/301/762/042/2003/ingredients_fr.299.400.jpg"
                            },
                            "small": {
                              "fr": "https://images.openfoodfacts.org/images/products/301/762/042/2003/ingredients_fr.299.200.jpg"
                            },
                            "thumb": {
                              "fr": "https://images.openfoodfacts.org/images/products/301/762/042/2003/ingredients_fr.299.100.jpg"
                            }
                          },
                          "nutrition": {
                            "display": {
                              "en": "https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.400.jpg"
                            },
                            "small": {
                              "en": "https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.200.jpg"
                            },
                            "thumb": {
                              "en": "https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.100.jpg"
                            }
                          },
                          "packaging": {
                            "display": {
                              "fr": "https://images.openfoodfacts.org/images/products/301/762/042/2003/packaging_fr.420.400.jpg"
                            },
                            "small": {
                              "fr": "https://images.openfoodfacts.org/images/products/301/762/042/2003/packaging_fr.420.200.jpg"
                            },
                            "thumb": {
                              "fr": "https://images.openfoodfacts.org/images/products/301/762/042/2003/packaging_fr.420.100.jpg"
                            }
                          }
                        },
                        "serving_quantity": "15",
                        "serving_size": "15g",
                        "sortkey": 1610877517,
                        "sources": [
                          {
                            "fields": [
                              "product_name_de",
                              "product_name_it",
                              "brands",
                              "countries"
                            ],
                            "id": "openfood-ch",
                            "images": [],
                            "import_t": 1548767279,
                            "manufacturer": "0",
                            "name": "FoodRepo",
                            "source_licence": "Creative Commons Attribution 4.0 International License",
                            "source_licence_url": "https://creativecommons.org/licenses/by/4.0/",
                            "url": "https://www.foodrepo.org/ch/products/19413"
                          },
                          {
                            "fields": [
                              "packaging",
                              "ingredients_text_fr"
                            ],
                            "id": "ferrero",
                            "images": [],
                            "import_t": 1552318840,
                            "manufacturer": "1",
                            "name": "Ferrero",
                            "url": "https://www.ferrero.fr"
                          }
                        ],
                        "sources_fields": {
                          "org-gs1": {
                            "gln": "3010176200101",
                            "gpcCategoryCode": "10000187",
                            "gpcCategoryName": "Pâtes à Tartiner Sucrées (Longue Conservation)",
                            "isAllergenRelevantDataProvided": "true",
                            "lastChangeDateTime": "2022-07-13T16:01:41+02:00",
                            "partyName": "FERRERO FRANCE COMMERCIALE",
                            "productionVariantDescription": "2014",
                            "publicationDateTime": "2022-07-13T16:01:41+02:00"
                          }
                        },
                        "states": "en:to-be-completed, en:nutrition-facts-completed, en:ingredients-completed, en:expiration-date-completed, en:packaging-code-to-be-completed, en:characteristics-to-be-completed, en:origins-to-be-completed, en:categories-completed, en:brands-completed, en:packaging-completed, en:quantity-completed, en:product-name-completed, en:photos-to-be-validated, en:packaging-photo-to-be-selected, en:nutrition-photo-selected, en:ingredients-photo-to-be-selected, en:front-photo-selected, en:photos-uploaded",
                        "states_hierarchy": [
                          "en:to-be-completed",
                          "en:nutrition-facts-completed",
                          "en:ingredients-completed",
                          "en:expiration-date-completed",
                          "en:packaging-code-to-be-completed",
                          "en:characteristics-to-be-completed",
                          "en:origins-to-be-completed",
                          "en:categories-completed",
                          "en:brands-completed",
                          "en:packaging-completed",
                          "en:quantity-completed",
                          "en:product-name-completed",
                          "en:photos-to-be-validated",
                          "en:packaging-photo-to-be-selected",
                          "en:nutrition-photo-selected",
                          "en:ingredients-photo-to-be-selected",
                          "en:front-photo-selected",
                          "en:photos-uploaded"
                        ],
                        "states_tags": [
                          "en:to-be-completed",
                          "en:nutrition-facts-completed",
                          "en:ingredients-completed",
                          "en:expiration-date-completed",
                          "en:packaging-code-to-be-completed",
                          "en:characteristics-to-be-completed",
                          "en:origins-to-be-completed",
                          "en:categories-completed",
                          "en:brands-completed",
                          "en:packaging-completed",
                          "en:quantity-completed",
                          "en:product-name-completed",
                          "en:photos-to-be-validated",
                          "en:packaging-photo-to-be-selected",
                          "en:nutrition-photo-selected",
                          "en:ingredients-photo-to-be-selected",
                          "en:front-photo-selected",
                          "en:photos-uploaded"
                        ],
                        "stores": "Bi1  Magasins U  Carrefour  Franprix  Auchan  Casino  Intermarché,carrefour.fr",
                        "stores_tags": [
                          "bi1-magasins-u-carrefour-franprix-auchan-casino-intermarche",
                          "carrefour-fr"
                        ],
                        "teams": "pain-au-chocolat,shark-attack,stakano,chocolatine,la-robe-est-bleue,vegan,m,b,c,vegancheck",
                        "teams_tags": [
                          "pain-au-chocolat",
                          "shark-attack",
                          "stakano",
                          "chocolatine",
                          "la-robe-est-bleue",
                          "vegan",
                          "m",
                          "b",
                          "c",
                          "vegancheck"
                        ],
                        "traces": "",
                        "traces_from_ingredients": "",
                        "traces_from_user": "(fr) ",
                        "traces_hierarchy": [],
                        "traces_lc": "fr",
                        "traces_tags": [],
                        "unique_scans_n": 2544,
                        "unknown_ingredients_n": 2,
                        "unknown_nutrients_tags": [],
                        "update_key": "ing20220322",
                        "vitamins_prev_tags": [],
                        "vitamins_tags": []
                      },
                      "status": 1,
                      "status_verbose": "product found"
                    }
                  },
                  "knowledge-panels": {
                    "summary": "retrieved knowledge_panels values for a well known chocolate and nut spread",
                    "value": {
                      "code": "3017620422003",
                      "product": {
                        "knowledge_panels": {
                          "additive_en:e322": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<p>Lecithins are natural compounds commonly used in the food industry as\nemulsifiers and stabilizers.</p>\n<p>Extracted from sources like soybeans and eggs, lecithins consist of\nphospholipids that enhance the mixing of oil and water, ensuring smooth\ntextures in various products like chocolates, dressings, and baked goods.</p>\n<p><strong>They do not present any known health risks</strong>.</p>"
                                }
                              }
                            ],
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "title": "E322 - Lecithins"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "additive_en:e322i": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<p>Lecithins are natural compounds commonly used in the food industry as\nemulsifiers and stabilizers.</p>\n<p>Extracted from sources like soybeans and eggs, lecithins consist of\nphospholipids that enhance the mixing of oil and water, ensuring smooth\ntextures in various products like chocolates, dressings, and baked goods.</p>\n<p><strong>They do not present any known health risks</strong>.</p>"
                                }
                              }
                            ],
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "title": "E322i - Lecithin"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "additives": {
                            "elements": [
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "additive_en:e322"
                                }
                              },
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "additive_en:e322i"
                                }
                              }
                            ],
                            "expanded": true,
                            "level": "info",
                            "topics": [
                              "health"
                            ],
                            "type": "inline"
                          },
                          "carbon_footprint": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                    <p>The carbon emission figure comes from ADEME's Agribalyse database, for the category: \n                    <a href=\"https://agribalyse.ademe.fr/app/aliments/31032\">Chocolate spread with hazelnuts</a>\n                    (Source: ADEME Agribalyse Database)\n                    </p>\n                    ",
                                  "type": "summary"
                                }
                              },
                              {
                                "element_type": "table",
                                "table_element": {
                                  "columns": [
                                    {
                                      "text": "Stage",
                                      "type": "text"
                                    },
                                    {
                                      "text": "Impact",
                                      "type": "percent"
                                    }
                                  ],
                                  "id": "ecoscore_carbon_impact_by_stages_table",
                                  "rows": [
                                    {
                                      "id": "agriculture",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/agriculture.svg",
                                          "text": "Agriculture"
                                        },
                                        {
                                          "percent": 90.5494290591038,
                                          "text": "90.5 %"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "processing",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/processing.svg",
                                          "text": "Processing"
                                        },
                                        {
                                          "percent": 4.03519782830842,
                                          "text": "4.0 %"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "packaging",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/packaging.svg",
                                          "text": "Packaging"
                                        },
                                        {
                                          "percent": 2.25666518142997,
                                          "text": "2.3 %"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "transportation",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/transportation.svg",
                                          "text": "Transportation"
                                        },
                                        {
                                          "percent": 2.93050779084989,
                                          "text": "2.9 %"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "distribution",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/distribution.svg",
                                          "text": "Distribution"
                                        },
                                        {
                                          "percent": 0.228200140307944,
                                          "text": "0.2 %"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "consumption",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/consumption.svg",
                                          "text": "Consumption"
                                        },
                                        {
                                          "percent": 0,
                                          "text": "0.0 %"
                                        }
                                      ]
                                    }
                                  ],
                                  "table_type": "percents",
                                  "title": "Details of the impacts by stages of the life cycle"
                                }
                              }
                            ],
                            "evaluation": "bad",
                            "expanded": false,
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/car.svg",
                              "subtitle": "756 g CO₂e per 100g of product",
                              "title": "Equal to driving 3.9 km in a petrol car"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "ecoscore": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "Select a country in order to include the full impact of transportation.",
                                  "type": "warning"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "The <a href=\"https://world.openfoodfacts.org/ecoscore\">Eco-Score</a> is an experimental score that summarizes the environmental impacts of food products."
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                    \n                        The Eco-Score was initially developped for France and it is being extended to other European countries. The Eco-Score formula is subject to change as it is regularly improved to make it more precise and better suited to each country.\n                                    \n                ",
                                  "type": "note"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_ids": [
                                    "ecoscore_agribalyse"
                                  ],
                                  "title": "Life cycle analysis"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_ids": [
                                    "ecoscore_origins_of_ingredients",
                                    "ecoscore_threatened_species",
                                    "ecoscore_packaging"
                                  ],
                                  "title": "Bonuses and maluses"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_ids": [
                                    "ecoscore_total"
                                  ],
                                  "title": "Eco-Score for this product"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<p>&rarr; <a href=\"https://world.openfoodfacts.org/eco-score-the-environmental-impact-of-food-products\">Learn more about the Eco-Score</a></p>\n"
                                }
                              }
                            ],
                            "level": "info",
                            "title_element": {
                              "grade": "c",
                              "icon_url": "https://static.openfoodfacts.org/images/attributes/dist/ecoscore-c.svg",
                              "name": "Eco-Score",
                              "title": "Eco-Score C - Moderate environmental impact",
                              "type": "grade"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "ecoscore_agribalyse": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                    <p>Category: \n                    <a href=\"https://agribalyse.ademe.fr/app/aliments/31032\">Chocolate spread with hazelnuts</a>\n                    </p>\n                    <ul>\n                        <li>\n                            PEF environmental score: 0.53\n                            (the lower the score, the lower the impact)\n                        </li>\n                        <li>\n                            including impact on climate change: 7.56\n                            kg CO2 eq/kg of product\n                        </li>\n                    </ul>\n                    ",
                                  "type": "summary"
                                }
                              },
                              {
                                "element_type": "table",
                                "table_element": {
                                  "columns": [
                                    {
                                      "text": "Stage",
                                      "type": "text"
                                    },
                                    {
                                      "text": "Impact",
                                      "type": "percent"
                                    }
                                  ],
                                  "id": "ecoscore_lca_impacts_by_stages_table",
                                  "rows": [
                                    {
                                      "id": "agriculture",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/agriculture.svg",
                                          "text": "Agriculture"
                                        },
                                        {
                                          "percent": 82.9320249125877,
                                          "text": "82.9 %"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "processing",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/processing.svg",
                                          "text": "Processing"
                                        },
                                        {
                                          "percent": 8.90284006527072,
                                          "text": "8.9 %"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "packaging",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/packaging.svg",
                                          "text": "Packaging"
                                        },
                                        {
                                          "percent": 3.47194186866257,
                                          "text": "3.5 %"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "transportation",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/transportation.svg",
                                          "text": "Transportation"
                                        },
                                        {
                                          "percent": 3.83105471997208,
                                          "text": "3.8 %"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "distribution",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/distribution.svg",
                                          "text": "Distribution"
                                        },
                                        {
                                          "percent": 0.862138433506908,
                                          "text": "0.9 %"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "consumption",
                                      "values": [
                                        {
                                          "icon_url": "https://static.openfoodfacts.org/images/icons/dist/consumption.svg",
                                          "text": "Consumption"
                                        },
                                        {
                                          "percent": 0,
                                          "text": "0.0 %"
                                        }
                                      ]
                                    }
                                  ],
                                  "table_type": "percents",
                                  "title": "Details of the impacts by stages of the life cycle"
                                }
                              }
                            ],
                            "level": "info",
                            "title_element": {
                              "grade": "c",
                              "icon_color_from_evaluation": true,
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/lca.svg",
                              "subtitle": "Category: Chocolate spread with hazelnuts",
                              "title": "Average impact of products of the same category: C (Score: 51/100)",
                              "type": "grade"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "ecoscore_origins_of_ingredients": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                <strong>Environmental policy: +4</strong><br>\n                <strong>Transportation: 0</strong><br>\n                ",
                                  "type": "default"
                                }
                              },
                              {
                                "element_type": "table",
                                "table_element": {
                                  "columns": [
                                    {
                                      "text": "Origin of the product and/or its ingredients",
                                      "type": "text"
                                    },
                                    {
                                      "text": "% of ingredients",
                                      "type": "percent"
                                    },
                                    {
                                      "text": "Impact",
                                      "type": "text"
                                    }
                                  ],
                                  "id": "ecoscore_origins_of_ingredients_table",
                                  "rows": [
                                    {
                                      "values": [
                                        {
                                          "text": "France"
                                        },
                                        {
                                          "evaluation": "neutral",
                                          "percent": 100,
                                          "text": "100 %"
                                        },
                                        {
                                          "evaluation": "neutral",
                                          "text": "Medium"
                                        }
                                      ]
                                    }
                                  ],
                                  "title": "Origins of ingredients"
                                }
                              }
                            ],
                            "evaluation": "average",
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/public.svg",
                              "subtitle": "Bonus: +4",
                              "title": "Origins of ingredients with a medium impact"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "ecoscore_packaging": {
                            "elements": [
                              {
                                "element_type": "table",
                                "table_element": {
                                  "columns": [
                                    {
                                      "text": "Shape",
                                      "type": "text"
                                    },
                                    {
                                      "text": "Material",
                                      "type": "text"
                                    },
                                    {
                                      "text": "Recycling",
                                      "type": "text"
                                    },
                                    {
                                      "text": "Impact",
                                      "type": "text"
                                    }
                                  ],
                                  "id": "ecoscore_packaging_components",
                                  "rows": [
                                    {
                                      "values": [
                                        {
                                          "text": "1 Pot"
                                        },
                                        {
                                          "text": "Clear Glass"
                                        },
                                        {
                                          "text": "Recycle in glass bin"
                                        },
                                        {
                                          "evaluation": "good",
                                          "text": "Low"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "text": "1 Lid"
                                        },
                                        {
                                          "text": "PP 5 - Polypropylene"
                                        },
                                        {
                                          "text": "Recycle with plastics - metal and bricks"
                                        },
                                        {
                                          "evaluation": "bad",
                                          "text": "High"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "text": "1 Backing"
                                        },
                                        {
                                          "text": "Non-corrugated cardboard"
                                        },
                                        {
                                          "text": "Recycle in paper bin"
                                        },
                                        {
                                          "evaluation": "good",
                                          "text": "Low"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "text": "1 Seal"
                                        },
                                        {
                                          "text": "82 C/PAP"
                                        },
                                        {
                                          "text": "Recycle with plastics - metal and bricks"
                                        },
                                        {
                                          "evaluation": "bad",
                                          "text": "High"
                                        }
                                      ]
                                    }
                                  ],
                                  "title": "Packaging parts"
                                }
                              }
                            ],
                            "evaluation": "average",
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/packaging.svg",
                              "subtitle": "Malus: -5",
                              "title": "Packaging with a medium impact"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "ecoscore_production_system": {
                            "evaluation": "neutral",
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/agriculture.svg",
                              "title": "No labels with environmental benefits"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "ecoscore_threatened_species": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                        <p><strong>Contains palm oil</strong></p> \n                        <p>Tropical forests in Asia, Africa and Latin America are destroyed to create and expand oil palm tree plantations. The deforestation contributes to climate change, and it endangers species such as the orangutan, the pigmy elephant and the Sumatran rhino.</p> \n                        ",
                                  "type": "summary"
                                }
                              }
                            ],
                            "evaluation": "bad",
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/monkey_unhappy.svg",
                              "subtitle": "Malus: -10",
                              "title": "Ingredients that threatens species"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "ecoscore_total": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                Life cycle analysis score: 51<br>\n                Sum of bonuses and maluses:\n                    \n                        -11\n                    <br><br>\n                Final score: 40/100\n                \n                ",
                                  "type": "summary"
                                }
                              }
                            ],
                            "level": "info",
                            "title_element": {
                              "grade": "c",
                              "icon_url": "https://static.openfoodfacts.org/images/attributes/dist/ecoscore-c.svg",
                              "subtitle": "Product: Nutella - 400 g",
                              "title": "Impact for this product: C (Score: 40/100)",
                              "type": "grade"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "environment_card": {
                            "elements": [
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "ecoscore"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_ids": [
                                    "carbon_footprint"
                                  ],
                                  "title": "Carbon footprint"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "image": {
                                    "alt": "Nutella - Recycling instructions and/or packaging information",
                                    "id": "packaging_en",
                                    "lc": "en",
                                    "sizes": {
                                      "100": {
                                        "height": 38,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/packaging_en.526.100.jpg",
                                        "width": 100
                                      },
                                      "200": {
                                        "height": 76,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/packaging_en.526.200.jpg",
                                        "width": 200
                                      },
                                      "400": {
                                        "height": 152,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/packaging_en.526.400.jpg",
                                        "width": 400
                                      },
                                      "full": {
                                        "height": 474,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/packaging_en.526.full.jpg",
                                        "width": 1249
                                      }
                                    },
                                    "type": "packaging"
                                  },
                                  "panel_group_id": "packaging_recycling",
                                  "panel_ids": [
                                    "packaging_recycling"
                                  ],
                                  "title": "Packaging"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_ids": [
                                    "origins_of_ingredients"
                                  ],
                                  "title": "Transportation"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_ids": [
                                    "palm_oil"
                                  ],
                                  "title": "Threatened species"
                                }
                              }
                            ],
                            "expanded": true,
                            "title_element": {
                              "title": "Environment"
                            },
                            "topics": [
                              "environment"
                            ],
                            "type": "card"
                          },
                          "health_card": {
                            "elements": [
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "image": {
                                    "alt": "Nutella - Nutrition facts - fr",
                                    "id": "nutrition_fr",
                                    "lc": "fr",
                                    "sizes": {
                                      "100": {
                                        "height": 94,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_fr.651.100.jpg",
                                        "width": 100
                                      },
                                      "200": {
                                        "height": 189,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_fr.651.200.jpg",
                                        "width": 200
                                      },
                                      "400": {
                                        "height": 377,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_fr.651.400.jpg",
                                        "width": 400
                                      },
                                      "full": {
                                        "height": 1675,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_fr.651.full.jpg",
                                        "width": 1776
                                      }
                                    },
                                    "type": "nutrition"
                                  },
                                  "panel_group_id": "nutrition",
                                  "panel_ids": [
                                    "nutriscore_2023",
                                    "nutrient_levels"
                                  ],
                                  "title": "Nutrition",
                                  "type": "subcard"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_ids": [
                                    "nutrition_facts_table",
                                    "serving_size"
                                  ],
                                  "title": ""
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "image": {
                                    "alt": "Nutella - Ingredients",
                                    "id": "ingredients_en",
                                    "lc": "en",
                                    "sizes": {
                                      "100": {
                                        "height": 100,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/ingredients_en.521.100.jpg",
                                        "width": 78
                                      },
                                      "200": {
                                        "height": 200,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/ingredients_en.521.200.jpg",
                                        "width": 156
                                      },
                                      "400": {
                                        "height": 400,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/ingredients_en.521.400.jpg",
                                        "width": 313
                                      },
                                      "full": {
                                        "height": 1468,
                                        "url": "https://images.openfoodfacts.org/images/products/301/762/042/2003/ingredients_en.521.full.jpg",
                                        "width": 1147
                                      }
                                    },
                                    "type": "ingredients"
                                  },
                                  "panel_group_id": "ingredients",
                                  "panel_ids": [
                                    "ingredients"
                                  ],
                                  "title": "Ingredients",
                                  "type": "subcard"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_ids": [
                                    "nova"
                                  ],
                                  "title": "Food processing"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_ids": [
                                    "additives"
                                  ],
                                  "title": "Additives"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_ids": [
                                    "ingredients_analysis",
                                    "ingredients_analysis_details"
                                  ],
                                  "title": "Ingredients analysis"
                                }
                              }
                            ],
                            "expanded": true,
                            "title_element": {
                              "title": "Health"
                            },
                            "topics": [
                              "health"
                            ],
                            "type": "card"
                          },
                          "incomplete_or_incorrect_data": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                If the information does not match the information on the packaging, you can complete or correct it. Thank you!\n                Open Food Facts is a collaborative database, and every contribution is useful for all.\n                "
                                }
                              },
                              {
                                "action_element": {
                                  "actions": [
                                    "edit_product"
                                  ],
                                  "html": ""
                                },
                                "element_type": "action"
                              }
                            ],
                            "evaluation": "neutral",
                            "expand_for": "large",
                            "level": "info",
                            "title_element": {
                              "icon_url": "https://static.openfoodfacts.org/images/logos/off-logo-icon-light.svg",
                              "subtitle": "Category, labels, ingredients, allergens, nutritional information, photos etc.",
                              "title": "Incomplete or incorrect information?"
                            },
                            "topics": [
                              "problem"
                            ]
                          },
                          "ingredients": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "edit_field_id": "ingredients_text_en",
                                  "edit_field_type": "ingredients_text",
                                  "edit_field_value": "Sugar, Modified Palm Oil, Hazelnuts, Skim Milk Powder, Cocoa, Sunflower Lecithin, Vanillin",
                                  "html": "Sugar, Modified Palm Oil, <span class=\"allergen\">Hazelnuts</span>, Skim Milk Powder, Cocoa, Sunflower Lecithin, Vanillin",
                                  "language": "English",
                                  "lc": "en"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<strong>Allergens:</strong> \n                    Milk, Nuts, Soybeans\n                "
                                }
                              }
                            ],
                            "evaluation": "unknown",
                            "expand_for": "large",
                            "expanded": false,
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/ingredients.svg",
                              "title": "9 ingredients"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "ingredients_analysis": {
                            "elements": [
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "ingredients_analysis_en:palm-oil"
                                }
                              },
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "ingredients_analysis_en:non-vegan"
                                }
                              },
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "ingredients_analysis_en:vegetarian-status-unknown"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "The analysis is based solely on the ingredients listed and does not take into account processing methods."
                                }
                              }
                            ],
                            "expanded": true,
                            "level": "info",
                            "topics": [
                              "health"
                            ],
                            "type": "inline"
                          },
                          "ingredients_analysis_details": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "fr: <span>Sucre</span>, <span>huile de palme</span>, <span>NOISETTES</span> 13%, <span>cacao maigre</span> 7.4%, <span>LAIT écrémé en poudre</span> 6.6%, <span>LACTOSERUM en poudre</span>, <span>émulsifiants</span> (<span>lécithines de SOJA</span>), <span>vanilline</span>"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<ol id=\"ordered_ingredients_list\">\n<li><span>Sucre</span> -> en:sugar - vegan:&nbsp;yes - vegetarian:&nbsp;yes - ciqual_proxy_food_code:&nbsp;31016 - percent_min:&nbsp;16.7 - percent_max:&nbsp;60</li>\n<li><span>huile de palme</span> -> en:palm-oil - vegan:&nbsp;yes - vegetarian:&nbsp;yes - from_palm_oil:&nbsp;yes - ciqual_food_code:&nbsp;16129 - percent_min:&nbsp;13 - percent_max:&nbsp;36.5</li>\n<li><span>NOISETTES</span> -> en:hazelnut - vegan:&nbsp;yes - vegetarian:&nbsp;yes - ciqual_food_code:&nbsp;15004 - percent_min:&nbsp;13 - percent:&nbsp;13 - percent_max:&nbsp;13</li>\n<li><span>cacao maigre</span> -> en:fat-reduced-cocoa - vegan:&nbsp;yes - vegetarian:&nbsp;yes - ciqual_proxy_food_code:&nbsp;18100 - percent_min:&nbsp;7.4 - percent:&nbsp;7.4 - percent_max:&nbsp;7.4</li>\n<li><span>LAIT écrémé en poudre</span> -> en:skimmed-milk-powder - vegan:&nbsp;no - vegetarian:&nbsp;yes - ciqual_food_code:&nbsp;19054 - percent_min:&nbsp;6.6 - percent:&nbsp;6.6 - percent_max:&nbsp;6.6</li>\n<li><span>LACTOSERUM en poudre</span> -> en:whey-powder - vegan:&nbsp;no - vegetarian:&nbsp;maybe - percent_min:&nbsp;0 - percent_max:&nbsp;6.6</li>\n<li><span>émulsifiants</span> -> en:emulsifier - percent_min:&nbsp;0 - percent_max:&nbsp;6.6<ol id=\"ordered_ingredients_list\">\n<li><span>lécithines de SOJA</span> -> en:soya-lecithin - vegan:&nbsp;yes - vegetarian:&nbsp;yes - ciqual_food_code:&nbsp;42200 - percent_min:&nbsp;0 - percent_max:&nbsp;6.6</li>\n</ol>\n</li>\n<li><span>vanilline</span> -> en:vanillin - percent_min:&nbsp;0 - percent_max:&nbsp;6.6</li>\n</ol>\n"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": ""
                                }
                              }
                            ],
                            "evaluation": "unknown",
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/off-magnifying-glass.svg",
                              "title": "Details of the analysis of the ingredients"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "ingredients_analysis_en:non-vegan": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                \n                    <strong>Non-vegan ingredients:</strong>\n                    Skimmed milk powder, Whey powder\n                \n                    ",
                                  "type": "summary"
                                }
                              },
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "ingredients_analysis_help"
                                }
                              }
                            ],
                            "evaluation": "bad",
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/leaf.svg",
                              "title": "Non-vegan"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "ingredients_analysis_en:palm-oil": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                \n                    <strong>Ingredients that contain palm oil:</strong>\n                    Palm oil\n                \n                    ",
                                  "type": "summary"
                                }
                              }
                            ],
                            "evaluation": "bad",
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/palm-oil.svg",
                              "title": "Palm oil"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "ingredients_analysis_en:vegetarian-status-unknown": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                \n                    <strong>Unrecognized ingredients:</strong>\n                    Vanillin\n                \n                    ",
                                  "type": "summary"
                                }
                              },
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "ingredients_analysis_help"
                                }
                              }
                            ],
                            "evaluation": "unknown",
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/vegetarian.svg",
                              "title": "Vegetarian status unknown"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nova": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n\n    \n        \n            <p>Elements that indicate the product is in the 4 - Ultra processed food and drink products group:</p>\n            <ul>\n            \n                <li>Additive: E322 - Lecithins</li>\n            \n                <li>Ingredient: Emulsifier</li>\n            \n                <li>Ingredient: Whey</li>\n            \n            </ul>\n        \n    \n\n"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<p>Food products are classified into 4 groups according to their degree of processing:</p>\n<ol>\n<li>Unprocessed or minimally processed foods</li>\n<li>Processed culinary ingredients</li>\n<li>Processed foods</li>\n<li>Ultra-processed foods</li>\n</ol>\n<br>\n<p>The determination of the group is based on the category of the product and on the ingredients it contains.</p>\n<p>&rarr; <a href=\"https://world.openfoodfacts.org/nova\">Learn more about the NOVA classification</a></p>\n"
                                }
                              }
                            ],
                            "level": "info",
                            "title_element": {
                              "icon_url": "https://static.openfoodfacts.org/images/attributes/dist/nova-group-4.svg",
                              "title": "Ultra-processed foods"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutrient_level_fat": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<b>What you need to know</b>\n<ul>\n<li>A high consumption of fat, especially saturated fats, can raise cholesterol, which increases the risk of heart diseases.</li>\n</ul>\n<br>\n<b>Recommendation</b>:\n<b>Limit the consumption of fat and saturated fat</b>\n<ul>\n<li>Choose products with lower fat and saturated fat content.</li>\n</ul>\n",
                                  "type": "summary"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n",
                                  "source_language": "en",
                                  "source_text": "National Health Service UK (NHS) - Fat: the facts",
                                  "source_url": "https://www.nhs.uk/live-well/eat-well/food-types/different-fats-nutrition/",
                                  "type": "summary"
                                }
                              }
                            ],
                            "evaluation": "bad",
                            "half_width_on_mobile": true,
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/misc/high.svg",
                              "name": "Fat",
                              "title": "Fat in high quantity (30.9%)",
                              "type": "percentage",
                              "value": 30.9
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutrient_level_salt": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<b>What you need to know</b>\n<ul>\n<li>A high consumption of salt (or sodium) can cause raised blood pressure, which can increase the risk of heart disease and stroke.</li>\n<li>Many people who have high blood pressure do not know it, as there are often no symptoms.</li>\n<li>Most people consume too much salt (on average 9 to 12 grams per day), around twice the recommended maximum level of intake.</li>\n</ul>\n<br>\n<b>Recommendation</b>:\n<b>Limit the consumption of salt and salted food</b>\n<ul>\n<li>Reduce the quantity of salt used when cooking, and don't salt again at the table.</li>\n<li>Limit the consumption of salty snacks and choose products with lower salt content.</li>\n</ul>\n",
                                  "type": "summary"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n",
                                  "source_language": "en",
                                  "source_text": "World Health Organization (WHO) - Fact sheet - Salt reduction",
                                  "source_url": "https://www.who.int/news-room/fact-sheets/detail/salt-reduction",
                                  "type": "summary"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n",
                                  "source_language": "en",
                                  "source_text": "National Health Service UK (NHS) - Salt: the facts",
                                  "source_url": "https://www.nhs.uk/live-well/eat-well/food-types/salt-nutrition/",
                                  "type": "summary"
                                }
                              }
                            ],
                            "evaluation": "good",
                            "half_width_on_mobile": true,
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/misc/low.svg",
                              "name": "Salt",
                              "title": "Salt in low quantity (0.107%)",
                              "type": "percentage",
                              "value": 0.107
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutrient_level_saturated-fat": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<b>What you need to know</b>\n<ul>\n<li>A high consumption of fat, especially saturated fats, can raise cholesterol, which increases the risk of heart diseases.</li>\n</ul>\n<br>\n<b>Recommendation</b>:\n<b>Limit the consumption of fat and saturated fat</b>\n<ul>\n<li>Choose products with lower fat and saturated fat content.</li>\n</ul>\n",
                                  "type": "summary"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n",
                                  "source_language": "en",
                                  "source_text": "National Health Service UK (NHS) - Fat: the facts",
                                  "source_url": "https://www.nhs.uk/live-well/eat-well/food-types/different-fats-nutrition/",
                                  "type": "summary"
                                }
                              }
                            ],
                            "evaluation": "bad",
                            "half_width_on_mobile": true,
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/misc/high.svg",
                              "name": "Saturated fat",
                              "title": "Saturated fat in high quantity (10.6%)",
                              "type": "percentage",
                              "value": 10.6
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutrient_level_sugars": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<b>What you need to know</b>\n<ul>\n<li>A high consumption of sugar can cause weight gain and tooth decay. It also augments the risk of type 2 diabetes and cardio-vascular diseases.</li>\n</ul>\n<br>\n<b>Recommendation</b>:\n<b>Limit the consumption of sugar and sugary drinks</b>\n<ul>\n<li>Sugary drinks (such as sodas, fruit beverages, and fruit juices and nectars) should be limited as much as possible (no more than 1 glass a day).</li>\n<li>Choose products with lower sugar content and reduce the consumption of products with added sugars.</li>\n</ul>\n",
                                  "type": "summary"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n",
                                  "source_language": "en",
                                  "source_text": "National Health Service UK (NHS) - Sugar: the facts",
                                  "source_url": "https://www.nhs.uk/live-well/eat-well/food-types/how-does-sugar-in-our-diet-affect-our-health/",
                                  "type": "summary"
                                }
                              }
                            ],
                            "evaluation": "bad",
                            "half_width_on_mobile": true,
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/misc/high.svg",
                              "name": "Sugars",
                              "title": "Sugars in high quantity (56.3%)",
                              "type": "percentage",
                              "value": 56.3
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutrient_levels": {
                            "elements": [
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "panel_group_id": "nutrient_levels_group",
                                  "panel_ids": [
                                    "nutrient_level_fat",
                                    "nutrient_level_saturated-fat",
                                    "nutrient_level_sugars",
                                    "nutrient_level_salt"
                                  ]
                                }
                              }
                            ],
                            "evaluation": "unknown",
                            "expand_for": "large",
                            "expanded": false,
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/nutrition.svg",
                              "title": "Nutrient levels"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutriscore_2023": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "Warning: the amount of fruits, vegetables and nuts is not specified on the label, it was estimated from the list of ingredients: 13\n                    ",
                                  "type": "warning"
                                }
                              },
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "nutriscore_description"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "evaluation": "bad",
                                  "icon_color_from_evaluation": true,
                                  "icon_size": "small",
                                  "icon_url": "https://static.openfoodfacts.org/images/icons/dist/circle-minus.svg",
                                  "panel_ids": [
                                    "nutriscore_component_energy",
                                    "nutriscore_component_sugars",
                                    "nutriscore_component_saturated_fat",
                                    "nutriscore_component_salt"
                                  ],
                                  "title": "Negative points: 31/55"
                                }
                              },
                              {
                                "element_type": "panel_group",
                                "panel_group_element": {
                                  "evaluation": "good",
                                  "icon_color_from_evaluation": true,
                                  "icon_size": "small",
                                  "icon_url": "https://static.openfoodfacts.org/images/icons/dist/circle-plus.svg",
                                  "panel_ids": [
                                    "nutriscore_component_fiber",
                                    "nutriscore_component_fruits_vegetables_legumes"
                                  ],
                                  "title": "Positive points: 0/10"
                                }
                              },
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "nutriscore_details"
                                }
                              }
                            ],
                            "level": "info",
                            "title_element": {
                              "grade": "e",
                              "icon_url": "https://static.openfoodfacts.org/images/attributes/dist/nutriscore-e-new-en.svg",
                              "subtitle": "Bad nutritional quality",
                              "title": "Nutri-Score E",
                              "type": "grade"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutriscore_component_energy": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n<p>\n    \n    Energy intakes above energy requirements are associated with increased risks of weight gain, overweight, obesity, and consequently risk of diet-related chronic diseases.\n</p>\n                "
                                }
                              }
                            ],
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_url": "https://static.openfoodfacts.org/images/attributes/dist/points-negative-6-10.svg",
                              "subtitle": "6/10 points (2252kJ)",
                              "title": "Calories"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutriscore_component_fiber": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n<p>\n    Consuming foods rich in fiber (especially whole grain foods) reduces the risks of aerodigestive cancers, cardiovascular diseases, obesity and diabetes.\n    \n</p>\n                "
                                }
                              }
                            ],
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_url": "https://static.openfoodfacts.org/images/attributes/dist/points-positive-0-5.svg",
                              "subtitle": "0/5 points (unknown)",
                              "title": "Fiber"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutriscore_component_fruits_vegetables_legumes": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n<p>\n    Consuming foods rich in fruits, vegetables and legumes reduces the risks of aerodigestive cancers, cardiovascular diseases, obesity and diabetes.\n    \n</p>\n                "
                                }
                              }
                            ],
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_url": "https://static.openfoodfacts.org/images/attributes/dist/points-positive-0-5.svg",
                              "subtitle": "0/5 points (0%)",
                              "title": "Fruits, vegetables and legumes"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutriscore_component_salt": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n<p>\n    \n    A high consumption of salt (or sodium) can cause raised blood pressure, which can increase the risk of heart disease and stroke.\n</p>\n                "
                                }
                              }
                            ],
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_url": "https://static.openfoodfacts.org/images/attributes/dist/points-negative-0-20.svg",
                              "subtitle": "0/20 points (0.11g)",
                              "title": "Salt"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutriscore_component_saturated_fat": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n<p>\n    \n    A high consumption of fat, especially saturated fats, can raise cholesterol, which increases the risk of heart diseases.\n</p>\n                "
                                }
                              }
                            ],
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_url": "https://static.openfoodfacts.org/images/attributes/dist/points-negative-10-10.svg",
                              "subtitle": "10/10 points (10.6g)",
                              "title": "Saturated fat"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutriscore_component_sugars": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n<p>\n    \n    A high consumption of sugar can cause weight gain and tooth decay. It also augments the risk of type 2 diabetes and cardio-vascular diseases.\n</p>\n                "
                                }
                              }
                            ],
                            "level": "info",
                            "size": "small",
                            "title_element": {
                              "icon_url": "https://static.openfoodfacts.org/images/attributes/dist/points-negative-15-15.svg",
                              "subtitle": "15/15 points (56.3g)",
                              "title": "Sugar"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutriscore_description": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<p>The Nutri-Score is a logo on the overall nutritional quality of products.</p>\n<p>\nThe score from A to E is calculated based on nutrients and foods to favor (proteins, fiber, fruits, vegetables and legumes ...) and nutrients to limit (calories, saturated fat, sugars, salt).\nThe score is calculated from the data of the nutrition facts table and the composition data (fruits, vegetables and legumes).\n</p>\n\n                ",
                                  "type": "info"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "<p>&rarr; <a href=\"https://world.openfoodfacts.org/nutriscore\">Learn more about the Nutri-Score</a></p>\n"
                                }
                              }
                            ],
                            "level": "info",
                            "title_element": {
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/info.svg",
                              "title": "What is the Nutri-Score?",
                              "type": "info"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutriscore_details": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "Warning: the amount of fruits, vegetables and nuts is not specified on the label, it was estimated from the list of ingredients: 13\n                    ",
                                  "type": "warning"
                                }
                              },
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n\n    <p>This product is not considered a beverage for the calculation of the Nutri-Score.</p>\n\n\n\n\n\n<p>Points for proteins are not counted because the negative points greater than or equal to 11.</p>\n\n<p>\n  <strong>Nutritional score: 31</strong>\n  (31 - 0)\n</p>\n<p><strong>Nutri-Score: E</strong></p>                \n                "
                                }
                              }
                            ],
                            "level": "info",
                            "title_element": {
                              "icon_size": "small",
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/info.svg",
                              "title": "Details of the calculation of the Nutri-Score",
                              "type": "info"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "nutrition_facts_table": {
                            "elements": [
                              {
                                "element_type": "table",
                                "table_element": {
                                  "columns": [
                                    {
                                      "style": "max-width:15rem",
                                      "text": "Nutrition facts",
                                      "type": "text"
                                    },
                                    {
                                      "column_group_id": "product",
                                      "shown_by_default": true,
                                      "text": "As sold<br>for 100 g / 100 ml",
                                      "text_for_small_screens": "100g",
                                      "type": "text"
                                    },
                                    {
                                      "column_group_id": "product",
                                      "shown_by_default": false,
                                      "text": "As sold<br>per serving (15g)",
                                      "text_for_small_screens": "per serving",
                                      "type": "text"
                                    },
                                    {
                                      "column_group_id": "comparisons",
                                      "shown_by_default": true,
                                      "text": "Compared to: Cocoa and hazelnuts spreads",
                                      "type": "text"
                                    }
                                  ],
                                  "id": "nutrition_facts_table",
                                  "rows": [
                                    {
                                      "values": [
                                        {
                                          "level": 0,
                                          "style": "max-width:15rem",
                                          "text": "Energy"
                                        },
                                        {
                                          "text": "2,252 kj<br>(539 kcal)"
                                        },
                                        {
                                          "text": "338 kj<br>(80 kcal)"
                                        },
                                        {
                                          "text": "-1%"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "level": 0,
                                          "style": "max-width:15rem",
                                          "text": "Fat"
                                        },
                                        {
                                          "text": "30.9 g"
                                        },
                                        {
                                          "text": "4.63 g"
                                        },
                                        {
                                          "text": "-9%"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "level": 1,
                                          "style": "max-width:15rem",
                                          "text": "Saturated fat"
                                        },
                                        {
                                          "text": "10.6 g"
                                        },
                                        {
                                          "text": "1.59 g"
                                        },
                                        {
                                          "evaluation": "bad",
                                          "text": "+45%"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "level": 0,
                                          "style": "max-width:15rem",
                                          "text": "Carbohydrates"
                                        },
                                        {
                                          "text": "57.5 g"
                                        },
                                        {
                                          "text": "8.62 g"
                                        },
                                        {
                                          "text": "+12%"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "level": 1,
                                          "style": "max-width:15rem",
                                          "text": "Sugars"
                                        },
                                        {
                                          "text": "56.3 g"
                                        },
                                        {
                                          "text": "8.44 g"
                                        },
                                        {
                                          "evaluation": "bad",
                                          "text": "+21%"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "level": 0,
                                          "style": "max-width:15rem",
                                          "text": "Fiber"
                                        },
                                        {
                                          "text": "-"
                                        },
                                        {
                                          "text": "-"
                                        },
                                        {
                                          "text": ""
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "level": 0,
                                          "style": "max-width:15rem",
                                          "text": "Proteins"
                                        },
                                        {
                                          "text": "6.3 g"
                                        },
                                        {
                                          "text": "0.945 g"
                                        },
                                        {
                                          "text": "-3%"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "level": 0,
                                          "style": "max-width:15rem",
                                          "text": "Salt"
                                        },
                                        {
                                          "text": "0.107 g"
                                        },
                                        {
                                          "text": "0.016 g"
                                        },
                                        {
                                          "text": "+1%"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "level": 0,
                                          "style": "max-width:15rem",
                                          "text": "Fruits‚ vegetables‚ nuts and rapeseed‚ walnut and olive oils (estimate from ingredients list analysis)"
                                        },
                                        {
                                          "text": "13 %"
                                        },
                                        {
                                          "text": "13 %"
                                        },
                                        {
                                          "text": ""
                                        }
                                      ]
                                    }
                                  ],
                                  "title": "Nutrition facts"
                                }
                              }
                            ],
                            "evaluation": "unknown",
                            "expand_for": "large",
                            "expanded": false,
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/scale-balance.svg",
                              "title": "Nutrition facts"
                            },
                            "topics": [
                              "health"
                            ]
                          },
                          "origins_of_ingredients": {
                            "elements": [
                              {
                                "element_type": "table",
                                "table_element": {
                                  "columns": [
                                    {
                                      "text": "Origin of the product and/or its ingredients",
                                      "type": "text"
                                    },
                                    {
                                      "text": "% of ingredients",
                                      "type": "percent"
                                    },
                                    {
                                      "text": "Impact",
                                      "type": "text"
                                    }
                                  ],
                                  "id": "ecoscore_origins_of_ingredients_table",
                                  "rows": [
                                    {
                                      "values": [
                                        {
                                          "text": "France"
                                        },
                                        {
                                          "evaluation": "neutral",
                                          "percent": 100,
                                          "text": "100 %"
                                        },
                                        {
                                          "evaluation": "neutral",
                                          "text": "Medium"
                                        }
                                      ]
                                    }
                                  ],
                                  "table_type": "percents",
                                  "title": "Origins of ingredients"
                                }
                              }
                            ],
                            "evaluation": "average",
                            "expanded": false,
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/public.svg",
                              "subtitle": "Origins of ingredients with a medium impact",
                              "title": "Origins of ingredients"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "packaging_components": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "evaluation": "neutral",
                                  "html": "\n                        \n                            \n                                1 x \n                                <strong>\n                                    Pot\n                                    400g \n                                </strong>\n                                    \n                                        (Clear Glass: 199.94 g)\n                                    \n                                    <br>\n                            \n                        \n                            \n                                1 x \n                                <strong>\n                                    Lid\n                                    400g \n                                </strong>\n                                    \n                                        (PP 5 - Polypropylene: 6.8 g)\n                                    \n                                    <br>\n                            \n                        \n                            \n                                1 x \n                                <strong>\n                                    Backing\n                                    400g \n                                </strong>\n                                    \n                                        (Non-corrugated cardboard: 1.8 g)\n                                    \n                                    <br>\n                            \n                        \n                            \n                                1 x \n                                <strong>\n                                    Seal\n                                    400g \n                                </strong>\n                                    \n                                        (82 C/PAP: 0.4 g)\n                                    \n                                    <br>\n                            \n                        \n                        ",
                                  "icon_alt": "Unknown",
                                  "icon_color_from_evaluation": true,
                                  "icon_url": "https://static.openfoodfacts.org/images/icons/dist/help.svg",
                                  "type": "summary"
                                }
                              }
                            ],
                            "expanded": true,
                            "level": "info",
                            "title_element": {
                              "title": "Packaging parts"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "packaging_materials": {
                            "elements": [
                              {
                                "element_type": "table",
                                "table_element": {
                                  "columns": [
                                    {
                                      "text": "Material",
                                      "type": "text"
                                    },
                                    {
                                      "text": "%",
                                      "type": "text"
                                    },
                                    {
                                      "text": "Packaging weight",
                                      "type": "text"
                                    },
                                    {
                                      "text": "Packaging weight per 100 g of product",
                                      "type": "text"
                                    }
                                  ],
                                  "id": "packaging_materials",
                                  "rows": [
                                    {
                                      "values": [
                                        {
                                          "text": "Paper or cardboard"
                                        },
                                        {
                                          "text": "0.9%"
                                        },
                                        {
                                          "text": "1.8 g"
                                        },
                                        {
                                          "text": "0.5 g"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "text": "Plastic"
                                        },
                                        {
                                          "text": "3.3%"
                                        },
                                        {
                                          "text": "6.8 g"
                                        },
                                        {
                                          "text": "1.7 g"
                                        }
                                      ]
                                    },
                                    {
                                      "values": [
                                        {
                                          "text": "Glass"
                                        },
                                        {
                                          "text": "95.7%"
                                        },
                                        {
                                          "text": "199.94 g"
                                        },
                                        {
                                          "text": "50 g"
                                        }
                                      ]
                                    },
                                    {
                                      "style": "font-weight: bold",
                                      "values": [
                                        {
                                          "text": "Total"
                                        },
                                        {
                                          "text": "100%"
                                        },
                                        {
                                          "text": "208.94 g"
                                        },
                                        {
                                          "text": "52.2 g"
                                        }
                                      ]
                                    }
                                  ],
                                  "title": "Packaging materials"
                                }
                              }
                            ],
                            "expanded": true,
                            "level": "info",
                            "title_element": {
                              "title": "Packaging materials"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "packaging_recycling": {
                            "elements": [
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "packaging_components"
                                }
                              },
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "packaging_materials"
                                }
                              }
                            ],
                            "evaluation": "average",
                            "expanded": true,
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/packaging.svg",
                              "title": "Packaging with a medium impact"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "palm_oil": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                    <p>Tropical forests in Asia, Africa and Latin America are destroyed to create and expand oil palm tree plantations. The deforestation contributes to climate change, and it endangers species such as the orangutan, the pigmy elephant and the Sumatran rhino.</p> \n                    ",
                                  "type": "summary"
                                }
                              }
                            ],
                            "evaluation": "bad",
                            "level": "info",
                            "title_element": {
                              "icon_color_from_evaluation": true,
                              "icon_url": "https://static.openfoodfacts.org/images/icons/dist/palm-oil.svg",
                              "subtitle": "Drives deforestation and threatens species such as the orangutan",
                              "title": "Contains palm oil"
                            },
                            "topics": [
                              "environment"
                            ]
                          },
                          "report_problem_card": {
                            "elements": [
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "incomplete_or_incorrect_data"
                                }
                              }
                            ],
                            "expanded": true,
                            "title_element": {
                              "title": "Report a problem"
                            },
                            "topics": [
                              "problems"
                            ],
                            "type": "card"
                          },
                          "root": {
                            "elements": [
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "health_card"
                                }
                              },
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "environment_card"
                                }
                              },
                              {
                                "element_type": "panel",
                                "panel_element": {
                                  "panel_id": "report_problem_card"
                                }
                              }
                            ],
                            "expanded": true,
                            "type": "root"
                          },
                          "serving_size": {
                            "elements": [
                              {
                                "element_type": "text",
                                "text_element": {
                                  "html": "\n                    <strong>Serving size:</strong>\n                    15g\n                "
                                }
                              }
                            ],
                            "expanded": true,
                            "level": "info",
                            "topics": [
                              "health"
                            ],
                            "type": "inline"
                          }
                        }
                      },
                      "status": 1,
                      "status_verbose": "product found"
                    }
                  }
                }
              }
            }
          },
          "302": {
            "description": "Redirect to the correct server for the product type of the requested product",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "description": "URL to the correct server"
                },
                "examples": {
                  "redirect": {
                    "value": "https://world.openbeautyfacts.org/api/v2/product/8710447445990"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/cgi/product_image_upload.pl": {
      "post": {
        "tags": [
          "Images"
        ],
        "summary": "Upload Product Image",
        "operationId": "get-cgi-product_image_upload.pl",
        "description": "Photos are source and proof of data.\nThe first photo uploaded for a product is\nauto-selected as the product’s “front” photo.'\n",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "add_photo_to_existing_product_response",
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "example": "/product/3017620422003/nutella-ferrero"
                          },
                          "filename": {
                            "type": "string",
                            "example": ""
                          },
                          "name": {
                            "type": "string",
                            "example": "Nutella - Ferrero - 400g"
                          },
                          "thumbnailUrl": {
                            "type": "string",
                            "example": "/images/products/301/762/042/2003/123.100.jpg"
                          },
                          "code": {
                            "type": "string",
                            "example": "3017620422003"
                          }
                        }
                      }
                    },
                    "image": {
                      "type": "object",
                      "properties": {
                        "thumb_url": {
                          "type": "string",
                          "example": "123.100.jpg"
                        },
                        "imgid": {
                          "type": "integer",
                          "example": 123
                        },
                        "crop_url": {
                          "type": "string",
                          "example": "123.400.jpg"
                        }
                      }
                    },
                    "imgid": {
                      "type": "integer",
                      "example": 123
                    },
                    "status": {
                      "type": "string",
                      "example": "status ok"
                    },
                    "imagefield": {
                      "type": "string",
                      "example": "front_en"
                    },
                    "code": {
                      "type": "string",
                      "example": "3017620422003"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Barcode of the product\n",
                        "example": "3017620422003"
                      },
                      "imagefield": {
                        "type": "string",
                        "description": "Indicates the type of the image and the corresponding language. It should\nbe in the format `{IMAGE_TYPE}_{LANG}` format, where `IMAGE_TYPE` is one\nof `front|ingredients|nutrition|packaging|other` and `LANG` is the 2\nletter language code. Use `other` if you don't want the image to be\nselected. Note that the first image of a product is always selected as front\npicture.\n",
                        "example": "front_en"
                      },
                      "imgupload_front_en": {
                        "type": "string",
                        "format": "binary",
                        "description": "This field must contain image binary content.\nThe format and extension must be one of gif|jpeg|jpg|png|heic.            \nThis field is dynamic and dependent on the value of imagefield in the\nrequest body. It wil be imgupload_the value of the imagefield stated\nearlier. For example, if `imagefield=front_en`, the name of this field\nshould be `imageupload_front_en`.\n"
                      }
                    },
                    "required": [
                      "code",
                      "imagefield",
                      "imgupload_front_en"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "Properties that goes in change ref\n",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "A comment on the contribution.\nAdding meaningful comments help moderators and users understand a single product history.\n"
                      },
                      "app_name": {
                        "type": "string",
                        "description": "Name of the app providing the information\n"
                      },
                      "app_version": {
                        "type": "string",
                        "description": "Version of the app providing the information\n"
                      },
                      "app_uuid": {
                        "type": "string",
                        "description": "When an app uses a single user to log its contributions,\nit might be interesting to know which user of the app is providing the information.\nYou can use this field to provide an identifier (eg: an sha1 of the username) that's privacy preserving. Make sure that your salt is strong, perfectly random and secret\n\nIn case we have trouble with one of your user, it helps our moderators revert edits.\n"
                      },
                      "User-Agent": {
                        "type": "string",
                        "description": "It is required that you pass a specific User-Agent header when you do an API request.\nBut some times it's not possible to modify such a header\n(eg. request using JavaScript in a browser).\nIn such cases, you can override it with this parameter.\n"
                      }
                    }
                  }
                ]
              }
            }
          },
          "description": ""
        },
        "security": [
          {
            "cookieAuth": [],
            "userAgentAuth": []
          }
        ]
      }
    },
    "/cgi/ingredients.pl": {
      "parameters": [],
      "get": {
        "summary": "OCR on Ingredients",
        "operationId": "get-cgi-ingredients.pl",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ocr_on_product_response",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Open Food Facts uses optical character recognition (OCR) to retrieve nutritional data and other information from the product labels.\n",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "ingredients_en"
            },
            "in": "query",
            "name": "id",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "4251105501381"
            },
            "in": "query",
            "name": "code",
            "description": "Barcode of the product",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "1"
            },
            "in": "query",
            "name": "process_image",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "google_cloud_vision"
            },
            "in": "query",
            "name": "ocr_engine",
            "required": true
          }
        ],
        "tags": [
          "OCR"
        ]
      }
    },
    "/cgi/product_image_crop.pl": {
      "post": {
        "summary": "Select and Crop Image",
        "operationId": "post-cgi-product_image_crop.pl",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "product_image_crop",
                  "properties": {
                    "status": {
                      "type": "string",
                      "examples": [
                        "status ok",
                        "status not ok - image not selected - imgid not in uploaded images",
                        "status not ok - image not selected - image cannot be read"
                      ]
                    },
                    "imgid": {
                      "type": "integer",
                      "description": "identifier of the processed image",
                      "example": 2
                    },
                    "imagefield": {
                      "type": "string",
                      "description": "identifier of the selected image field\n(corresponding to the `id` parameter)\n"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Cropping is only relevant for editing existing products.\nYou cannot crop an image the first time you upload it to the system.\n",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "description": "Select a photo and optionally crop/rotate it.\nThe origin of the cropping coordinates is the top-left corner.\nNote that rotation is applied *before* cropping, so the cropping bounding box\nis relative to the rotated image.\n",
                    "required": [
                      "id",
                      "code",
                      "imgid"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Barcode of the product.",
                        "example": "04963406"
                      },
                      "imgid": {
                        "type": "integer",
                        "description": "identifier of the image to select, it should be a number",
                        "example": 2
                      },
                      "id": {
                        "type": "string",
                        "description": "identifier of the selected image field, should be in the format\n`{IMAGE_TYPE}_{LANG}` format, where `IMAGE_TYPE` is one of\n`front|ingredients|nutrition|packaging|other` and `LANG` is the 2 letter\nlanguage code.\nNote that if you select an image for the main language of the product (ex:\n`ingredients_it` if `it` is the main language), this image will be\ndisplayed on Product Opener for all languages (ex: on\n`https://fr.openfoodfacts.org`, unless `ingredients_fr` exists).\n",
                        "example": "front_en"
                      },
                      "x1": {
                        "type": "integer",
                        "example": 0,
                        "description": "X origin coordinate of the crop, it must be lower than x2"
                      },
                      "y1": {
                        "type": "integer",
                        "example": 0,
                        "description": "Y origin coordinate of the crop, it must be lower than y2"
                      },
                      "x2": {
                        "type": "integer",
                        "example": 145,
                        "description": "X end coordinate of the crop, it must be higher than x1"
                      },
                      "y2": {
                        "type": "integer",
                        "example": 145,
                        "description": "Y end coordinate of the crop, it must be higher than y1"
                      },
                      "angle": {
                        "type": "integer",
                        "example": 0,
                        "description": "angle of the rotation to apply on the selected image.\npassing `90` as value rotate the image 90 degrees counter-clockwise.\n"
                      },
                      "normalize": {
                        "type": "string",
                        "example": "false",
                        "description": "whether the selected image should be normalized using ImageMagick",
                        "enum": [
                          "true",
                          "false"
                        ]
                      },
                      "white_magic": {
                        "type": "string",
                        "default": "false",
                        "description": "whether the source image should be white magiced (background removal) using\nImageMagick.\n",
                        "enum": [
                          "true",
                          "false"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Properties that goes in change ref\n",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "A comment on the contribution.\nAdding meaningful comments help moderators and users understand a single product history.\n"
                      },
                      "app_name": {
                        "type": "string",
                        "description": "Name of the app providing the information\n"
                      },
                      "app_version": {
                        "type": "string",
                        "description": "Version of the app providing the information\n"
                      },
                      "app_uuid": {
                        "type": "string",
                        "description": "When an app uses a single user to log its contributions,\nit might be interesting to know which user of the app is providing the information.\nYou can use this field to provide an identifier (eg: an sha1 of the username) that's privacy preserving. Make sure that your salt is strong, perfectly random and secret\n\nIn case we have trouble with one of your user, it helps our moderators revert edits.\n"
                      },
                      "User-Agent": {
                        "type": "string",
                        "description": "It is required that you pass a specific User-Agent header when you do an API request.\nBut some times it's not possible to modify such a header\n(eg. request using JavaScript in a browser).\nIn such cases, you can override it with this parameter.\n"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "tags": [
          "Images"
        ]
      },
      "get": {
        "summary": "Rotate Image",
        "operationId": "get-cgi-product_image_crop.pl",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "rotate_a_photo_response",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "status ok"
                    },
                    "imagefield": {
                      "type": "string",
                      "example": "nutrition_fr"
                    },
                    "image": {
                      "type": "object",
                      "properties": {
                        "display_url": {
                          "type": "string",
                          "example": "nutrition_fr.67.400.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Although we recommend rotating photos manually and uploading a new version of the image,\nthe OFF API allows you to make api calls to automate this process.\nYou can rotate existing photos by setting the angle to 90º, 180º, or 270º clockwise.\n",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "4251105501381"
            },
            "in": "query",
            "name": "code",
            "description": "Barcode of the product",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "ingredients_en"
            },
            "in": "query",
            "name": "id",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "1"
            },
            "in": "query",
            "name": "imgid",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "90"
            },
            "in": "query",
            "name": "angle",
            "required": true
          }
        ],
        "tags": [
          "Images"
        ]
      }
    },
    "/cgi/product_image_unselect.pl": {
      "post": {
        "summary": "Unselect Image",
        "description": "This endpoint allows the user to unselect a photo for a product.\nThe user must provide the product code and the image ID to unselect.\n",
        "operationId": "post-cgi-product_image_unselect.pl",
        "tags": [
          "Images"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "title": "unselect_a_photo_request",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "code of the product",
                    "example": "4251105501381"
                  },
                  "id": {
                    "type": "string",
                    "description": "image field (image id) of the photo to unselect",
                    "example": "front_fr"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "unselect_a_photo_response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "status of the unselect operation",
                      "example": "status ok"
                    },
                    "status_code": {
                      "type": "number",
                      "description": "status code of the operation",
                      "example": 0
                    },
                    "imagefield": {
                      "type": "string",
                      "example": "front_fr",
                      "description": "image field that was unselected"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cgi/product_jqm2.pl": {
      "post": {
        "summary": "Edit Product",
        "operationId": "post-cgi-product_jqm2.pl",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "add_or_edit_a_product_response",
                  "properties": {
                    "status_verbose": {
                      "type": "string",
                      "example": "fields saved"
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "description": "You can provide most of the properties defined in the product schema.\n",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The barcode of the product to be added or edited",
                        "example": "0074570036004"
                      },
                      "user_id": {
                        "type": "string",
                        "description": "Username to authenticate with\n\nNote: you must always use the username (and not the email)\nas it is far less brittle.\n"
                      },
                      "password": {
                        "type": "string",
                        "description": "Password to authenticate with",
                        "format": "password"
                      },
                      "comment": {
                        "type": "string",
                        "description": "A comment for the change. It will be shown in product changes history.",
                        "example": "new packaging from super-app"
                      },
                      "brands": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The brands of the product (comma separated list of values).",
                        "examples": [
                          [
                            "Häagen-Dazs General-mills"
                          ]
                        ]
                      },
                      "labels": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The labels of the product (comma separated list of values).",
                        "examples": [
                          [
                            "Kosher Ferroro"
                          ]
                        ]
                      },
                      "categories": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The categories of the product (comma separated list of values).",
                        "examples": [
                          [
                            "Desserts Frozen foods"
                          ]
                        ]
                      },
                      "packaging": {
                        "type": "string",
                        "description": "Packaging type, format, material.\nThe [v3 API documentation](https://openfoodfacts.github.io/openfoodfacts-server/api/ref-v3/#operation/post-api-v3-product-barcode)\nhas a more structured data for `packaging`.\n",
                        "example": "Frozen"
                      }
                    },
                    "required": [
                      "code",
                      "user_id",
                      "password"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "Properties that goes in change ref\n",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "A comment on the contribution.\nAdding meaningful comments help moderators and users understand a single product history.\n"
                      },
                      "app_name": {
                        "type": "string",
                        "description": "Name of the app providing the information\n"
                      },
                      "app_version": {
                        "type": "string",
                        "description": "Version of the app providing the information\n"
                      },
                      "app_uuid": {
                        "type": "string",
                        "description": "When an app uses a single user to log its contributions,\nit might be interesting to know which user of the app is providing the information.\nYou can use this field to provide an identifier (eg: an sha1 of the username) that's privacy preserving. Make sure that your salt is strong, perfectly random and secret\n\nIn case we have trouble with one of your user, it helps our moderators revert edits.\n"
                      },
                      "User-Agent": {
                        "type": "string",
                        "description": "It is required that you pass a specific User-Agent header when you do an API request.\nBut some times it's not possible to modify such a header\n(eg. request using JavaScript in a browser).\nIn such cases, you can override it with this parameter.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Products"
        ],
        "description": "This updates a product.\n\nNote: If the barcode exists then you will be editing the existing product,\nHowever if it doesn''t you will be creating a new product with that unique barcode,\nand adding properties to the product.\n",
        "security": [
          {
            "cookieAuth": [],
            "userAgentAuth": []
          }
        ]
      }
    },
    "/api/v2/search": {
      "get": {
        "summary": "Search Products",
        "tags": [
          "Search"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "search_for_products_response",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of products found\n",
                      "example": 2701
                    },
                    "page": {
                      "type": "integer",
                      "description": "Page number of returned results.\n\nYou can get a different page, by using the `page` query parameter.\n",
                      "example": 1
                    },
                    "page_count": {
                      "type": "integer",
                      "description": "Number of products in this page.\n\nThis will differ from page_size only on the last page.\n",
                      "example": 24
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "Requested number of products per pages\n\nTo get the number of pages, divide count by page_size\n(eg. `Math.floor( count / page_size) + 1 `)\n",
                      "example": 24
                    },
                    "products": {
                      "type": "array",
                      "description": "The products matching the query corresponding to current page\n",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "skip": {
                      "type": "integer",
                      "example": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-search",
        "description": "Search request allows you to get products that match your search criteria.\n\nIt allows you create many custom APIs for your use case.\n\nIf the search query parameter has 2 possible values, they are seperated by a comma(,).\nWhen filtering via a parameter that has different language codes like `fr`, `de` or `en`, specify the language code in the parameter name e.g `categories_tags_en`\n\n**Important:** search API v2 does not support full text request (search_term),\nyou have to use [search API v1](https://wiki.openfoodfacts.org/API/Read/Search) for that.\nUpcoming [search-a-licious project](https://github.com/openfoodfacts/search-a-licious) will fix that.\n\n### Limiting results\n\nYou can limit the size of returned objects thanks to the `fields` object (see below).\n\neg: `fields=code,product_name,brands,attribute_groups``\n\nPlease use it as much as possible to avoid overloading the servers.\n\nThe search use pagination, see `page` and `page_size` parameters.\n\n**Beware:** the `page_count` data in item is a bit counter intuitive…, read the description.\n\n### Conditions on tags\n\nAll `_tags`` parameters accepts either:\n\n* a single value\n* or a comma-separated list of values (doing a AND)\n* or a pipe separated list of values (doing a OR)\n\nYou can exclude terms by using a \"-\" prefix.\n\nFor taxonomized entries, you might either use the tag id (recommended),\nor a known synonym (without language prefix)\n\n* `labels_tags=en:organic,en:fair-trade` find items that are fair-trade AND organic\n* `labels_tags=en:organic|en:fair-trade` find items that are fair-trade OR organic\n* `labels_tags=en:organic,en:-fair-trade` find items that are organic BUT NOT fair-trade\n\n\n### Conditions on nutriments\n\nTo get a list of nutrients\n\nYou can either query on nutrient per 100g (`_100g` suffix)\nor per serving (`serving` suffix).\n\nYou can also add `_prepared_`\nto get the nutrients in the prepared product instead of as sold.\n\nYou can add a comparison operator and value to the parameter name\nto get products with nutrient above or bellow a value.\nIf you use a parameter value it exactly match it.\n\n* `energy-kj_100g<200` products where energy in kj for 100g is less than 200kj\n* `sugars_serving>10` products where sugar per serving is greater than 10g\n* `saturated-fat_100g=1` products where saturated fat per 100g is exactly 10g\n* `salt_prepared_serving<0.1` products where salt per serving for prepared product is less than 0.1g\n\n### More references\n\nSee also [wiki page](https://wiki.openfoodfacts.org/Open_Food_Facts_Search_API_Version_2)\n",
        "parameters": [
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "e322"
            },
            "in": "query",
            "name": "additives_tags",
            "description": "The additives_tags in english of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/additives) has a list of possible values for `additives`. Translated values are available at https://static.openfoodfacts.org/data/taxonomies/additives.json\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "m"
            },
            "in": "query",
            "name": "allergens_tags",
            "description": "The allergens_tags in english of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/allergens) has a list of possible values for `allergens`. Translated values are available at https://static.openfoodfacts.org/data/taxonomies/allergens.json\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ferrero"
            },
            "in": "query",
            "name": "brands_tags",
            "description": "The brands_tags of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/brands) has a list of possible values for `brands`. Taxonomized values are available at https://static.openfoodfacts.org/data/taxonomies/brands.json\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "chocolates"
            },
            "in": "query",
            "name": "categories_tags",
            "description": "The category of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/categories) has a list of possible values for `categories`. Translated values are available at https://static.openfoodfacts.org/data/taxonomies/categories.json\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "united-kingdom"
            },
            "in": "query",
            "name": "countries_tags_en",
            "description": "The countries_tags_en of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/countries) shows a list of possible values for `countries`. Translated values are available at https://static.openfoodfacts.org/data/taxonomies/countries.json\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "emb_codes_tags",
            "description": "The emb_codes_tags of product(s) you are searching for.\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "organic"
            },
            "in": "query",
            "name": "labels_tags",
            "description": "The labels_tags in english of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/labels) has a list of possible values for `labels`.\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "manufacturing_places_tags",
            "description": "The manufacturing_places_tags of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/manufacturing-places) has a list of possible values for `manufacturing-places`.\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "e"
            },
            "in": "query",
            "name": "nutrition_grades_tags",
            "description": "The nutrition_grades_tags of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/nutrition-grades) has a list of possible values for `nutrition-grades`.\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "origins_tags",
            "description": "The origins_tags of product(s) you are searching for. The [Open Food Facts Web App](https://world.openfoodfacts.org/facets/origins) has a list of possible values for `origins`.\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "1-jar-aus-klarglas"
            },
            "in": "query",
            "name": "packaging_tags_de",
            "description": "The packaging_tag in german of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/packaging) has a list of possible values for `packaging`. \n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "purchase_places_tags",
            "description": "The purchase_places_tags of product(s) you are searching for.\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "nutrition-facts-completed"
            },
            "in": "query",
            "name": "states_tags",
            "description": "The states_tags in english of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/states) has a list of possible values for `states`. Translated values are available at https://static.openfoodfacts.org/data/taxonomies/states.json\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "aldi"
            },
            "in": "query",
            "name": "stores_tags",
            "description": "The stores_tags of product(s) you are searching for.\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "traces_tags",
            "description": "The traces_tags of product(s) you are searching for.\nThe [Open Food Facts Web App](https://world.openfoodfacts.org/facets/traces) shows a list of possible values for `traces`.\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
          },
          {
            "in": "query",
            "name": "<tag_name>_tags_<language_code>",
            "description": "You can add a language code to a specific tag to query it in a specific language\n",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "object",
              "patternProperties": {
                "(?<tag_name>\\w+)_tags_(?<language_code>\\w\\w)": {
                  "type": "string",
                  "description": "Will search in the tags corresponding to `tag_name`,\nin the language corresponding to `language_code.\n\n`tag_name` is one of the field above which have the `_tags`` suffix:\ncategories, nutrition_grades, etc.\n\n`language_code` is a two letter iso language `language_code.\n\nYou can use multiple values by using a comma separated list.\nYou can add a \"-\" before values to avoid matching a tag.\n"
                }
              },
              "examples": [
                {
                  "packaging_tags_de": null,
                  "summary": "packaging in German",
                  "value": {
                    "packaging_tags_de": "de:Flasche"
                  }
                },
                {
                  "origins_tags_fr": null,
                  "summary": "origins in French",
                  "value": {
                    "origins_tags_fr": "fr:France"
                  }
                },
                {
                  "categories_tags_en": null,
                  "summary": "categories in English",
                  "value": {
                    "categories_tags_en": "en:Beer"
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "<nutrient>_lt_<value>",
            "description": "Search on nutrient lower than a value\n",
            "schema": {
              "type": "object",
              "patternProperties": {
                "(?<nutrient>\\w+)(?<prepared>_prepared)?(?<portion>100g|serving)<(?<value>\\d+)": {
                  "type": "string",
                  "description": "Will search for products with nutrients lower than  `value`\nper `portion` (100g or serving).\n\nIf `prepared` is \"prepared\" search in prepared product instead of \"as sold\".\n\nImportant: the parameter value is discarded and should be empty\n"
                }
              },
              "examples": [
                {
                  "salt_100g_lt_2": null,
                  "summary": "salt per 100g is lower than 2g (in product as sold)",
                  "value": {
                    "salt_100g<2": 1
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "<nutrient>_gt_<value>",
            "description": "Search on nutrient greater than a value\n",
            "schema": {
              "type": "object",
              "patternProperties": {
                "(?<nutrient>\\w+)(?<prepared>_prepared)?(?<portion>100g|serving)>(?<value>\\d+)": {
                  "type": "string",
                  "description": "Will search for products with nutrients more than  `value`\nper `portion` (100g or serving).\n\nIf `prepared` is \"prepared\" search in prepared product instead of \"as sold\".\n\nImportant: the parameter value is discarded and should be empty\n"
                }
              },
              "examples": [
                {
                  "carbohydrates_prepared_serving_gt_10": null,
                  "summary": "carbohydrates per serving is greater than 10g in prepared product",
                  "value": {
                    "salt_100g>10": 1
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "<nutrient>_eq_<value>",
            "description": "Search on nutrient for an exact quantity\n",
            "schema": {
              "type": "object",
              "patternProperties": {
                "(?<nutrient>\\w+)(?<prepared>_prepared)?(?<portion>100g|serving)": {
                  "type": "string",
                  "description": "Will search for products with nutrients exactl  the parameter value\nper `portion` (100g or serving).\n\nIf `prepared` is \"prepared\" search in prepared product instead of \"as sold\".\n"
                }
              },
              "examples": [
                {
                  "fat_100g_eq_5": null,
                  "summary": "fat per 100g is exactly equal to 5g (in product as sold)",
                  "value": {
                    "fat_100g": 5
                  }
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specific fields to return. Use 'knowledge_panels' for Knowledge Panels only.",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_.-]+(,[a-zA-Z0-9_.-]+)*$",
              "description": "Custom comma-separated list of product field names",
              "examples": [
                "knowledge_panels",
                "knowledge_panels,product_name,nutriments",
                "categories_tags,packaging_tags",
                "allergens_tags,nutriscores",
                "images,brands_tags,categories_tags,countries_tags,languages_tags,ecoscore_tags"
              ]
            }
          },
          {
            "schema": {
              "type": "string",
              "example": "product_name",
              "enum": [
                "product_name",
                "last_modified_t",
                "scans_n",
                "unique_scans_n",
                "created_t",
                "completeness",
                "popularity_key",
                "nutriscore_score",
                "nova_score",
                "nothing",
                "ecoscore_score"
              ]
            },
            "in": "query",
            "name": "sort_by",
            "description": "The allowed values  used to sort/order the search results.\n\n* `product_name` sorts on name\n* `ecoscore_score`, `nova_score`, `nutriscore_score` rank on the [Eco-Score](https://world.openfoodfacts.org/eco-score-the-environmental-impact-of-food-products), [Nova](https://world.openfoodfacts.org/nova), or [Nutri-Score](https://world.openfoodfacts.org/nutriscore)\n* `scans_n`, `unique_scans_n` and `popularity_key` are about product popularity: number of scans on unique scans, rank of product\n* `created_t`, `last_modified_t`, are about creation and modification dates\n* `nothing`, tells not to sort at all (because if you do not provide the sort_by argument we default to sorting on popularity (for food) or last modification date)\n"
          },
          {
            "schema": {
              "type": "integer",
              "example": 24
            },
            "in": "query",
            "name": "page",
            "description": "The page number you request to view (eg. in search results spanning multiple pages)\n"
          },
          {
            "schema": {
              "type": "integer",
              "example": 24
            },
            "in": "query",
            "name": "page_size",
            "description": "The number of elements should be sent per page\n"
          }
        ]
      },
      "parameters": []
    },
    "/cgi/suggest.pl": {
      "get": {
        "summary": "Get Suggestions",
        "tags": [
          "Suggestions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-cgi-suggest.pl",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "additives"
            },
            "in": "query",
            "name": "tagtype"
          },
          {
            "schema": {
              "type": "string",
              "example": "f"
            },
            "in": "query",
            "name": "term"
          }
        ],
        "description": "For example , Dave is looking for packaging_shapes that contain the term \"fe\",\nall packaging_shapes containing \"fe\" will be returned.\nThis is useful if you have a search in your application,\nfor a specific product field.\n"
      }
    },
    "/cgi/nutrients.pl": {
      "get": {
        "summary": "Get Nutrients List",
        "tags": [
          "Nutrients"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nutrient/properties/nutrients"
                }
              }
            }
          }
        },
        "operationId": "get-cgi-nutrients.pl",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "us"
            },
            "in": "query",
            "name": "cc",
            "required": false,
            "description": "2 letter code of the country of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the country may be inferred by the IP address of the request."
          },
          {
            "schema": {
              "type": "string",
              "example": "fr"
            },
            "in": "query",
            "name": "lc",
            "required": false,
            "description": "2 letter code of the language of the user.\nUsed for localizing some fields in returned values (e.g. knowledge panels).\nIf not passed, the language may be inferred by the Accept-Language header of the request,\nor from the domain name prefix.\n"
          }
        ],
        "description": "Used to display the nutrition facts table of a product, or to display a form to input those nutrition facts.\n"
      }
    },
    "/api/v2/attribute_groups": {
      "get": {
        "summary": "Get Attribute Groups",
        "description": "Attributes are at the heart of personal search.\nThey score the products according to different criterias,\nwhich could then be matched to a user's preferences.\n\nThis API helps you list attributes and display them in your application,\nfor the user to choose the importance of each criteria.\n\nnote: `/api/v2/attribute_groups_{lc}` is also a valid route, but consider it deprecated\n",
        "tags": [
          "Personal Search"
        ],
        "operationId": "get-attribute-groups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "get_attribute_groups_response",
                  "type": "array",
                  "description": "List of groups of attributes for personal search in a specific language.\n",
                  "items": {
                    "title": "attribute_group",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "unique id of the group"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the group"
                      },
                      "attributes": {
                        "type": "array",
                        "description": "Attributes that are part of this group\n",
                        "items": {
                          "title": "attribute",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "unique id of the attribute"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the attribute"
                            },
                            "icon_url": {
                              "type": "string",
                              "description": "url of icon to display next to the settings for this attribute"
                            },
                            "setting_name": {
                              "type": "string",
                              "description": "a description of the attribute to display to users"
                            },
                            "setting_note": {
                              "type": "string",
                              "description": "a complementary note on the attribute"
                            },
                            "default": {
                              "type": "string",
                              "enum": [
                                "mandatory",
                                "very_important",
                                "important",
                                "not_important"
                              ],
                              "description": "Indicates the default setting for this attribute"
                            },
                            "panel_id": {
                              "type": "string",
                              "description": "Linked knowledge panel (optional)"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "fr"
            },
            "in": "query",
            "name": "lc",
            "required": false,
            "description": "2 letter code of the language of the user.\nUsed for localizing some fields in returned values (e.g. knowledge panels).\nIf not passed, the language may be inferred by the Accept-Language header of the request,\nor from the domain name prefix.\n"
          }
        ]
      }
    },
    "/api/v2/preferences": {
      "get": {
        "summary": "Get Preferences Weights",
        "description": "This endpoint retrieves the weights corresponding to attribute preferences\nfor computing personal product recommendations. The weights are used to\npersonalize the product recommendations based on user preferences.\n",
        "tags": [
          "Personal Search"
        ],
        "operationId": "get-preferences",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "fr"
            },
            "in": "query",
            "name": "lc",
            "required": false,
            "description": "2 letter code of the language of the user.\nUsed for localizing some fields in returned values (e.g. knowledge panels).\nIf not passed, the language may be inferred by the Accept-Language header of the request,\nor from the domain name prefix.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "get_preferences_response",
                  "description": "Rules to apply to compute personal ranking of a product,\nbased upon the setting value of each attribute.\n",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id for the setting value",
                        "enum": [
                          "not_important",
                          "important",
                          "very_important",
                          "mandatory"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "name for the setting value, translated according to `lc` parameter"
                      },
                      "factor": {
                        "type": "integer",
                        "description": "factor to apply to the property of the product corresponding to attributes\nhaving this setting value\n"
                      },
                      "minimum_match": {
                        "type": "integer",
                        "description": "FIXME\n"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cgi/session.pl": {
      "post": {
        "summary": "Login Session",
        "operationId": "get-cgi-session.pl",
        "description": "Retrieve session cookie for writing operations.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "Username for login\n\nNote: you must always use the username (and not the email)\nas it is far less brittle.\n"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for login",
                    "format": "password"
                  }
                },
                "required": [
                  "user_id",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "description": "Session cookie for subsequent authenticated requests"
                },
                "examples": {
                  "sessionCookie": {
                    "value": "session=user123&testuser&user_session&abcdef1234567890; domain=.example.net; path=/; SameSite=Lax"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "session",
        "description": "Session cookie containing user ID, username, and session token.\nThe value is structured as: user_id&username&user_session&session_token\ne.g. \"user_id&exampleuser&user_session&abcdefghijklmnopqrstuvwxyz123456789ABCDEFGHIJKLM\"\n"
      },
      "userAgentAuth": {
        "description": "Authentication using User-Agent header User-Agent header in the format 'app_name/app_version (email)'",
        "type": "apiKey",
        "in": "header",
        "name": "User-Agent"
      }
    },
    "schemas": {
      "Product-Base": {
        "type": "object",
        "description": "Base product data\n",
        "properties": {
          "abbreviated_product_name": {
            "type": "string",
            "description": "Abbreviated name in requested language"
          },
          "product_type": {
            "type": "string",
            "description": "The product type is a fundamental separation that tells on which platform the product is made available:\nOpen Food Facts, Open Beauty Facts, Open Pet Food Facts or Open Products Facts.\n\nEach platform has variations on the way it analyses the product.\n\nChanging the product type moves the product to the new platform.\nIt must be done thoughtfully.\n",
            "enum": [
              "beauty",
              "food",
              "petfood",
              "product"
            ]
          },
          "code": {
            "type": "string",
            "description": "barcode of the product (can be EAN-13 or internal codes for some food stores),\nfor products without a barcode,\nOpen Food Facts assigns a number starting with the 200 reserved prefix\n"
          },
          "codes_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "A value which is the type of barcode \"code-13\" or \"code-8\"\nand\nA series of mask for the barcode\nIt helps retrieve barcodes starting by\n",
              "examples": [
                "code-13",
                "3017620422xxx",
                "301762042xxxx",
                "30176204xxxxx",
                "3017620xxxxxx",
                "301762xxxxxxx",
                "30176xxxxxxxx",
                "3017xxxxxxxxx",
                "301xxxxxxxxxx",
                "30xxxxxxxxxxx",
                "3xxxxxxxxxxxx"
              ]
            }
          },
          "generic_name": {
            "type": "string",
            "description": "Legal name of the product as regulated\nby the European authorities.\n"
          },
          "id": {
            "description": "internal identifier for the product, usually set to the value of `code`,\nexcept on the producers platform where it is prefixed by the owner\n",
            "type": "string"
          },
          "lc": {
            "type": "string",
            "description": "Main language of the product.\nThis is a duplicate of `lang` property (for historical reasons).\n"
          },
          "lang": {
            "type": "string",
            "description": "Main language of the product.\n\nThis should be the main language of product packaging (if one is predominant).\n\nMain language is also used to decide which ingredients list to parse.\n"
          },
          "nova_group": {
            "type": "integer",
            "description": "Nova group as an integer from 1 to 4. See https://world.openfoodfacts.org/nova\n"
          },
          "nova_groups": {
            "type": "string"
          },
          "obsolete": {
            "type": "string"
          },
          "obsolete_since_date": {
            "description": "A date at which the product was declared obsolete.\nThis means it's not produced any more.\n",
            "type": "string"
          },
          "product_name": {
            "type": "string",
            "description": "The name of the product\n"
          },
          "product_name_en": {
            "type": "string",
            "description": "The name of the product can also\nbe in many other languages like\nproduct_name_fr (for French).\n"
          },
          "product_quantity": {
            "type": "string",
            "description": "The size in g or ml for the whole product. \nIt is a normalized version of the `quantity` field.\nA `quantity` of \"2 x 60 g\" leads to `product_quantity`: \"120\".\n",
            "example": "500"
          },
          "product_quantity_unit": {
            "type": "string",
            "description": "The unit (either g or ml) for the corresponding `product_quantity`.\nIt is computed from the `quantity` field.\nA `quantity` of \"6 x 250 ml\" leads to `product_quantity_unit`: \"ml\".\n",
            "example": "g"
          },
          "quantity": {
            "type": "string",
            "description": "The quantity of the product, with the corresponding number of portions or unit (g, ml, kg, l, cl, oz, lbs...). \nIt should be the value as displayed on the product. The ℮ sign is allowed.\nWhen it refers to the number of portions, it can be filled without any units (e.g. \"6 eggs\").\n",
            "example": "3 x 150 g"
          },
          "schema_version": {
            "type": "integer",
            "description": "Version of the product object schema used in the response.\nThis indicates the structure of the 'product' field itself.\nFor more details, please read: https://openfoodfacts.github.io/openfoodfacts-server/api/ref-api-and-product-schema-change-log\n",
            "example": 999
          }
        },
        "patternProperties": {
          "abbreviated_product_name_(?<language_code>\\w\\w)": {
            "type": "string",
            "description": "Abbreviated name in language `language_code`."
          },
          "generic_name_(?<language_code>\\w\\w)": {
            "type": "string",
            "description": "This can be returned in many other languages\nlike generic_name_fr (for French).\n"
          }
        }
      },
      "Product-Misc": {
        "type": "object",
        "title": "product_misc",
        "description": "Miscellaneous but important fields of a product\n",
        "properties": {
          "additives_n": {
            "type": "integer",
            "description": "Number of food additives.\n"
          },
          "checked": {
            "type": "string"
          },
          "complete": {
            "type": "integer"
          },
          "completeness": {
            "type": "number"
          },
          "ecoscore_grade": {
            "type": "string",
            "description": "See also: `ecoscore_tags`\n"
          },
          "ecoscore_score": {
            "type": "integer",
            "description": "See also: `ecoscore_tags`\n"
          },
          "food_groups": {
            "type": "string"
          },
          "food_groups_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nutrient_levels": {
            "description": "Traffic light indicators on main nutrients levels\n",
            "type": "object",
            "properties": {
              "fat": {
                "type": "string",
                "enum": [
                  "low",
                  "moderate",
                  "high"
                ]
              },
              "salt": {
                "type": "string",
                "enum": [
                  "low",
                  "moderate",
                  "high"
                ]
              },
              "saturated-fat": {
                "type": "string",
                "enum": [
                  "low",
                  "moderate",
                  "high"
                ]
              },
              "sugars": {
                "type": "string",
                "enum": [
                  "low",
                  "moderate",
                  "high"
                ]
              }
            }
          },
          "packaging_text": {
            "type": "string",
            "description": "Recycling instructions as raw text, e.g. Plastic\nbottle to recycle, Plastic cap to recycle.\nThis will get automatically parsed and\nwill be used to compute the Eco-Score.\nYou can either request it (if it exists) or\nsend it in a specific language.\n",
            "example": "packaging_text_en"
          },
          "packagings": {
            "type": "array",
            "title": "Packagings (READ)",
            "description": "The packagings object is an array of individual packaging component objects.\n\nThe Packaging data document explains how packaging data is structured in Open Food Facts: https://openfoodfacts.github.io/openfoodfacts-server/dev/explain-packaging-data/\n\nThe shape, material and recycling properties of each packaging component are linked to entries in the packaging_shapes, packaging_materials and packaging_recycling taxonomies:\n\nhttps://world.openfoodfacts.org/data/taxonomies/packaging_shapes.json\nhttps://world.openfoodfacts.org/data/taxonomies/packaging_materials.json\nhttps://world.openfoodfacts.org/data/taxonomies/packaging_recycling.json\n\nIf the tags_lc field is set, the properties will include a lc_name field with the translation in the requested language.",
            "examples": [
              [
                {
                  "number_of_units": 6,
                  "shape": {
                    "id": "en:bottle",
                    "lc_name": "bouteille"
                  },
                  "material": {
                    "id": "en:bottle",
                    "lc_name": "bouteille"
                  },
                  "recycling": {
                    "id": "en:bottle",
                    "lc_name": "bouteille"
                  },
                  "quantity_per_unit": "25 cl",
                  "quantity_per_unit_value": 25,
                  "quantity_per_unit_unit": "cl",
                  "weight_specified": 30,
                  "weight_measured": 32,
                  "weight_estimated": 26,
                  "weight": 30,
                  "weight_source_id": "specified"
                }
              ]
            ],
            "items": {
              "description": "Each packaging component has different properties to specify how many there are, its shape, material etc.\n\nThe shape, material and recycling properties are mapped to one entry in the packaging_shapes, packaging_materials and packaging_recycling taxonomies, and the value of the property is the canonical name of the taxonomy entry (e.g. en:bottle).\n\nThey may contain values that could not yet get matched to their respective taxonomy, in which case they will contain a free text value prefixed with the language code of this text value (e.g. \"fr:Bouteille sphérique\" might have been entered by a French user to indicate it is a spherical bottle).",
              "title": "Packaging component (READ)",
              "type": "object",
              "examples": [
                {
                  "number_of_units": 6,
                  "shape": {
                    "id": "en:bottle",
                    "lc_name": "bouteille"
                  },
                  "material": {
                    "id": "en:bottle",
                    "lc_name": "bouteille"
                  },
                  "recycling": {
                    "id": "en:bottle",
                    "lc_name": "bouteille"
                  },
                  "quantity_per_unit": "25 cl",
                  "quantity_per_unit_value": 25,
                  "quantity_per_unit_unit": "cl",
                  "weight_specified": 30,
                  "weight_measured": 32,
                  "weight_estimated": 26,
                  "weight": 30,
                  "weight_source_id": "specified"
                }
              ],
              "properties": {
                "number_of_units": {
                  "type": "integer",
                  "description": "umber of units of this packaging component contained in the product (e.g. 6 for a pack of 6 bottles)"
                },
                "shape": {
                  "title": "Packaging component shape",
                  "x-stoplight": {
                    "id": "xrj8agza3dwgf"
                  },
                  "type": "object",
                  "description": "The shape property is canonicalized using the packaging_shapes taxonomy. Taxonomized values are available using the partial taxonomy API, the autosuggest API or the full packaging_shapes taxonomy JSON export.",
                  "examples": [
                    {
                      "id": "en:bottle",
                      "lc_name": "bouteille"
                    }
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                    },
                    "lc_name": {
                      "type": "string",
                      "description": "Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                    }
                  }
                },
                "material": {
                  "title": "Packaging component material",
                  "type": "object",
                  "description": "The material property is canonicalized using the packaging_materials taxonomy. Taxonomized values are available using the partial taxonomy API, the autosuggest API or the full packaging_material taxonomy JSON export.",
                  "examples": [
                    {
                      "id": "en:bottle",
                      "lc_name": "bouteille"
                    }
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                    },
                    "lc_name": {
                      "type": "string",
                      "description": "Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                    }
                  }
                },
                "recycling": {
                  "title": "Packaging component recycling instruction",
                  "x-stoplight": {
                    "id": "376tk8e2cmyh2"
                  },
                  "type": "object",
                  "description": "The recycling property is canonicalized using the packaging_recycling taxonomy. Taxonomized values are available using the partial taxonomy API, the autosuggest API or the full packaging_recycling taxonomy JSON export.",
                  "examples": [
                    {
                      "id": "en:bottle",
                      "lc_name": "bouteille"
                    }
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                    },
                    "lc_name": {
                      "type": "string",
                      "description": "Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                    }
                  }
                },
                "quantity_per_unit": {
                  "type": "string",
                  "description": "Quantity (weight or volume) of food product contained in the packaging component. (e.g. 75cl for a wine bottle)"
                },
                "quantity_per_unit_value": {
                  "type": "number",
                  "description": "Value parsed from the quantity field."
                },
                "quantity_per_unit_unit": {
                  "type": "string",
                  "description": "Unit parsed and normalized from the quantity field."
                },
                "weight_specified": {
                  "type": "number",
                  "description": "Weight (as specified by the manufacturer) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component)."
                },
                "weight_measured": {
                  "type": "number",
                  "description": "Weight (as measured by one or more users) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component)."
                },
                "weight_estimated": {
                  "type": "number",
                  "description": "Weight (as estimated from similar products) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component)."
                },
                "weight": {
                  "type": "number",
                  "description": "Weight of one unit of the empty packaging component."
                },
                "weight_source_id": {
                  "type": "string",
                  "description": "Indicates which field was used to populate the \"weight\" field. Either \"specified\", \"measured\", or \"estimated\""
                }
              }
            },
            "readOnly": true
          },
          "packagings_complete": {
            "title": "packagings_complete",
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "description": "Indicate if the packagings array contains all the packaging parts of the product. This field can be set by users when they enter or verify packaging data. Possible values are 0 or 1."
          },
          "pnns_groups_1": {
            "description": "Category of food according to [French Nutrition and Health Program](https://fr.wikipedia.org/wiki/Programme_national_nutrition_sant%C3%A9)\n",
            "type": "string"
          },
          "pnns_groups_1_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pnns_groups_2": {
            "description": "Sub Category of food according to [French Nutrition and Health Program](https://fr.wikipedia.org/wiki/Programme_national_nutrition_sant%C3%A9)\n",
            "type": "string"
          },
          "pnns_groups_2_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "popularity_key": {
            "description": "An imprecise measurement of popularity based on Scan statistics. A higher value means higher popularity.\n",
            "type": "integer"
          },
          "popularity_tags": {
            "description": "Indicators for the popularity of a product, like the amount of scans in a specific year.\n`popularity_tags` values from previous years are kept, if there is no popularity_tags at all, then it was never popular.\nThis field must be used with care. In countries where Open Food Facts is not widely used, \na product may obtain the value \"top-90-percent-scans-2021\" with a single scan.\n",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "bottom-25-percent-scans-2020",
              "top-85-percent-scans-2021",
              "top-90-percent-scans-2022",
              "top-country-it-scans-2019",
              "top-100000-mg-scans-2024"
            ]
          },
          "scans_n": {
            "type": "integer",
            "description": "Number of scans performed with the official Open Food Facts mobile application, the last year \nfor which the product was scanned (current year excluded). This value is computed once a year by scanbot.pl.\nIt is possible that a product has never been scanned at all: `scans_n` is not given in this case.\nSee also `unique_scans_n` field.\n"
          },
          "unique_scans_n": {
            "type": "integer",
            "description": "Number of unique scans performed with the official Open Food Facts mobile application, the last year \nfor which the product was scanned (current year excluded).\nUnique scans means it is based on different IPs.\nThis value is computed once a year by scanbot.pl.\nSee also `scans_n` field.\n"
          },
          "serving_quantity": {
            "type": "string",
            "description": "Normalized version of serving_size.\nNote that this is NOT the number of servings by product.\n<small>(in perl, see `normalize_serving_size`)</small>\n"
          },
          "serving_quantity_unit": {
            "type": "string",
            "description": "The unit (either g or ml) for the correponding serving_quantity.\n",
            "example": "g"
          },
          "serving_size": {
            "type": "string",
            "description": "Serving size text (generally in g or ml).\nWe expect a quantity + unit but the user is free to input any string.\n"
          }
        },
        "patternProperties": {
          "food_groups_(?<language_code>\\w\\w)": {
            "type": "string",
            "description": "see `food_groups`"
          },
          "packaging_text_(?<language_code>\\w\\w)": {
            "type": "string",
            "description": "Packaging text in language designated by `language_code`\n"
          }
        }
      },
      "Product-Tags": {
        "type": "object",
        "description": "Data about a product which is represented as tags\n",
        "properties": {
          "brands": {
            "type": "string",
            "description": "Comma separated list of brands (not taxonomized), in the last language used to edit it (recorded in brands_lc)\nThis field is mostly used for debugging and testing purposes. Do not use it for display purposes.\n"
          },
          "brands_hierarchy": {
            "type": "array",
            "description": "An array of brands tag entries (for display and editing).\n\nThat is the id of brands found in taxonomy + \nbrands not found in taxonomy (as-is, with no normalization).\n\nThis is the field that should be used for display purposes, as it is not lossy.\n",
            "items": {
              "title": "Canonicalized taxonomy tag entry",
              "type": "string",
              "description": "A tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\") -> for entries that could not be matched to a taxonomy entry"
            }
          },
          "brands_lc": {
            "type": "string",
            "description": "Language code of the last edit for brands"
          },
          "brands_tags": {
            "type": "array",
            "description": "An array of indexed brands tag entries (for search).\n\nThat is the id of brands found in taxonomy + \nbrands not found in taxonomy (with case / accents / spaces normalized).\n\nThis is mostly used for search as the normalization of entries not in the taxonomy is lossy.\n",
            "items": {
              "title": "Indexed taxonomy tag entry (lossy, for search only)",
              "type": "string",
              "description": "This field is used for search only. It is a lossy representation of the taxonomy tag entry, that can be used to index the entry in a search engine.\nA tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code, and normalized (deaccented and lowercased, depending on language)\n(e.g. \"fr:thes-verts\") -> for entries that could not be matched to a taxonomy entry"
            }
          },
          "categories": {
            "type": "string",
            "description": "Comma separated list of categories (not taxonomized), in the last language used to edit it (recorded in categories_lc)\nThis field is mostly used for debugging and testing purposes. Do not use it for display purposes.\n"
          },
          "categories_hierarchy": {
            "type": "array",
            "description": "An array of categories tag entries (for display and editing).\n\nThat is the id of categories found in taxonomy + \ncategories not found in taxonomy (as-is, with no normalization).\n\nThis is the field that should be used for display purposes, as it is not lossy.\n",
            "items": {
              "title": "Canonicalized taxonomy tag entry",
              "type": "string",
              "description": "A tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\") -> for entries that could not be matched to a taxonomy entry"
            }
          },
          "categories_lc": {
            "type": "string",
            "description": "Language code of the last edit for categories"
          },
          "categories_tags": {
            "type": "array",
            "description": "An array of indexed categories tag entries (for search).\n\nThat is the id of categories found in taxonomy + \ncategories not found in taxonomy (with case / accents / spaces normalized).\n\nThis is mostly used for search as the normalization of entries not in the taxonomy is lossy.\n",
            "items": {
              "title": "Indexed taxonomy tag entry (lossy, for search only)",
              "type": "string",
              "description": "This field is used for search only. It is a lossy representation of the taxonomy tag entry, that can be used to index the entry in a search engine.\nA tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code, and normalized (deaccented and lowercased, depending on language)\n(e.g. \"fr:thes-verts\") -> for entries that could not be matched to a taxonomy entry"
            }
          },
          "checkers_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of checkers (users who checked the product) tags"
            }
          },
          "cities": {
            "type": "string"
          },
          "cities_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "correctors_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "countries": {
            "type": "string",
            "description": "List of countries where the product is sold.\n"
          },
          "countries_hierarchy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "countries_lc": {
            "type": "string",
            "description": "Countries language code"
          },
          "countries_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ecoscore_tags": {
            "description": "All ecoscore of a product.\nMost of the time it's only one value,\nbut it might eventually be more for products composed of sub-products.\nSee also: `ecoscore_score`, `ecoscore_grade`.\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "emb_codes": {
            "type": "string",
            "description": "Packager code. EMB is the French system of traceability codes for packager.\n",
            "example": "EMB 2013330"
          },
          "emb_codes_orig": {
            "type": "string"
          },
          "emb_codes_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "labels": {
            "type": "string"
          },
          "labels_hierarchy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "labels_lc": {
            "type": "string"
          },
          "labels_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entry_dates_tags": {
            "description": "The data as a series of tag: `yyyy-mm-dd`, `yyyy-mm`, `yyyy`\n",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "2016-03-11",
                "2016-03",
                "2016"
              ]
            ]
          },
          "manufacturing_places": {
            "type": "string",
            "description": "Places where the product was manufactured or transformed.\n"
          },
          "manufacturing_places_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nova_groups_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nutrient_levels_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Product-Images": {
        "type": "object",
        "title": "Product-Images",
        "description": "Information about Images of a product.\n\nImages ensure the reliability of Open Food Facts data.\nIt provides a primary source and proof of all the structured data.\nYou may therefore want to display it along the structured information.\n\nSee also tutorials about images:\n* [Getting images](https://openfoodfacts.github.io/openfoodfacts-server/api/how-to-download-images/)\n* [Uploading images](https://openfoodfacts.github.io/openfoodfacts-server/api/tutorial-uploading-photo-to-a-product/)\n",
        "properties": {
          "images": {
            "description": "This contains properties for all images contained on the product.\n",
            "type": "object",
            "title": "product_images_properties",
            "properties": {
              "front": {
                "title": "image_role",
                "type": "object",
                "description": "property of an image (or part thereof) selected for a particular role and a particular language.\n",
                "properties": {
                  "angle": {
                    "type": "integer",
                    "example": 0,
                    "description": "The angle of the image rotation (if it was rotated)."
                  },
                  "coordinates_image_size": {
                    "type": "string",
                    "example": "full"
                  },
                  "geometry": {
                    "type": "string",
                    "example": "0x0--1--1"
                  },
                  "imgid": {
                    "type": "string",
                    "example": "121",
                    "description": "The id of the original/source image that was selected to edit(rotate, normalize etc) to produce this new image."
                  },
                  "normalize": {
                    "type": [
                      "string",
                      "boolean",
                      "null"
                    ],
                    "examples": [
                      null,
                      "false",
                      "true"
                    ],
                    "description": "Normalize colors."
                  },
                  "rev": {
                    "type": "string",
                    "example": "420"
                  },
                  "sizes": {
                    "type": "object",
                    "description": "The available image sizes for the product (both reduced and full). \nThe reduced images are the ones with numbers as the key( 100, 200 etc)\nwhile the full images have `full` as the key.\n",
                    "properties": {
                      "100": {
                        "type": "object",
                        "title": "image_size",
                        "description": "Width and height of an image\n",
                        "properties": {
                          "h": {
                            "type": "integer",
                            "example": 400,
                            "description": "The height of the reduced/full image in pixels.\n"
                          },
                          "w": {
                            "type": "integer",
                            "example": 255,
                            "description": "The width of the reduced/full image in pixels.\n"
                          }
                        }
                      },
                      "200": {
                        "type": "object",
                        "title": "image_size",
                        "description": "Width and height of an image\n",
                        "properties": {
                          "h": {
                            "type": "integer",
                            "example": 400,
                            "description": "The height of the reduced/full image in pixels.\n"
                          },
                          "w": {
                            "type": "integer",
                            "example": 255,
                            "description": "The width of the reduced/full image in pixels.\n"
                          }
                        }
                      },
                      "400": {
                        "type": "object",
                        "title": "image_size",
                        "description": "Width and height of an image\n",
                        "properties": {
                          "h": {
                            "type": "integer",
                            "example": 400,
                            "description": "The height of the reduced/full image in pixels.\n"
                          },
                          "w": {
                            "type": "integer",
                            "example": 255,
                            "description": "The width of the reduced/full image in pixels.\n"
                          }
                        }
                      },
                      "full": {
                        "type": "object",
                        "title": "image_size",
                        "description": "Width and height of an image\n",
                        "properties": {
                          "h": {
                            "type": "integer",
                            "example": 400,
                            "description": "The height of the reduced/full image in pixels.\n"
                          },
                          "w": {
                            "type": "integer",
                            "example": 255,
                            "description": "The width of the reduced/full image in pixels.\n"
                          }
                        }
                      }
                    }
                  },
                  "white_magic": {
                    "type": [
                      "string",
                      "boolean",
                      "null"
                    ],
                    "examples": [
                      null,
                      "false",
                      "true"
                    ],
                    "description": "Photo on white background : Try to remove the background.\n"
                  },
                  "x1": {
                    "type": "string",
                    "example": "-1"
                  },
                  "x2": {
                    "type": "string",
                    "example": "-1"
                  },
                  "y1": {
                    "type": "string",
                    "example": "-1"
                  },
                  "y2": {
                    "type": "string",
                    "example": "-1"
                  }
                }
              }
            },
            "additionalProperties": {
              "type": "object",
              "title": "image",
              "description": "This object represent an image that was uploaded to a product.\n\"imgid\" is an integer which is a sequential number unique to each picture.\n",
              "properties": {
                "sizes": {
                  "type": "object",
                  "description": "The available image sizes for the product (both reduced and full). \nThe reduced images are the ones with numbers as the key( 100, 200 etc) \nwhile the full images have `full` as the key.\n",
                  "properties": {
                    "full": {
                      "type": "object",
                      "title": "image_size",
                      "description": "Width and height of an image\n",
                      "properties": {
                        "h": {
                          "type": "integer",
                          "example": 400,
                          "description": "The height of the reduced/full image in pixels.\n"
                        },
                        "w": {
                          "type": "integer",
                          "example": 255,
                          "description": "The width of the reduced/full image in pixels.\n"
                        }
                      }
                    }
                  },
                  "patternProperties": {
                    "(?<image_size>100|400)": {
                      "description": "properties of thumbnail of size `image_size`.\n**TODO** explain how to compute name\n\nFor real type: see description of property `full`.\n(Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))\n",
                      "type": "string"
                    }
                  }
                },
                "uploaded_t": {
                  "type": "string",
                  "example": "1457680652",
                  "description": "The time the image was uploaded (as unix timestamp).\n"
                },
                "uploader": {
                  "type": "string",
                  "example": "openfoodfacts-contributors",
                  "description": "The contributor that uploaded the image.\n"
                }
              }
            },
            "propertyNames": {
              "type": "integer"
            },
            "patternProperties": {
              "(?<imgid>\\d+)": {
                "description": "See property `1` to get the real type of those objects\n(Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))\n",
                "type": "string"
              },
              "(?<image_type>front|nutrition|ingredients|packaging|other)_(?<language_code>\\w\\w)": {
                "description": "See property `front` to get the real type of those objects\n(Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))\n",
                "type": "string"
              }
            }
          },
          "last_image_dates_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_image_t": {
            "description": "timestamp of last image upload (or update?)",
            "type": "integer"
          },
          "selected_images": {
            "type": "object",
            "title": "product_selected_images",
            "description": "URL for selected (important) images of the product.\n\nThis is very handy if you display the product to users.\n",
            "properties": {
              "front": {
                "type": "object",
                "description": "URLs of thumbnails image of image of type `image_type`",
                "properties": {
                  "display": {
                    "description": "Thumbnail urls of product image (front) adapted to display on product page\n",
                    "type": "object",
                    "patternProperties": {
                      "(?<language_code>\\w\\w)": {
                        "type": "string",
                        "description": "url of the image for language `language_code`"
                      }
                    }
                  },
                  "small": {
                    "description": "Thumbnail urls of product image (front) adapted to display on product list page\n",
                    "type": "object",
                    "patternProperties": {
                      "(?<language_code>\\w\\w)": {
                        "type": "string",
                        "description": "url of the image for language `language_code`"
                      }
                    }
                  },
                  "thumb": {
                    "description": "Thumbnail urls of product image (front) in smallest format\n",
                    "type": "object",
                    "patternProperties": {
                      "(?<language_code>\\w\\w)": {
                        "type": "string",
                        "description": "url of the image for language `language_code`"
                      }
                    }
                  }
                }
              }
            },
            "patternProperties": {
              "(?<image_type>front|packaging|ingredients|nutrition|other)": {
                "description": "See property `front` to get the real type of those objects\n(Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))\n",
                "type": "string"
              }
            }
          },
          "image_small_url": {
            "type": "string"
          },
          "image_thumb_url": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          }
        },
        "patternProperties": {
          "image(_(?<image_type>front|packaging|ingredients|nutrition|other))?(_(?<image_size>small|thumb))?_url": {
            "description": "the URL of image of type `image_type` in size `image_size` (or full size if not given).\n\nThe `image_type` tells which image the url correspond to. `image_type` is `front` if not provided.\n\nThe image is the one for current language (affected by `lc` parameter) if an image exists for this language, the image in main product language otherwise.\n\n**IMPORTANT:** you should use `selected_images` field instead of this one.\n",
            "type": "string"
          }
        }
      },
      "Product-Eco-Score": {
        "type": "object",
        "description": "Fields related to Eco-Score for a product.\n\nSee also: `ecoscore_score`, `ecoscore_grade` and `ecoscore_tags`.\n",
        "properties": {
          "ecoscore_data": {
            "type": "object",
            "title": "product_ecoscore_data",
            "description": "An object about a lot of details about data needed for Eco-Score computation\nand complementary data of interest.\n",
            "properties": {
              "adjustments": {
                "title": "product_ecoscore_adjustments",
                "type": "object",
                "properties": {
                  "origins_of_ingredients": {
                    "type": "object",
                    "properties": {
                      "aggregated_origins": {
                        "type": "array",
                        "description": "List of aggregated origins of ingredients and their impact.",
                        "items": {
                          "title": "adjustments_origin_of_ingredient_aggregated",
                          "type": "object",
                          "properties": {
                            "epi_score": {
                              "type": "string"
                            },
                            "origin": {
                              "type": "string",
                              "description": "Country or region of origin for the ingredient."
                            },
                            "percent": {
                              "type": "integer",
                              "description": "Percentage of this ingredient from the specified origin."
                            },
                            "transportation_score": {
                              "type": [
                                "null",
                                "integer"
                              ],
                              "description": "Transportation score associated with this ingredient's origin."
                            }
                          }
                        }
                      },
                      "epi_score": {
                        "type": "integer",
                        "description": "Environmental Performance Index (EPI) score for the ingredient's origin."
                      },
                      "epi_value": {
                        "type": "integer"
                      },
                      "origins_from_categories": {
                        "type": "array",
                        "description": "List of origins derived from product categories, eg for PDO.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "origins_from_origins_field": {
                        "type": "array",
                        "description": "List of origins explicitly stated in the product's origins field.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "transportation_score": {
                        "type": "integer"
                      },
                      "transportation_scores": {
                        "type": "object",
                        "propertyNames": {
                          "type": "string",
                          "enum": [
                            "ad",
                            "al",
                            "at",
                            "ax",
                            "ba",
                            "be",
                            "bg",
                            "ch",
                            "cy",
                            "cz",
                            "de",
                            "dk",
                            "dz",
                            "ee",
                            "eg",
                            "es",
                            "fi",
                            "fo",
                            "fr",
                            "gg",
                            "gi",
                            "gr",
                            "hr",
                            "hu",
                            "ie",
                            "il",
                            "im",
                            "is",
                            "it",
                            "je",
                            "lb",
                            "li",
                            "lt",
                            "lu",
                            "lv",
                            "ly",
                            "ma",
                            "mc",
                            "md",
                            "me",
                            "mk",
                            "mt",
                            "nl",
                            "no",
                            "pl",
                            "ps",
                            "pt",
                            "ro",
                            "rs",
                            "se",
                            "si",
                            "sj",
                            "sk",
                            "sm",
                            "sy",
                            "tn",
                            "tr",
                            "ua",
                            "uk",
                            "us",
                            "va",
                            "world",
                            "xk"
                          ]
                        },
                        "additionalProperties": {
                          "type": "number",
                          "default": 0
                        }
                      },
                      "transportation_value": {
                        "type": "integer"
                      },
                      "transportation_values": {
                        "type": "object",
                        "propertyNames": {
                          "type": "string",
                          "enum": [
                            "ad",
                            "al",
                            "at",
                            "ax",
                            "ba",
                            "be",
                            "bg",
                            "ch",
                            "cy",
                            "cz",
                            "de",
                            "dk",
                            "dz",
                            "ee",
                            "eg",
                            "es",
                            "fi",
                            "fo",
                            "fr",
                            "gg",
                            "gi",
                            "gr",
                            "hr",
                            "hu",
                            "ie",
                            "il",
                            "im",
                            "is",
                            "it",
                            "je",
                            "lb",
                            "li",
                            "lt",
                            "lu",
                            "lv",
                            "ly",
                            "ma",
                            "mc",
                            "md",
                            "me",
                            "mk",
                            "mt",
                            "nl",
                            "no",
                            "pl",
                            "ps",
                            "pt",
                            "ro",
                            "rs",
                            "se",
                            "si",
                            "sj",
                            "sk",
                            "sm",
                            "sy",
                            "tn",
                            "tr",
                            "ua",
                            "uk",
                            "us",
                            "va",
                            "world",
                            "xk"
                          ]
                        },
                        "additionalProperties": {
                          "type": "number",
                          "default": 0
                        }
                      },
                      "value": {
                        "type": "integer"
                      },
                      "values": {
                        "type": "object",
                        "propertyNames": {
                          "type": "string",
                          "enum": [
                            "ad",
                            "al",
                            "at",
                            "ax",
                            "ba",
                            "be",
                            "bg",
                            "ch",
                            "cy",
                            "cz",
                            "de",
                            "dk",
                            "dz",
                            "ee",
                            "eg",
                            "es",
                            "fi",
                            "fo",
                            "fr",
                            "gg",
                            "gi",
                            "gr",
                            "hr",
                            "hu",
                            "ie",
                            "il",
                            "im",
                            "is",
                            "it",
                            "je",
                            "lb",
                            "li",
                            "lt",
                            "lu",
                            "lv",
                            "ly",
                            "ma",
                            "mc",
                            "md",
                            "me",
                            "mk",
                            "mt",
                            "nl",
                            "no",
                            "pl",
                            "ps",
                            "pt",
                            "ro",
                            "rs",
                            "se",
                            "si",
                            "sj",
                            "sk",
                            "sm",
                            "sy",
                            "tn",
                            "tr",
                            "ua",
                            "uk",
                            "us",
                            "va",
                            "world",
                            "xk"
                          ]
                        },
                        "additionalProperties": {
                          "type": "number",
                          "default": 0
                        }
                      },
                      "warning": {
                        "type": "string"
                      }
                    }
                  },
                  "packaging": {
                    "type": "object",
                    "properties": {
                      "non_recyclable_and_non_biodegradable_materials": {
                        "type": "integer"
                      },
                      "packagings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "adjustments_packaging_item",
                          "properties": {
                            "ecoscore_material_score": {
                              "type": "integer"
                            },
                            "ecoscore_shape_ratio": {
                              "type": "integer"
                            },
                            "material": {
                              "type": "string"
                            },
                            "shape": {
                              "type": "string"
                            },
                            "number_of_units": {
                              "type": "integer",
                              "examples": [
                                1
                              ]
                            },
                            "quantity_per_unit": {
                              "type": "string",
                              "description": "The quantity per packaging unit, as a string.",
                              "examples": [
                                "33 cL"
                              ]
                            },
                            "quantity_per_unit_unit": {
                              "type": "string",
                              "examples": [
                                "cl"
                              ]
                            },
                            "quantity_per_unit_value": {
                              "type": "number",
                              "examples": [
                                33
                              ]
                            },
                            "recycling": {
                              "type": "string",
                              "examples": [
                                "en:recycle-in-sorting-bin"
                              ]
                            },
                            "weight_measured": {
                              "type": "number",
                              "examples": [
                                12.08
                              ]
                            }
                          }
                        }
                      },
                      "score": {
                        "type": "integer"
                      },
                      "value": {
                        "type": "integer"
                      },
                      "warning": {
                        "type": "string"
                      }
                    }
                  },
                  "production_system": {
                    "type": "object",
                    "properties": {
                      "labels": {
                        "type": "array",
                        "examples": [
                          "vegan",
                          "fat free",
                          "Kosher"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "value": {
                        "type": "integer"
                      },
                      "warning": {
                        "type": "string"
                      }
                    }
                  },
                  "threatened_species": {
                    "type": "object",
                    "properties": {
                      "ingredient": {
                        "type": "string"
                      },
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "agribalyse": {
                "type": "object",
                "properties": {
                  "agribalyse_proxy_food_code": {
                    "type": "string"
                  },
                  "agribalyse_food_code": {
                    "type": "string"
                  },
                  "co2_agriculture": {
                    "type": "number"
                  },
                  "co2_consumption": {
                    "type": "integer"
                  },
                  "co2_distribution": {
                    "type": "number"
                  },
                  "co2_packaging": {
                    "type": "number"
                  },
                  "co2_processing": {
                    "type": "number"
                  },
                  "co2_total": {
                    "type": "number"
                  },
                  "co2_transportation": {
                    "type": "number"
                  },
                  "code": {
                    "type": "string"
                  },
                  "dqr": {
                    "type": "string"
                  },
                  "ef_agriculture": {
                    "type": "number"
                  },
                  "ef_consumption": {
                    "type": "integer"
                  },
                  "ef_distribution": {
                    "type": "number"
                  },
                  "ef_packaging": {
                    "type": "number"
                  },
                  "ef_processing": {
                    "type": "number"
                  },
                  "ef_total": {
                    "type": "number"
                  },
                  "ef_transportation": {
                    "type": "number"
                  },
                  "is_beverage": {
                    "type": "integer"
                  },
                  "name_en": {
                    "type": "string",
                    "description": "This can be returned in many other languages\nlike name_fr (for french).\n"
                  },
                  "score": {
                    "type": "integer"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              },
              "grade": {
                "type": "string"
              },
              "grades": {
                "type": "object",
                "patternProperties": {
                  "(?<country_code>\\w\\w)": {
                    "type": "string"
                  }
                }
              },
              "missing": {
                "type": "object",
                "properties": {
                  "labels": {
                    "type": "integer"
                  },
                  "origins": {
                    "type": "integer"
                  },
                  "packagings": {
                    "type": "integer"
                  }
                }
              },
              "missing_data_warning": {
                "type": "integer"
              },
              "previous_data": {
                "type": "object",
                "properties": {
                  "grade": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "score": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "agribalyse": {
                    "type": "object",
                    "properties": {
                      "agribalyse_proxy_food_code": {
                        "type": "string"
                      },
                      "agribalyse_food_code": {
                        "type": "string"
                      },
                      "co2_agriculture": {
                        "type": "number"
                      },
                      "co2_consumption": {
                        "type": "integer"
                      },
                      "co2_distribution": {
                        "type": "number"
                      },
                      "co2_packaging": {
                        "type": "number"
                      },
                      "co2_processing": {
                        "type": "number"
                      },
                      "co2_total": {
                        "type": "number"
                      },
                      "co2_transportation": {
                        "type": "number"
                      },
                      "code": {
                        "type": "string"
                      },
                      "dqr": {
                        "type": "string"
                      },
                      "ef_agriculture": {
                        "type": "number"
                      },
                      "ef_consumption": {
                        "type": "integer"
                      },
                      "ef_distribution": {
                        "type": "number"
                      },
                      "ef_packaging": {
                        "type": "number"
                      },
                      "ef_processing": {
                        "type": "number"
                      },
                      "ef_total": {
                        "type": "number"
                      },
                      "ef_transportation": {
                        "type": "number"
                      },
                      "is_beverage": {
                        "type": "integer"
                      },
                      "name_en": {
                        "type": "string",
                        "description": "This can be returned in many other languages\nlike name_fr (for french).\n"
                      },
                      "score": {
                        "type": "integer"
                      },
                      "version": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "score": {
                "type": "integer"
              },
              "scores": {
                "type": "object",
                "patternProperties": {
                  "(?<country_code>\\w\\w)": {
                    "type": "integer"
                  }
                }
              },
              "status": {
                "type": "string"
              }
            }
          },
          "ecoscore_extended_data_version": {
            "type": "string"
          },
          "environment_impact_level": {
            "type": "string"
          },
          "environment_impact_level_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Product-Ingredients": {
        "type": "object",
        "title": "product_ingredients",
        "description": "Fields about ingredients of a product",
        "properties": {
          "additives_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allergens": {
            "type": "string",
            "description": "comma separated list of allergens"
          },
          "allergens_lc": {
            "type": "string",
            "description": "language in which `allergens` where input"
          },
          "allergens_hierarchy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allergens_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ingredients": {
            "$ref": "#/components/schemas/Ingredient/properties/ingredients"
          },
          "ingredients_analysis": {
            "type": "object",
            "properties": {
              "en:palm-oil": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "en:vegan-status-unknown": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "en:vegetarian-status-unknown": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "ingredients_analysis_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ingredients_from_or_that_may_be_from_palm_oil_n": {
            "type": "integer"
          },
          "ingredients_from_palm_oil_n": {
            "type": "integer"
          },
          "ingredients_from_palm_oil_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "ingredients_hierarchy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ingredients_n": {
            "type": "integer"
          },
          "ingredients_n_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ingredients_original_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ingredients_percent_analysis": {
            "type": "integer",
            "description": "Indicates the result of ingredients analysis processing\n\n* not present -> we didn't run ingredient percent analysis (e.g. we have no ingredients)\n* 1: we estimated the ingredients percent.\n* -1 : we tried to estimate the ingredients, but the values were impossible. (e.g. if the sum of % is above 100%)\n"
          },
          "ingredients_sweeteners_n": {
            "type": "integer",
            "description": "Number of sweeteners additives in the ingredients. Undefined if ingredients are not specified.\n"
          },
          "ingredients_non_nutritive_sweeteners_n": {
            "type": "integer",
            "description": "Number of non-nutritive sweeteners additives (as specified in the Nutri-Score formula) in the ingredients. Undefined if ingredients are not specified.\n"
          },
          "ingredients_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ingredients_lc": {
            "type": "string",
            "description": "Language that was used to parse the ingredient list. If `ingredients_text` is available\nfor the product main language (`lang`), `ingredients_lc=lang`, otherwise we look at\n`ingredients_text` fields for other languages and set `ingredients_lc` to the first\nnon-empty `ingredient_text`.\n"
          },
          "ingredients_text": {
            "type": "string",
            "description": "Raw list of ingredients. This will get automatically\nparsed and get used to compute the Eco-Score or find allergens, etc..\n\nIt's a copy of ingredients_text in the main language of the product (see `lang` proprety).\n",
            "example": "Farine de blé* 67,4%, sucre de canne*, huile de tournesol oléique*, graines de chia* 5,2%, son de blé*, oranges déshydratées * 0,9%, farine de riz*, poudres à lever (acide citrique, carbonates de sodium), arôme naturel d'orange.\n"
          },
          "ingredients_text_with_allergens": {
            "type": "string",
            "description": "Same text as `ingredients_text` but where allergens have HTML elements around them to identify them\n",
            "example": "Farine de <span class=\"allergen\">blé*</span> 67,4%, sucre de canne*, huile de tournesol oléique*, graines de chia* 5,2%, <span class=\"allergen\">son de blé*</span>, oranges déshydratées * 0,9%, farine de riz*, poudres à lever (acide citrique, carbonates de sodium), arôme naturel d'orange.\n"
          },
          "ingredients_that_may_be_from_palm_oil_n": {
            "type": "integer"
          },
          "ingredients_that_may_be_from_palm_oil_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "ingredients_with_specified_percent_n": {
            "type": "integer"
          },
          "ingredients_with_specified_percent_sum": {
            "type": "integer"
          },
          "ingredients_with_unspecified_percent_n": {
            "type": "integer"
          },
          "ingredients_with_unspecified_percent_sum": {
            "type": "integer"
          },
          "known_ingredients_n": {
            "type": "integer"
          },
          "origins": {
            "type": "string",
            "description": "Origins of ingredients\n"
          },
          "origins_hierarchy": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "origins_lc": {
            "type": "string"
          },
          "origins_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "traces": {
            "type": "string",
            "description": "List of substances that might cause allergies\nthat are present in trace amounts in the product\n(this does not include the ingredients, as they\nare not only present in trace amounts).\nIt is taxonomized with the allergens taxonomy. Refer to the [allergens taxonomy](https://static.openfoodfacts.org/data/taxonomies/allergens.json)\n"
          },
          "traces_hierarchy": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "traces_lc": {
            "type": "string"
          },
          "traces_tags": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "unknown_ingredients_n": {
            "type": "integer"
          }
        },
        "patternProperties": {
          "ingredients_text_(?<language_code>\\w\\w)": {
            "type": "string",
            "description": "Raw list of ingredients in language given by 'language_code'.\n\nSee `ingredients_text`\n"
          },
          "ingredients_text_with_allergens_(?<language_code>\\w\\w)": {
            "description": "Like `ingredients_text_with_allergens` for a particular language\n",
            "type": "string"
          }
        }
      },
      "Product-Nutrition": {
        "type": "object",
        "title": "product_nutrition",
        "description": "Nutrition fields of a product\n\nMost of these properties are read-only.\n\nSee [how to add nutrition data](https://openfoodfacts.github.io/openfoodfacts-server/api/ref-cheatsheet/#add-nutrition-facts-values-units-and-base)\n",
        "properties": {
          "no_nutrition_data": {
            "type": "string",
            "description": "When a product does not have nutrition data displayed on the\npackaging, the user can check the field \"Nutrition facts are\nnot specified on the product\".\nBy doing so, the no_nutrition_data field takes the value \"on\".\nThis case is frequent (thousands of products).\n",
            "example": "on"
          },
          "nutrition_data_per": {
            "type": "string",
            "enum": [
              "serving",
              "100g"
            ],
            "description": "The nutrition data on the package can be per serving or per 100g.\n\nThis is essential to understand if `<nutrient>_value` and `<nutrient>`\nvalues in `nutriments` applies for a serving or for 100g.\n\n**IMPORTANT:**\nWhen writing products,\nthis setting applies to all existing nutrients values for the product,\nnot only the nutrient values sent in the write request.\nSo it should not be changed unless all nutrients values are provided\nwith values that match the nutrition_data_per field.\n"
          },
          "nutrition_data_prepared_per": {
            "type": "string",
            "enum": [
              "serving",
              "100g"
            ],
            "description": "The nutrition data for prepared product on the package (if any) can be per serving or per 100g.\n\nThis is essential to understand if `<nutrient>_prepared_value` and `<nutrient>_prepared`\nvalues in `nutriments` applies for a serving or for 100g.\n\nSee also important note on `nutrition_data_per`.\n"
          },
          "nutriments": {
            "type": "object",
            "description": "All known nutrients for the product.\n\nNote that each nutrients are declined with a variety of suffixes like `_100g`, `_serving`,\nsee patternProperties below.\n\nA specific `_unit` is the unit of the value that was entered by the contributor (a user or the manufacturer).\nIt is not necessarily the unit that is printed on the product, as some apps may force specific units when writing nutrient values.\n\nBeware that some properties are to be interpreted based upon `nutrition_data_per` value.\n\nFor most use cases, you should use the `<nutrient>_100g` or `<nutrient>_serving` fields, as they are always in the same standard unit, for a specific quantity (100g or 1 serving).\n\nFor products that have a nutrition table for prepared product\n(eg. the nutrition facts for a bowl of milk with cocoa powder),\na `_prepared` suffix is added (before other suffixes).\n\nYou can get all possible nutrients from the\n[nutrients taxonomy](https://static.openfoodfacts.org/data/taxonomies/nutrients.json)\n\n**FIXME** add more nutrients with description.\n",
            "properties": {
              "alcohol": {
                "description": "Quantity of alcohol\n\n(per 100g or per serving) in a standard unit (g or ml)\n",
                "type": "number"
              },
              "carbohydrates": {
                "description": "This is the available carbohydrates (excluding fiber), also known as net carbohydrates",
                "type": "number"
              },
              "carbohydrates-total": {
                "description": "This follows the US / Canada definition of carbohydrates which includes fiber, also known as gross carbohydrates",
                "type": "number"
              },
              "energy": {
                "type": "number",
                "description": "It is the same as `energy-kj` if we have it, or computed from `energy-kcal` otherwise\n\n(per 100g or per serving) in kj\n"
              },
              "energy_value": {
                "type": "number",
                "description": "energy_value will be equal to energy-kj_value if we have it or to energy-kcal_value otherwise\n"
              },
              "energy_unit": {
                "type": "string",
                "enum": [
                  "kcal",
                  "kJ"
                ],
                "description": "Equal to energy-kj_unit if we have it or to energy-kcal_unit otherwise\n"
              },
              "energy-kcal": {
                "type": "number",
                "description": "energy in kcal, if it is specified\n\n(per 100g or per serving) in a standard unit (g or ml)\n"
              },
              "energy-kj": {
                "type": "number",
                "description": "energy in kj, if it is specified\n\n(per 100g or per serving) in a standard unit (g or ml)\n"
              },
              "fat": {
                "type": "number"
              },
              "fruits-vegetables-legumes-estimate-from-ingredients": {
                "type": "number",
                "description": "An estimate, from the ingredients list of the percentage of fruits, vegetable and legumes.\nThis is an important information for Nutri-Score (2023 version) computation.\n"
              },
              "fruits-vegetables-nuts-estimate-from-ingredients": {
                "type": "number",
                "description": "An estimate, from the ingredients list of the percentage of fruits, vegetable and nuts.\nThis is an important information for Nutri-Score (2021 version) computation.\n"
              },
              "nova-group": {
                "type": "integer"
              },
              "nutrition-score-fr": {
                "description": "Experimental nutrition score derived from\nthe UK FSA score and adapted for the French market\n(formula defined by the team of Professor Hercberg).\n"
              },
              "proteins": {
                "type": "number"
              },
              "salt": {
                "type": "number"
              },
              "saturated-fat": {
                "type": "number"
              },
              "sodium": {
                "type": "number"
              },
              "sugars": {
                "type": "number"
              },
              "carbon-footprint-from-known-ingredients_product": {
                "type": "integer"
              },
              "carbon-footprint-from-known-ingredients_serving": {
                "type": "number"
              },
              "erythritol": {
                "type": "number",
                "description": "erythritol is a polyol which is not providing any energy.\nAs such, it needs not be taken into account when computing\nthe energy of a product. Eryhtritol is now displayed on\nnutrition facts sheet of some products, mainly in the USA.\nThis value is entered either by contributors, either by\nimports.\n",
                "example": 12.5
              }
            },
            "patternProperties": {
              "(?<nutrient>[\\w-]+)_unit": {
                "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product as sold (not prepared).\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n\n**Note**: For most use cases, you should not use this unit, as it can change depending on how the value was entered.\nInstead use the `<nutrient>_100g` or `<nutrient>_serving` fields, and convert them to the unit you need.\n",
                "type": "string",
                "enum": [
                  "公斤",
                  "公升",
                  "kg",
                  "кг",
                  "l",
                  "л",
                  "毫克",
                  "mg",
                  "мг",
                  "mcg",
                  "µg",
                  "oz",
                  "fl oz",
                  "dl",
                  "дл",
                  "cl",
                  "кл",
                  "斤",
                  "g",
                  "",
                  " ",
                  "kJ",
                  "克",
                  "公克",
                  "г",
                  "мл",
                  "ml",
                  "mmol/l",
                  "毫升",
                  "% vol",
                  "ph",
                  "%",
                  "% dv",
                  "% vol (alcohol)",
                  "iu",
                  "mol/l",
                  "mval/l",
                  "ppm",
                  "�rh",
                  "�fh",
                  "�e",
                  "�dh",
                  "gpg"
                ]
              },
              "(?<nutrient>[\\w-]+)_100g": {
                "description": "The normalized value of the nutrient for 100g (or 100ml for liquids), in a standard unit, for the product as sold (not prepared):\n* g for all nutrients that are measured by weight (e.g. fat, proteins, carbohydrates, sodium, vitamins, minerals etc.)\n* % vol for nutrients that are percentages by volume (e.g. alcohol)\n* kJ for energy and energy-kj\n* kcal for energy-kcal\n* no unit for pH\n\nThis is computed from the `nutrient` property,\nthe serving size (if `nutrient` is per serving), and the `nutrient`_unit field.\n\n**Note**:\nFor most use cases, this is the only value you should use, as it is always in the same unit, and always per 100g or 100ml.\n",
                "type": "number",
                "readOnly": true
              },
              "(?<nutrient>[\\w-]+)_serving": {
                "description": "The normalized value of the nutrient for one serving, in a standard unit:\n- g for most nutrients\n- % for nutrients that are percentages (e.g. alcohol)\n- kJ for energy and energy-kj\n- kcal for energy-kcal\n\nThis is computed from the `nutrient` property,\nthe serving size (if `nutrient` is per 100g), and the `nutrient`_unit field.\n",
                "type": "number",
                "readOnly": true
              },
              "(?<nutrient>[\\w-]+)_value": {
                "description": "The value entered by the contributor (a user or the manufacturer).\nIn most cases, the unit of the value is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\n* per 100g or serving, depending on `nutrition_data_per` field.\n* in the unit of the corresponding <nutrient>_unit field.\n\n**Note**: For most use cases, you should not use this value, as it can be in different units, and can be per 100g or per serving.\n",
                "type": "number",
                "readOnly": true
              },
              "(?<nutrient>[\\w-]+)_prepared": {
                "description": "Same as '(?<nutrient>[\\w-]+)', for the prepared product (not as sold).\n",
                "type": "number"
              },
              "(?<nutrient>[\\w-]+)_prepared_unit": {
                "description": "Same as '(?<nutrient>[\\w-]+)_unit', for the prepared product (not as sold).\n",
                "type": "string"
              },
              "(?<nutrient>[\\w-]+)_prepared_100g": {
                "description": "Same as '(?<nutrient>[\\w-]+)_100g', for the prepared product (not as sold).\n",
                "type": "number",
                "readOnly": true
              },
              "(?<nutrient>[\\w-]+)_prepared_serving": {
                "description": "Same as '(?<nutrient>[\\w-]+)_serving', for the prepared product (not as sold).\n",
                "type": "number",
                "readOnly": true
              },
              "(?<nutrient>[\\w-]+)_prepared_value": {
                "description": "Same as '(?<nutrient>[\\w-]+)_value', for the prepared product (not as sold).\n",
                "type": "number",
                "readOnly": true
              }
            }
          },
          "nutriscore_data": {
            "description": "Detail of data the Nutri-Score was computed upon.\n\n**Note**: this might not be stable, don't rely too much on this, or, at least, tell us !\n\n**TODO** document each property\n",
            "type": "object",
            "properties": {
              "saturated_fat_ratio": {
                "type": "number"
              },
              "saturated_fat_ratio_points": {
                "type": "integer"
              },
              "saturated_fat_ratio_value": {
                "type": "number"
              }
            }
          },
          "nutrition_grade_fr": {
            "type": "string",
            "description": "Nutrition grade (‘a’ to ‘e’),\nhttps://world.openfoodfacts.org/nutriscore.\n"
          },
          "nutrition_grades": {
            "description": "Nutrition grades as a comma separated list.\n\nSome products with multiple components might have multiple Nutri-Score\n",
            "type": "string"
          },
          "nutrition_grades_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nutrition_score_beverage": {
            "type": "integer"
          },
          "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients": {
            "type": "integer"
          },
          "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value": {
            "type": "integer"
          },
          "nutrition_score_warning_no_fiber": {
            "type": "integer"
          },
          "other_nutritional_substances_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "unknown_nutrients_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "vitamins_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Product-Nutriscore": {
        "title": "ProductNutriscore",
        "type": "object",
        "properties": {
          "nutriscore": {
            "title": "Nutriscores",
            "type": "object",
            "properties": {
              "2021": {
                "title": "Nutriscore2021",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "category_available": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          1
                        ]
                      },
                      "grade": {
                        "examples": [
                          "d"
                        ],
                        "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                        "type": "string",
                        "enum": [
                          "a",
                          "b",
                          "c",
                          "d",
                          "e"
                        ]
                      },
                      "nutrients_available": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          1
                        ]
                      },
                      "nutriscore_applicable": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          1
                        ]
                      },
                      "nutriscore_computed": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          1
                        ]
                      },
                      "score": {
                        "type": "integer",
                        "examples": [
                          13,
                          18
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "data": {
                        "title": "Nutriscore2021Data",
                        "allOf": [
                          {
                            "title": "Nutriscore2021InnerData",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "is_beverage": {
                                    "type": "integer",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "is_cheese": {
                                    "type": "integer",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "is_water": {
                                    "type": "integer",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "examples": [
                                      0
                                    ]
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "is_fat": {
                                    "type": "integer",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "energy": {
                                    "type": "integer",
                                    "examples": [
                                      1996
                                    ]
                                  },
                                  "energy_points": {
                                    "type": "integer",
                                    "examples": [
                                      5
                                    ]
                                  },
                                  "energy_value": {
                                    "type": "integer",
                                    "examples": [
                                      1996
                                    ]
                                  },
                                  "fiber": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      3.8
                                    ]
                                  },
                                  "fiber_points": {
                                    "type": "integer",
                                    "examples": [
                                      4
                                    ]
                                  },
                                  "fiber_value": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      3.8
                                    ]
                                  },
                                  "fruits_vegetables_nuts_colza_walnut_olive_oils": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "fruits_vegetables_nuts_colza_walnut_olive_oils_points": {
                                    "type": "integer",
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "fruits_vegetables_nuts_colza_walnut_olive_oils_value": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "proteins": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      6.6
                                    ]
                                  },
                                  "proteins_points": {
                                    "type": "integer",
                                    "examples": [
                                      4
                                    ]
                                  },
                                  "proteins_value": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      6.6
                                    ]
                                  },
                                  "saturated_fat": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      6.2
                                    ]
                                  },
                                  "saturated_fat_points": {
                                    "type": "integer",
                                    "examples": [
                                      6
                                    ]
                                  },
                                  "saturated_fat_value": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      6.2
                                    ]
                                  },
                                  "sodium": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      210
                                    ]
                                  },
                                  "sodium_points": {
                                    "type": "integer",
                                    "examples": [
                                      2
                                    ]
                                  },
                                  "sodium_value": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      210
                                    ]
                                  },
                                  "sugars": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      21.5
                                    ]
                                  },
                                  "sugars_points": {
                                    "type": "integer",
                                    "examples": [
                                      4
                                    ]
                                  },
                                  "sugars_value": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      21.5
                                    ]
                                  },
                                  "negative_points": {
                                    "type": "integer",
                                    "examples": [
                                      17
                                    ]
                                  },
                                  "positive_points": {
                                    "type": "integer",
                                    "examples": [
                                      4
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "grade": {
                                "examples": [
                                  "d"
                                ],
                                "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                                "type": "string",
                                "enum": [
                                  "a",
                                  "b",
                                  "c",
                                  "d",
                                  "e"
                                ]
                              },
                              "score": {
                                "type": "integer",
                                "examples": [
                                  13
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "2023": {
                "title": "Nutriscore2023",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "category_available": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          1
                        ]
                      },
                      "grade": {
                        "examples": [
                          "d"
                        ],
                        "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                        "type": "string",
                        "enum": [
                          "a",
                          "b",
                          "c",
                          "d",
                          "e"
                        ]
                      },
                      "nutrients_available": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          1
                        ]
                      },
                      "nutriscore_applicable": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          1
                        ]
                      },
                      "nutriscore_computed": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          1
                        ]
                      },
                      "score": {
                        "type": "integer",
                        "examples": [
                          13,
                          18
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "data": {
                        "title": "Nutriscore2023Data",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "is_beverage": {
                                "type": "integer",
                                "enum": [
                                  0,
                                  1
                                ],
                                "examples": [
                                  0
                                ]
                              },
                              "is_cheese": {
                                "type": "integer",
                                "enum": [
                                  0,
                                  1
                                ],
                                "examples": [
                                  0
                                ]
                              },
                              "is_water": {
                                "type": "integer",
                                "enum": [
                                  0,
                                  1
                                ],
                                "examples": [
                                  0
                                ]
                              }
                            }
                          },
                          {
                            "properties": {
                              "is_fat_oil_nuts_seeds": {
                                "type": "integer",
                                "enum": [
                                  0,
                                  1
                                ],
                                "examples": [
                                  0
                                ]
                              },
                              "is_red_meat_product": {
                                "type": "integer",
                                "enum": [
                                  0,
                                  1
                                ],
                                "examples": [
                                  0
                                ]
                              },
                              "components": {
                                "title": "Nutriscore2023DataComponents",
                                "type": "object",
                                "properties": {
                                  "negative": {
                                    "type": "array",
                                    "items": {
                                      "title": "NutriscoreComponent",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "examples": [
                                            "energy",
                                            "sugars",
                                            "saturated_fat",
                                            "salt",
                                            "fiber",
                                            "fruits_vegetables_legumes"
                                          ]
                                        },
                                        "points": {
                                          "type": "integer",
                                          "examples": [
                                            5,
                                            6,
                                            7,
                                            2,
                                            1,
                                            0
                                          ]
                                        },
                                        "points_max": {
                                          "type": "integer",
                                          "examples": [
                                            10,
                                            15,
                                            20,
                                            25,
                                            5,
                                            5
                                          ]
                                        },
                                        "unit": {
                                          "type": "string",
                                          "examples": [
                                            "kJ",
                                            "g",
                                            "%"
                                          ]
                                        },
                                        "value": {
                                          "type": [
                                            "null",
                                            "number"
                                          ],
                                          "format": "float",
                                          "examples": [
                                            21.5,
                                            6.2,
                                            0.53,
                                            3.8,
                                            0
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "positive": {
                                    "type": "array",
                                    "items": {
                                      "title": "NutriscoreComponent",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "examples": [
                                            "energy",
                                            "sugars",
                                            "saturated_fat",
                                            "salt",
                                            "fiber",
                                            "fruits_vegetables_legumes"
                                          ]
                                        },
                                        "points": {
                                          "type": "integer",
                                          "examples": [
                                            5,
                                            6,
                                            7,
                                            2,
                                            1,
                                            0
                                          ]
                                        },
                                        "points_max": {
                                          "type": "integer",
                                          "examples": [
                                            10,
                                            15,
                                            20,
                                            25,
                                            5,
                                            5
                                          ]
                                        },
                                        "unit": {
                                          "type": "string",
                                          "examples": [
                                            "kJ",
                                            "g",
                                            "%"
                                          ]
                                        },
                                        "value": {
                                          "type": [
                                            "null",
                                            "number"
                                          ],
                                          "format": "float",
                                          "examples": [
                                            21.5,
                                            6.2,
                                            0.53,
                                            3.8,
                                            0
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "count_proteins": {
                                "type": "number",
                                "format": "float",
                                "examples": [
                                  0
                                ]
                              },
                              "count_proteins_reason": {
                                "type": "string",
                                "examples": [
                                  "negative_points_greater_than_or_equal_to_11"
                                ]
                              },
                              "negative_points": {
                                "type": "integer",
                                "examples": [
                                  19
                                ]
                              },
                              "positive_points": {
                                "type": "integer",
                                "examples": [
                                  1
                                ]
                              },
                              "negative_points_max": {
                                "type": "integer",
                                "examples": [
                                  55
                                ]
                              },
                              "positive_points_max": {
                                "type": "integer",
                                "examples": [
                                  10
                                ]
                              },
                              "positive_nutrients": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "examples": [
                                  [
                                    "fiber",
                                    "fruits_vegetables_legumes"
                                  ]
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "nutriscore_2021_tags": {
            "type": "array",
            "items": {
              "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
              "type": "string",
              "enum": [
                "a",
                "b",
                "c",
                "d",
                "e"
              ]
            },
            "examples": [
              [
                "d"
              ]
            ]
          },
          "nutriscore_2023_tags": {
            "type": "array",
            "items": {
              "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
              "type": "string",
              "enum": [
                "a",
                "b",
                "c",
                "d",
                "e"
              ]
            },
            "examples": [
              [
                "d"
              ]
            ]
          },
          "nutriscore_data": {
            "title": "Nutriscore2021Data",
            "allOf": [
              {
                "title": "Nutriscore2021InnerData",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "is_beverage": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          0
                        ]
                      },
                      "is_cheese": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          0
                        ]
                      },
                      "is_water": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          0
                        ]
                      }
                    }
                  },
                  {
                    "properties": {
                      "is_fat": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "examples": [
                          0
                        ]
                      },
                      "energy": {
                        "type": "integer",
                        "examples": [
                          1996
                        ]
                      },
                      "energy_points": {
                        "type": "integer",
                        "examples": [
                          5
                        ]
                      },
                      "energy_value": {
                        "type": "integer",
                        "examples": [
                          1996
                        ]
                      },
                      "fiber": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          3.8
                        ]
                      },
                      "fiber_points": {
                        "type": "integer",
                        "examples": [
                          4
                        ]
                      },
                      "fiber_value": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          3.8
                        ]
                      },
                      "fruits_vegetables_nuts_colza_walnut_olive_oils": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          0
                        ]
                      },
                      "fruits_vegetables_nuts_colza_walnut_olive_oils_points": {
                        "type": "integer",
                        "examples": [
                          0
                        ]
                      },
                      "fruits_vegetables_nuts_colza_walnut_olive_oils_value": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          0
                        ]
                      },
                      "proteins": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          6.6
                        ]
                      },
                      "proteins_points": {
                        "type": "integer",
                        "examples": [
                          4
                        ]
                      },
                      "proteins_value": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          6.6
                        ]
                      },
                      "saturated_fat": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          6.2
                        ]
                      },
                      "saturated_fat_points": {
                        "type": "integer",
                        "examples": [
                          6
                        ]
                      },
                      "saturated_fat_value": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          6.2
                        ]
                      },
                      "sodium": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          210
                        ]
                      },
                      "sodium_points": {
                        "type": "integer",
                        "examples": [
                          2
                        ]
                      },
                      "sodium_value": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          210
                        ]
                      },
                      "sugars": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          21.5
                        ]
                      },
                      "sugars_points": {
                        "type": "integer",
                        "examples": [
                          4
                        ]
                      },
                      "sugars_value": {
                        "type": "number",
                        "format": "float",
                        "examples": [
                          21.5
                        ]
                      },
                      "negative_points": {
                        "type": "integer",
                        "examples": [
                          17
                        ]
                      },
                      "positive_points": {
                        "type": "integer",
                        "examples": [
                          4
                        ]
                      }
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "grade": {
                    "examples": [
                      "d"
                    ],
                    "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                    "type": "string",
                    "enum": [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e"
                    ]
                  },
                  "score": {
                    "type": "integer",
                    "examples": [
                      13
                    ]
                  }
                }
              }
            ]
          },
          "nutriscore_grade": {
            "examples": [
              "d"
            ],
            "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
            "type": "string",
            "enum": [
              "a",
              "b",
              "c",
              "d",
              "e"
            ]
          },
          "nutriscore_score": {
            "description": "Nutri-Score for the product as an integer (see also `nutriscore_grade`).\n",
            "type": "integer",
            "examples": [
              13
            ]
          },
          "nutriscore_score_opposite": {
            "type": "integer",
            "examples": [
              -13
            ]
          },
          "nutriscore_tags": {
            "type": "array",
            "items": {
              "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
              "type": "string",
              "enum": [
                "a",
                "b",
                "c",
                "d",
                "e"
              ]
            },
            "examples": [
              [
                "d"
              ]
            ]
          },
          "nutriscore_version": {
            "type": "string"
          }
        }
      },
      "Product-Quality": {
        "type": "object",
        "description": "This is data that is linked to products data quality\n",
        "properties": {
          "data_quality_bugs_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Each data quality bug describes a data quality bug on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
            }
          },
          "data_quality_errors_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Each Data Quality Error describes a data quality error on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
            }
          },
          "data_quality_info_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Each Data Quality Info describes a data quality info on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
            }
          },
          "data_quality_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Each Data Quality tag describes a data quality issue on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
            }
          },
          "data_quality_warnings_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Each Data Quality warning tag describes a data quality warning on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
            }
          },
          "data_sources": {
            "type": "string",
            "description": "Source of data imported from producers.\n"
          },
          "data_sources_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_check_dates_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_checked_t": {
            "type": "integer"
          },
          "last_checker": {
            "type": "string"
          },
          "states": {
            "description": "comma separated list of values indicating some states of the product,\nlike things to be done, or to be completed.\nSee [states taxonomy](https://static.openfoodfacts.net/data/taxonomies/states.json)\n",
            "type": "string"
          },
          "states_hierarchy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "states_tags": {
            "type": "array",
            "items": {
              "description": "Each state describe something that is completed or is to be done or improved on the product.\n\nRefer to [states taxonomy](https://static.openfoodfacts.net/data/taxonomies/states.json)\n",
              "type": "string"
            }
          },
          "misc_tags": {
            "description": "Information about different aspect of the product\n  Refer to [misc taxonomy](https://static.openfoodfacts.org/data/taxonomies/misc.json)\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Product-Extended": {
        "title": "product_extended",
        "type": "object",
        "properties": {
          "additives_original_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "additives_prev_original_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "added_countries_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "allergens_from_ingredients": {
            "type": "string"
          },
          "allergens_from_user": {
            "type": "string"
          },
          "amino_acids_prev_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "amino_acids_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "carbon_footprint_percent_of_known_ingredients": {
            "type": "integer"
          },
          "categories_properties": {
            "type": "object",
            "properties": {
              "agribalyse_food_code:en": {
                "type": "string"
              },
              "agribalyse_proxy_food_code:en": {
                "type": "string"
              },
              "ciqual_food_code:en": {
                "type": "string"
              }
            }
          },
          "categories_properties_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "category_properties": {
            "type": "object",
            "additionalProperties": {
              "description": "those are properties taken from the category taxonomy",
              "type": "string"
            }
          },
          "ciqual_food_name_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compared_to_category": {
            "type": "string",
            "description": "the category to use for comparison.\n\n**TODO** explain how it is chosen.\n"
          },
          "conservation_conditions": {
            "type": "string"
          },
          "customer_service": {
            "type": "string",
            "description": "Contact info of customer service.\n"
          },
          "expiration_date": {
            "type": "string"
          },
          "link": {
            "type": "string",
            "description": "link to the product on the website of the producer\n"
          },
          "main_countries_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "minerals_prev_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "minerals_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "owner_fields": {
            "type": "object",
            "description": "Those are fields provided by the producer (through producers platform),\nand the value he provided.\n",
            "properties": {
              "additionalProperties": {
                "description": "you can retrieve all kind of properties, the same as on the parent object (the product).\nIt's not processed entries (like tags for example) but raw ones.\n",
                "oneOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              }
            }
          },
          "nova_groups_markers": {
            "type": "object",
            "description": "Detail of ingredients or processing that makes the products having Nova 3 or 4\n",
            "propertyNames": {
              "description": "Markers of level 3, 4, ...",
              "type": "integer",
              "enum": [
                3,
                4
              ]
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "description": "This array has two elements for each marker. The first element is the tag type of the marker (e.g. \"ingredients\", \"additives\", \"categories\"), and the second is the tag id in the taxonomy (e.g. \"en:e471\")",
                  "type": "string"
                }
              }
            }
          },
          "nucleotides_tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "origin": {
            "type": "string"
          },
          "purchase_places": {
            "type": "string",
            "description": "Country, state, or city where the product can be purchased.\n",
            "example": "Paris"
          },
          "purchase_places_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stores": {
            "type": "string",
            "description": "Distributor name.\n",
            "example": "Walmart"
          },
          "stores_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "traces_from_ingredients": {
            "type": "string"
          },
          "traces_from_user": {
            "type": "string"
          }
        },
        "patternProperties": {
          "conservation_conditions_(?<language_code>\\w\\w)": {
            "type": "string"
          },
          "customer_service_(?<language_code>\\w\\w)": {
            "type": "string"
          },
          "origin_(?<language_code>\\w\\w)": {
            "type": "string",
            "description": "`origin` in language indicated by `language_code`\n"
          }
        }
      },
      "Product-Metadata": {
        "type": "object",
        "description": "Metadata of a product (author, editors, creation date, etc.)\n",
        "properties": {
          "created_t": {
            "type": "integer",
            "description": "Date when the product was added (UNIX timestamp format).\nSee also `entry_dates_tags`\n",
            "example": 1457680652
          },
          "creator": {
            "type": "string",
            "description": "The contributor who added the product first.\n"
          },
          "editors_tags": {
            "description": "List of editors who edited the product.\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "informers_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "interface_version_created": {
            "type": "string"
          },
          "interface_version_modified": {
            "type": "string"
          },
          "languages": {
            "type": "object",
            "patternProperties": {
              "en:(?<language_name>\\w\\w)": {
                "type": "integer",
                "description": "**TODO** explain !\n"
              }
            }
          },
          "languages_codes": {
            "type": "object",
            "patternProperties": {
              "(?<language_code>\\w\\w)": {
                "type": "integer"
              }
            },
            "description": "Same as `languages` but by language code, instead of language tags\n"
          },
          "languages_hierarchy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "languages_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_edit_dates_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_editor": {
            "type": "string"
          },
          "last_modified_by": {
            "type": "string",
            "description": "The username of the user who last modified the product.\n",
            "example": "sebleouf"
          },
          "last_modified_t": {
            "type": "integer",
            "description": "Date when the product page was last modified.\nThis date is updated only when primary data is modified (data entered by the user or updated by an interface)\n"
          },
          "last_updated_t": {
            "type": "integer",
            "description": "Date when the product page was last modified.\nThis date is updated when primary data or secondary data is modified\n(primary: data entered by a user or read from an interface, secondary: data computed by a utility\nsuch as update_all_products.pl)\n"
          },
          "owner": {
            "description": "Id of the producer in case he provides his own data about a product (producer platform).\n",
            "type": "string"
          },
          "owners_tags": {
            "description": "Tagyfied version of owner\n",
            "type": "string"
          },
          "photographers_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rev": {
            "description": "revision number of this product version (each edit adds a revision)",
            "type": "integer"
          },
          "sources": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "product_meta_source",
              "properties": {
                "fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "import_t": {
                  "type": "integer"
                },
                "manufacturer": {
                  "type": [
                    "integer",
                    "string"
                  ]
                },
                "name": {
                  "type": "string"
                },
                "source_licence": {
                  "type": "string"
                },
                "source_licence_url": {
                  "type": "string"
                },
                "url": {
                  "type": [
                    "null",
                    "string"
                  ]
                }
              }
            }
          },
          "sources_fields": {
            "type": "object",
            "title": "product_meta_source_fields",
            "properties": {
              "org-gs1": {
                "type": "object",
                "properties": {
                  "gln": {
                    "type": "string"
                  },
                  "gpcCategoryCode": {
                    "type": "string"
                  },
                  "gpcCategoryName": {
                    "type": "string"
                  },
                  "isAllergenRelevantDataProvided": {
                    "type": "string"
                  },
                  "lastChangeDateTime": {
                    "type": "string"
                  },
                  "partyName": {
                    "type": "string"
                  },
                  "productionVariantDescription": {
                    "type": "string"
                  },
                  "publicationDateTime": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "teams": {
            "type": "string"
          },
          "teams_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "update_key": {
            "type": "string"
          }
        }
      },
      "Product-Knowledge-Panels": {
        "type": "object",
        "description": "Knowledge panels for a product\n",
        "properties": {
          "knowledge_panels": {
            "type": "object",
            "title": "panels",
            "description": "The panels object is a dictionary of individual panel objects.\nEach key of the dictionary is the id of the panel, and the value is the panel object.\n\nApps typically display a number of root panels with known panel ids (e.g. health_card and environment_card). Panels can reference other panels and display them as sub-panels.",
            "examples": [
              {
                "additionalProperties": "string"
              }
            ],
            "properties": {
              "additionalProperties": {
                "title": "panel",
                "type": "object",
                "description": "Each panel contains an optional title and an optional array of elements.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the panel. If set to \"card\", the panel and its sub-panels should be displayed in a card. If set to \"inline\", the panel should have its content always displayed."
                  },
                  "expanded": {
                    "type": "boolean",
                    "description": "If true, the panel is to be displayed already expanded. If false, only the title should be displayed, and the user should be able to click or tap it to open the panel and display the elements."
                  },
                  "expand_for": {
                    "type": "string",
                    "description": "If set to \"large\", the content of the panel should be expanded on large screens, but it should still be possible to unexpand it."
                  },
                  "evaluation": {
                    "type": "string",
                    "description": "An evaluation status specifically for this title element. This can be used to directly color the icon if 'icon_color_from_evaluation' is true and this field is present, or it might provide context for the title itself. e.g. bad is red. Please be careful in choosing colors, to avoid 50 shades of red.",
                    "example": "bad",
                    "enum": [
                      "good",
                      "average",
                      "neutral",
                      "bad",
                      "unknown"
                    ]
                  },
                  "half_width_on_mobile": {
                    "type": "boolean",
                    "description": "If true, suggests that this panel could be rendered as half-width on mobile devices, allowing for side-by-side display with another half-width panel if applicable.",
                    "example": true
                  },
                  "title_element": {
                    "title": "title_element",
                    "x-stoplight": {
                      "id": "lox0wvl9bdgy2"
                    },
                    "type": "object",
                    "description": "The title of a panel.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "A short name of this panel, not including any actual values"
                      },
                      "title": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "grade",
                          "percentage"
                        ],
                        "description": "Used to indicate how the value of this item is measured, such as \"grade\" for Nutri-Score and Green-Score or \"percentage\" for Salt"
                      },
                      "grade": {
                        "type": "string",
                        "description": "The value for this panel where it corresponds to a A to E grade such as the Nutri-Score or the Green-Score.",
                        "enum": [
                          "a+",
                          "a",
                          "b",
                          "c",
                          "d",
                          "e",
                          "f",
                          "unknown"
                        ]
                      },
                      "value": {
                        "type": "number",
                        "description": "The numeric value of the panel, where the type is \"percentage\""
                      },
                      "icon_url": {
                        "type": "string"
                      },
                      "icon_color_from_evaluation": {
                        "type": "string"
                      },
                      "icon_size": {
                        "type": "string",
                        "description": "If set to \"small\", the icon should be displayed at a small size.\n"
                      }
                    }
                  },
                  "elements": {
                    "type": "array",
                    "description": "An ordered list of elements to display in the content of the panel.",
                    "items": {
                      "title": "element",
                      "x-stoplight": {
                        "id": "e2ybdrtmx0tme"
                      },
                      "type": "object",
                      "description": "Each element object contains one specific element object such as a text element or an image element.\n",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "text",
                            "image",
                            "action",
                            "panel",
                            "panel_group",
                            "table"
                          ],
                          "description": "The type of the included element object.\nThe type also indicates which field contains the included element object.\ne.g. if the type is \"text\", the included element object will be in the \"text_element\" field.\n\nNote that in the future, new type of element may be added,\nso your code should ignore unrecognized types, and unknown properties.\n\nTODO: add Map type\n"
                        },
                        "text_element": {
                          "title": "text_element",
                          "x-stoplight": {
                            "id": "vdwxlt73qnqfa"
                          },
                          "type": "object",
                          "description": "A text in simple HTML format to display.\n\nFor some specific texts that correspond to a product field (e.g. a product name, the ingredients list of a product),the edit_field_* fields are used to indicate how to edit the field value.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "the type of text, might influence the way you display it.\n",
                              "enum": [
                                "summary",
                                "warning",
                                "notes"
                              ]
                            },
                            "html": {
                              "type": "string",
                              "description": "Text to display in HTML format."
                            },
                            "language": {
                              "type": "string",
                              "description": "Language of the text. The name of the language is returned in the language requested when making the API call. e.g. if the text is in Polish, and the requested language is French, the language field will contain \"Polonais\" (French for \"Polish\"). Only set for specific fields such as the list of ingredients of a product."
                            },
                            "lc": {
                              "type": "string",
                              "description": "2 letter language code for the text. Only set for specific fields such as the list of ingredients of a product."
                            },
                            "edit_field_id": {
                              "type": "string",
                              "description": "id of the field used to edit this text in the product edit API."
                            },
                            "edit_field_type": {
                              "type": "string",
                              "description": "Type of the product field."
                            },
                            "edit_field_value": {
                              "type": "string",
                              "description": "Current value of the product field. This may differ from the html field which can contain extra formating."
                            },
                            "source_url": {
                              "type": "string",
                              "description": "Link to the source",
                              "example": "https://en.wikipedia.org/wiki/Sodium acetate"
                            },
                            "source_text": {
                              "type": "string",
                              "description": "name of the source",
                              "example": "Wikipedia"
                            },
                            "source_lc": {
                              "type": "string",
                              "description": "Source locale name",
                              "example": "en"
                            },
                            "source_language": {
                              "type": "string",
                              "description": "Human readable source locale name",
                              "example": "English"
                            }
                          }
                        },
                        "image_element": {
                          "title": "image_element",
                          "x-stoplight": {
                            "id": "k4v4kwt489q3j"
                          },
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "full URL of the image"
                            },
                            "width": {
                              "type": "integer",
                              "description": "Width of the image.\n\nThis is just a suggestion coming from the server, \nthe client may choose to use its own dimensions for the image.\n"
                            },
                            "height": {
                              "type": "integer",
                              "description": "Height of the image.\n\nThis is just a suggestion coming from the server,\nthe client may choose to use its own dimensions for the image.\n"
                            },
                            "alt_text": {
                              "type": "string",
                              "description": "Alt Text of the image."
                            }
                          }
                        },
                        "action_element": {
                          "type": "string"
                        },
                        "panel_element": {
                          "title": "panel_element",
                          "x-stoplight": {
                            "id": "ymx41elz4yrnj"
                          },
                          "type": "object",
                          "description": "Panels can include other panels as sub-panels using the panel_element.",
                          "properties": {
                            "panel_id": {
                              "type": "string",
                              "description": "The id of the panel to include. The id is the key of the panel in the panels object returned in the knowledge_panels field."
                            }
                          }
                        },
                        "panel_group_element": {
                          "title": "panel_group_element",
                          "x-stoplight": {
                            "id": "b7emlfrgiuue2"
                          },
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "panel_ids": {
                              "type": "array",
                              "description": "The ids of the panels to include. The ids are the keys of the panels in the panels object returned in the knowledge_panels field.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "image": {
                              "type": "object",
                              "description": "An image related to the panel group (e.g. the ingredients or nutrition facts image for the ingredients and nutrition panel groups)."
                            }
                          },
                          "description": "The panel group element is used to display an optional title followed by a number of sub-panels."
                        },
                        "table_element": {
                          "title": "table_element",
                          "type": "object",
                          "description": "Element to display a table.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "An id for the table."
                            },
                            "title": {
                              "type": "string",
                              "description": "Title of the column.\n"
                            },
                            "rows": {
                              "type": "string"
                            },
                            "columns": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "table_column",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "text": {
                                    "type": "string"
                                  },
                                  "text_for_small_screens": {
                                    "type": "string"
                                  },
                                  "style": {
                                    "type": "string"
                                  },
                                  "column_group_id": {
                                    "type": "string"
                                  },
                                  "shown_by_default": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "level": {
                    "type": "string",
                    "description": "a message level, as levels we use in log.\nIt might help theming the panel visually. Some possible values: info, recommendation\n",
                    "example": "info"
                  },
                  "size": {
                    "type": "string",
                    "enum": [
                      "small"
                    ],
                    "description": "size is either empty (normal display) \nor small to indicate a panel that should have a smaller font size\n",
                    "example": "small"
                  },
                  "topics": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "health"
                    },
                    "description": "topics currently include health, environment, problem"
                  }
                }
              }
            },
            "readOnly": true
          }
        }
      },
      "Product-Attribute-Groups": {
        "type": "object",
        "description": "Specific data about a product to enable personal ranking\n",
        "properties": {
          "attribute_groups": {
            "type": "array",
            "description": "Each element is an attribute that can help compute a personal ranking for the product",
            "items": {
              "title": "product_attribute_group",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id of the attribute.\n\nIt will be use to match against preferences parameters.\n"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "known",
                    "unknown"
                  ],
                  "description": "wether we have the information to really compute this criteria or not."
                },
                "title": {
                  "type": "string",
                  "description": "A descriptive sentence about the situation of the product concerning attribute\n",
                  "example": "Does not contain: Molluscs"
                },
                "match": {
                  "type": "number",
                  "format": "float",
                  "minimum": 0,
                  "maximum": 100,
                  "description": "a numeric value for the match,\ntelling how much the products ranks well for this particular attribute.\nThe higher the value, the better the match.\n"
                },
                "grade": {
                  "description": "every attribute as a grade for a to e",
                  "type": "string",
                  "enum": [
                    "unknown",
                    "a",
                    "b",
                    "c",
                    "d",
                    "e"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "The name of attribute, for eventual display"
                },
                "icon_url": {
                  "type": "string",
                  "description": "an icon representing the attribute match (often using a color)"
                },
                "description": {
                  "type": "string",
                  "description": "An eventual description of the value of the property upon which this attribute is based"
                },
                "description_short": {
                  "type": "string",
                  "description": "An eventual short description of the value of the property upon which this attribute is based"
                }
              }
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "title": "product",
        "description": "This is all the fields describing a product and how to display it on a page.\n\nRefer to the different sub schema for more readable entries:\n\n* [Product Base](#cmp--schemas-product-base): Base fields of a product\n* [Product Misc](#cmp--schemas-product-misc): Miscellaneous but important fields of a product\n* [Product Tags](#cmp--schemas-product-tags): Tags fields on a product\n* [Product Images](#cmp--schemas-product-images): Information about Images of a product\n* [Product Eco-Score](#cmp--schemas-product-ecoscore): Fields related to Eco-Score for a product\n* [Product Ingredients](#cmp--schemas-product-ingredients): Fields about ingredients of a product\n* [Product Nutrition](#cmp--schemas-product-nutrition): Nutrition fields of a product\n* [Product Data Quality](#cmp--schemas-product-quality): fields related to data quality for a product\n* [Product Extended](#cmp--schemas-product-extended): TODO\n* [Product Metadata](#cmp--schemas-product-meta): Metadata of a product (author, editors, etc.)\n* [Product Knowledge Panels](#cmp--schemas-product-knowledge-panels): Knowledge panels for a product\n* [Product Attribute Groups](#cmp--schemas-product-attribute-groups): Attribute groups for personal product matching\n",
        "allOf": [
          {
            "type": "object",
            "description": "Base product data\n",
            "properties": {
              "abbreviated_product_name": {
                "type": "string",
                "description": "Abbreviated name in requested language"
              },
              "product_type": {
                "type": "string",
                "description": "The product type is a fundamental separation that tells on which platform the product is made available:\nOpen Food Facts, Open Beauty Facts, Open Pet Food Facts or Open Products Facts.\n\nEach platform has variations on the way it analyses the product.\n\nChanging the product type moves the product to the new platform.\nIt must be done thoughtfully.\n",
                "enum": [
                  "beauty",
                  "food",
                  "petfood",
                  "product"
                ]
              },
              "code": {
                "type": "string",
                "description": "barcode of the product (can be EAN-13 or internal codes for some food stores),\nfor products without a barcode,\nOpen Food Facts assigns a number starting with the 200 reserved prefix\n"
              },
              "codes_tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "A value which is the type of barcode \"code-13\" or \"code-8\"\nand\nA series of mask for the barcode\nIt helps retrieve barcodes starting by\n",
                  "examples": [
                    "code-13",
                    "3017620422xxx",
                    "301762042xxxx",
                    "30176204xxxxx",
                    "3017620xxxxxx",
                    "301762xxxxxxx",
                    "30176xxxxxxxx",
                    "3017xxxxxxxxx",
                    "301xxxxxxxxxx",
                    "30xxxxxxxxxxx",
                    "3xxxxxxxxxxxx"
                  ]
                }
              },
              "generic_name": {
                "type": "string",
                "description": "Legal name of the product as regulated\nby the European authorities.\n"
              },
              "id": {
                "description": "internal identifier for the product, usually set to the value of `code`,\nexcept on the producers platform where it is prefixed by the owner\n",
                "type": "string"
              },
              "lc": {
                "type": "string",
                "description": "Main language of the product.\nThis is a duplicate of `lang` property (for historical reasons).\n"
              },
              "lang": {
                "type": "string",
                "description": "Main language of the product.\n\nThis should be the main language of product packaging (if one is predominant).\n\nMain language is also used to decide which ingredients list to parse.\n"
              },
              "nova_group": {
                "type": "integer",
                "description": "Nova group as an integer from 1 to 4. See https://world.openfoodfacts.org/nova\n"
              },
              "nova_groups": {
                "type": "string"
              },
              "obsolete": {
                "type": "string"
              },
              "obsolete_since_date": {
                "description": "A date at which the product was declared obsolete.\nThis means it's not produced any more.\n",
                "type": "string"
              },
              "product_name": {
                "type": "string",
                "description": "The name of the product\n"
              },
              "product_name_en": {
                "type": "string",
                "description": "The name of the product can also\nbe in many other languages like\nproduct_name_fr (for French).\n"
              },
              "product_quantity": {
                "type": "string",
                "description": "The size in g or ml for the whole product. \nIt is a normalized version of the `quantity` field.\nA `quantity` of \"2 x 60 g\" leads to `product_quantity`: \"120\".\n",
                "example": "500"
              },
              "product_quantity_unit": {
                "type": "string",
                "description": "The unit (either g or ml) for the corresponding `product_quantity`.\nIt is computed from the `quantity` field.\nA `quantity` of \"6 x 250 ml\" leads to `product_quantity_unit`: \"ml\".\n",
                "example": "g"
              },
              "quantity": {
                "type": "string",
                "description": "The quantity of the product, with the corresponding number of portions or unit (g, ml, kg, l, cl, oz, lbs...). \nIt should be the value as displayed on the product. The ℮ sign is allowed.\nWhen it refers to the number of portions, it can be filled without any units (e.g. \"6 eggs\").\n",
                "example": "3 x 150 g"
              },
              "schema_version": {
                "type": "integer",
                "description": "Version of the product object schema used in the response.\nThis indicates the structure of the 'product' field itself.\nFor more details, please read: https://openfoodfacts.github.io/openfoodfacts-server/api/ref-api-and-product-schema-change-log\n",
                "example": 999
              }
            },
            "patternProperties": {
              "abbreviated_product_name_(?<language_code>\\w\\w)": {
                "type": "string",
                "description": "Abbreviated name in language `language_code`."
              },
              "generic_name_(?<language_code>\\w\\w)": {
                "type": "string",
                "description": "This can be returned in many other languages\nlike generic_name_fr (for French).\n"
              }
            }
          },
          {
            "type": "object",
            "title": "product_misc",
            "description": "Miscellaneous but important fields of a product\n",
            "properties": {
              "additives_n": {
                "type": "integer",
                "description": "Number of food additives.\n"
              },
              "checked": {
                "type": "string"
              },
              "complete": {
                "type": "integer"
              },
              "completeness": {
                "type": "number"
              },
              "ecoscore_grade": {
                "type": "string",
                "description": "See also: `ecoscore_tags`\n"
              },
              "ecoscore_score": {
                "type": "integer",
                "description": "See also: `ecoscore_tags`\n"
              },
              "food_groups": {
                "type": "string"
              },
              "food_groups_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "nutrient_levels": {
                "description": "Traffic light indicators on main nutrients levels\n",
                "type": "object",
                "properties": {
                  "fat": {
                    "type": "string",
                    "enum": [
                      "low",
                      "moderate",
                      "high"
                    ]
                  },
                  "salt": {
                    "type": "string",
                    "enum": [
                      "low",
                      "moderate",
                      "high"
                    ]
                  },
                  "saturated-fat": {
                    "type": "string",
                    "enum": [
                      "low",
                      "moderate",
                      "high"
                    ]
                  },
                  "sugars": {
                    "type": "string",
                    "enum": [
                      "low",
                      "moderate",
                      "high"
                    ]
                  }
                }
              },
              "packaging_text": {
                "type": "string",
                "description": "Recycling instructions as raw text, e.g. Plastic\nbottle to recycle, Plastic cap to recycle.\nThis will get automatically parsed and\nwill be used to compute the Eco-Score.\nYou can either request it (if it exists) or\nsend it in a specific language.\n",
                "example": "packaging_text_en"
              },
              "packagings": {
                "type": "array",
                "title": "Packagings (READ)",
                "description": "The packagings object is an array of individual packaging component objects.\n\nThe Packaging data document explains how packaging data is structured in Open Food Facts: https://openfoodfacts.github.io/openfoodfacts-server/dev/explain-packaging-data/\n\nThe shape, material and recycling properties of each packaging component are linked to entries in the packaging_shapes, packaging_materials and packaging_recycling taxonomies:\n\nhttps://world.openfoodfacts.org/data/taxonomies/packaging_shapes.json\nhttps://world.openfoodfacts.org/data/taxonomies/packaging_materials.json\nhttps://world.openfoodfacts.org/data/taxonomies/packaging_recycling.json\n\nIf the tags_lc field is set, the properties will include a lc_name field with the translation in the requested language.",
                "examples": [
                  [
                    {
                      "number_of_units": 6,
                      "shape": {
                        "id": "en:bottle",
                        "lc_name": "bouteille"
                      },
                      "material": {
                        "id": "en:bottle",
                        "lc_name": "bouteille"
                      },
                      "recycling": {
                        "id": "en:bottle",
                        "lc_name": "bouteille"
                      },
                      "quantity_per_unit": "25 cl",
                      "quantity_per_unit_value": 25,
                      "quantity_per_unit_unit": "cl",
                      "weight_specified": 30,
                      "weight_measured": 32,
                      "weight_estimated": 26,
                      "weight": 30,
                      "weight_source_id": "specified"
                    }
                  ]
                ],
                "items": {
                  "description": "Each packaging component has different properties to specify how many there are, its shape, material etc.\n\nThe shape, material and recycling properties are mapped to one entry in the packaging_shapes, packaging_materials and packaging_recycling taxonomies, and the value of the property is the canonical name of the taxonomy entry (e.g. en:bottle).\n\nThey may contain values that could not yet get matched to their respective taxonomy, in which case they will contain a free text value prefixed with the language code of this text value (e.g. \"fr:Bouteille sphérique\" might have been entered by a French user to indicate it is a spherical bottle).",
                  "title": "Packaging component (READ)",
                  "type": "object",
                  "examples": [
                    {
                      "number_of_units": 6,
                      "shape": {
                        "id": "en:bottle",
                        "lc_name": "bouteille"
                      },
                      "material": {
                        "id": "en:bottle",
                        "lc_name": "bouteille"
                      },
                      "recycling": {
                        "id": "en:bottle",
                        "lc_name": "bouteille"
                      },
                      "quantity_per_unit": "25 cl",
                      "quantity_per_unit_value": 25,
                      "quantity_per_unit_unit": "cl",
                      "weight_specified": 30,
                      "weight_measured": 32,
                      "weight_estimated": 26,
                      "weight": 30,
                      "weight_source_id": "specified"
                    }
                  ],
                  "properties": {
                    "number_of_units": {
                      "type": "integer",
                      "description": "umber of units of this packaging component contained in the product (e.g. 6 for a pack of 6 bottles)"
                    },
                    "shape": {
                      "title": "Packaging component shape",
                      "x-stoplight": {
                        "id": "xrj8agza3dwgf"
                      },
                      "type": "object",
                      "description": "The shape property is canonicalized using the packaging_shapes taxonomy. Taxonomized values are available using the partial taxonomy API, the autosuggest API or the full packaging_shapes taxonomy JSON export.",
                      "examples": [
                        {
                          "id": "en:bottle",
                          "lc_name": "bouteille"
                        }
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                        },
                        "lc_name": {
                          "type": "string",
                          "description": "Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                        }
                      }
                    },
                    "material": {
                      "title": "Packaging component material",
                      "type": "object",
                      "description": "The material property is canonicalized using the packaging_materials taxonomy. Taxonomized values are available using the partial taxonomy API, the autosuggest API or the full packaging_material taxonomy JSON export.",
                      "examples": [
                        {
                          "id": "en:bottle",
                          "lc_name": "bouteille"
                        }
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                        },
                        "lc_name": {
                          "type": "string",
                          "description": "Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                        }
                      }
                    },
                    "recycling": {
                      "title": "Packaging component recycling instruction",
                      "x-stoplight": {
                        "id": "376tk8e2cmyh2"
                      },
                      "type": "object",
                      "description": "The recycling property is canonicalized using the packaging_recycling taxonomy. Taxonomized values are available using the partial taxonomy API, the autosuggest API or the full packaging_recycling taxonomy JSON export.",
                      "examples": [
                        {
                          "id": "en:bottle",
                          "lc_name": "bouteille"
                        }
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                        },
                        "lc_name": {
                          "type": "string",
                          "description": "Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                        }
                      }
                    },
                    "quantity_per_unit": {
                      "type": "string",
                      "description": "Quantity (weight or volume) of food product contained in the packaging component. (e.g. 75cl for a wine bottle)"
                    },
                    "quantity_per_unit_value": {
                      "type": "number",
                      "description": "Value parsed from the quantity field."
                    },
                    "quantity_per_unit_unit": {
                      "type": "string",
                      "description": "Unit parsed and normalized from the quantity field."
                    },
                    "weight_specified": {
                      "type": "number",
                      "description": "Weight (as specified by the manufacturer) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component)."
                    },
                    "weight_measured": {
                      "type": "number",
                      "description": "Weight (as measured by one or more users) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component)."
                    },
                    "weight_estimated": {
                      "type": "number",
                      "description": "Weight (as estimated from similar products) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component)."
                    },
                    "weight": {
                      "type": "number",
                      "description": "Weight of one unit of the empty packaging component."
                    },
                    "weight_source_id": {
                      "type": "string",
                      "description": "Indicates which field was used to populate the \"weight\" field. Either \"specified\", \"measured\", or \"estimated\""
                    }
                  }
                },
                "readOnly": true
              },
              "packagings_complete": {
                "title": "packagings_complete",
                "type": "integer",
                "minimum": 0,
                "maximum": 1,
                "description": "Indicate if the packagings array contains all the packaging parts of the product. This field can be set by users when they enter or verify packaging data. Possible values are 0 or 1."
              },
              "pnns_groups_1": {
                "description": "Category of food according to [French Nutrition and Health Program](https://fr.wikipedia.org/wiki/Programme_national_nutrition_sant%C3%A9)\n",
                "type": "string"
              },
              "pnns_groups_1_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "pnns_groups_2": {
                "description": "Sub Category of food according to [French Nutrition and Health Program](https://fr.wikipedia.org/wiki/Programme_national_nutrition_sant%C3%A9)\n",
                "type": "string"
              },
              "pnns_groups_2_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "popularity_key": {
                "description": "An imprecise measurement of popularity based on Scan statistics. A higher value means higher popularity.\n",
                "type": "integer"
              },
              "popularity_tags": {
                "description": "Indicators for the popularity of a product, like the amount of scans in a specific year.\n`popularity_tags` values from previous years are kept, if there is no popularity_tags at all, then it was never popular.\nThis field must be used with care. In countries where Open Food Facts is not widely used, \na product may obtain the value \"top-90-percent-scans-2021\" with a single scan.\n",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "bottom-25-percent-scans-2020",
                  "top-85-percent-scans-2021",
                  "top-90-percent-scans-2022",
                  "top-country-it-scans-2019",
                  "top-100000-mg-scans-2024"
                ]
              },
              "scans_n": {
                "type": "integer",
                "description": "Number of scans performed with the official Open Food Facts mobile application, the last year \nfor which the product was scanned (current year excluded). This value is computed once a year by scanbot.pl.\nIt is possible that a product has never been scanned at all: `scans_n` is not given in this case.\nSee also `unique_scans_n` field.\n"
              },
              "unique_scans_n": {
                "type": "integer",
                "description": "Number of unique scans performed with the official Open Food Facts mobile application, the last year \nfor which the product was scanned (current year excluded).\nUnique scans means it is based on different IPs.\nThis value is computed once a year by scanbot.pl.\nSee also `scans_n` field.\n"
              },
              "serving_quantity": {
                "type": "string",
                "description": "Normalized version of serving_size.\nNote that this is NOT the number of servings by product.\n<small>(in perl, see `normalize_serving_size`)</small>\n"
              },
              "serving_quantity_unit": {
                "type": "string",
                "description": "The unit (either g or ml) for the correponding serving_quantity.\n",
                "example": "g"
              },
              "serving_size": {
                "type": "string",
                "description": "Serving size text (generally in g or ml).\nWe expect a quantity + unit but the user is free to input any string.\n"
              }
            },
            "patternProperties": {
              "food_groups_(?<language_code>\\w\\w)": {
                "type": "string",
                "description": "see `food_groups`"
              },
              "packaging_text_(?<language_code>\\w\\w)": {
                "type": "string",
                "description": "Packaging text in language designated by `language_code`\n"
              }
            }
          },
          {
            "type": "object",
            "description": "Data about a product which is represented as tags\n",
            "properties": {
              "brands": {
                "type": "string",
                "description": "Comma separated list of brands (not taxonomized), in the last language used to edit it (recorded in brands_lc)\nThis field is mostly used for debugging and testing purposes. Do not use it for display purposes.\n"
              },
              "brands_hierarchy": {
                "type": "array",
                "description": "An array of brands tag entries (for display and editing).\n\nThat is the id of brands found in taxonomy + \nbrands not found in taxonomy (as-is, with no normalization).\n\nThis is the field that should be used for display purposes, as it is not lossy.\n",
                "items": {
                  "title": "Canonicalized taxonomy tag entry",
                  "type": "string",
                  "description": "A tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\") -> for entries that could not be matched to a taxonomy entry"
                }
              },
              "brands_lc": {
                "type": "string",
                "description": "Language code of the last edit for brands"
              },
              "brands_tags": {
                "type": "array",
                "description": "An array of indexed brands tag entries (for search).\n\nThat is the id of brands found in taxonomy + \nbrands not found in taxonomy (with case / accents / spaces normalized).\n\nThis is mostly used for search as the normalization of entries not in the taxonomy is lossy.\n",
                "items": {
                  "title": "Indexed taxonomy tag entry (lossy, for search only)",
                  "type": "string",
                  "description": "This field is used for search only. It is a lossy representation of the taxonomy tag entry, that can be used to index the entry in a search engine.\nA tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code, and normalized (deaccented and lowercased, depending on language)\n(e.g. \"fr:thes-verts\") -> for entries that could not be matched to a taxonomy entry"
                }
              },
              "categories": {
                "type": "string",
                "description": "Comma separated list of categories (not taxonomized), in the last language used to edit it (recorded in categories_lc)\nThis field is mostly used for debugging and testing purposes. Do not use it for display purposes.\n"
              },
              "categories_hierarchy": {
                "type": "array",
                "description": "An array of categories tag entries (for display and editing).\n\nThat is the id of categories found in taxonomy + \ncategories not found in taxonomy (as-is, with no normalization).\n\nThis is the field that should be used for display purposes, as it is not lossy.\n",
                "items": {
                  "title": "Canonicalized taxonomy tag entry",
                  "type": "string",
                  "description": "A tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\") -> for entries that could not be matched to a taxonomy entry"
                }
              },
              "categories_lc": {
                "type": "string",
                "description": "Language code of the last edit for categories"
              },
              "categories_tags": {
                "type": "array",
                "description": "An array of indexed categories tag entries (for search).\n\nThat is the id of categories found in taxonomy + \ncategories not found in taxonomy (with case / accents / spaces normalized).\n\nThis is mostly used for search as the normalization of entries not in the taxonomy is lossy.\n",
                "items": {
                  "title": "Indexed taxonomy tag entry (lossy, for search only)",
                  "type": "string",
                  "description": "This field is used for search only. It is a lossy representation of the taxonomy tag entry, that can be used to index the entry in a search engine.\nA tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code, and normalized (deaccented and lowercased, depending on language)\n(e.g. \"fr:thes-verts\") -> for entries that could not be matched to a taxonomy entry"
                }
              },
              "checkers_tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "List of checkers (users who checked the product) tags"
                }
              },
              "cities": {
                "type": "string"
              },
              "cities_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "correctors_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "countries": {
                "type": "string",
                "description": "List of countries where the product is sold.\n"
              },
              "countries_hierarchy": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "countries_lc": {
                "type": "string",
                "description": "Countries language code"
              },
              "countries_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ecoscore_tags": {
                "description": "All ecoscore of a product.\nMost of the time it's only one value,\nbut it might eventually be more for products composed of sub-products.\nSee also: `ecoscore_score`, `ecoscore_grade`.\n",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "emb_codes": {
                "type": "string",
                "description": "Packager code. EMB is the French system of traceability codes for packager.\n",
                "example": "EMB 2013330"
              },
              "emb_codes_orig": {
                "type": "string"
              },
              "emb_codes_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "labels": {
                "type": "string"
              },
              "labels_hierarchy": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "labels_lc": {
                "type": "string"
              },
              "labels_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "entry_dates_tags": {
                "description": "The data as a series of tag: `yyyy-mm-dd`, `yyyy-mm`, `yyyy`\n",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "examples": [
                  [
                    "2016-03-11",
                    "2016-03",
                    "2016"
                  ]
                ]
              },
              "manufacturing_places": {
                "type": "string",
                "description": "Places where the product was manufactured or transformed.\n"
              },
              "manufacturing_places_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "nova_groups_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "nutrient_levels_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "type": "object",
            "title": "Product-Images",
            "description": "Information about Images of a product.\n\nImages ensure the reliability of Open Food Facts data.\nIt provides a primary source and proof of all the structured data.\nYou may therefore want to display it along the structured information.\n\nSee also tutorials about images:\n* [Getting images](https://openfoodfacts.github.io/openfoodfacts-server/api/how-to-download-images/)\n* [Uploading images](https://openfoodfacts.github.io/openfoodfacts-server/api/tutorial-uploading-photo-to-a-product/)\n",
            "properties": {
              "images": {
                "description": "This contains properties for all images contained on the product.\n",
                "type": "object",
                "title": "product_images_properties",
                "properties": {
                  "front": {
                    "title": "image_role",
                    "type": "object",
                    "description": "property of an image (or part thereof) selected for a particular role and a particular language.\n",
                    "properties": {
                      "angle": {
                        "type": "integer",
                        "example": 0,
                        "description": "The angle of the image rotation (if it was rotated)."
                      },
                      "coordinates_image_size": {
                        "type": "string",
                        "example": "full"
                      },
                      "geometry": {
                        "type": "string",
                        "example": "0x0--1--1"
                      },
                      "imgid": {
                        "type": "string",
                        "example": "121",
                        "description": "The id of the original/source image that was selected to edit(rotate, normalize etc) to produce this new image."
                      },
                      "normalize": {
                        "type": [
                          "string",
                          "boolean",
                          "null"
                        ],
                        "examples": [
                          null,
                          "false",
                          "true"
                        ],
                        "description": "Normalize colors."
                      },
                      "rev": {
                        "type": "string",
                        "example": "420"
                      },
                      "sizes": {
                        "type": "object",
                        "description": "The available image sizes for the product (both reduced and full). \nThe reduced images are the ones with numbers as the key( 100, 200 etc)\nwhile the full images have `full` as the key.\n",
                        "properties": {
                          "100": {
                            "type": "object",
                            "title": "image_size",
                            "description": "Width and height of an image\n",
                            "properties": {
                              "h": {
                                "type": "integer",
                                "example": 400,
                                "description": "The height of the reduced/full image in pixels.\n"
                              },
                              "w": {
                                "type": "integer",
                                "example": 255,
                                "description": "The width of the reduced/full image in pixels.\n"
                              }
                            }
                          },
                          "200": {
                            "type": "object",
                            "title": "image_size",
                            "description": "Width and height of an image\n",
                            "properties": {
                              "h": {
                                "type": "integer",
                                "example": 400,
                                "description": "The height of the reduced/full image in pixels.\n"
                              },
                              "w": {
                                "type": "integer",
                                "example": 255,
                                "description": "The width of the reduced/full image in pixels.\n"
                              }
                            }
                          },
                          "400": {
                            "type": "object",
                            "title": "image_size",
                            "description": "Width and height of an image\n",
                            "properties": {
                              "h": {
                                "type": "integer",
                                "example": 400,
                                "description": "The height of the reduced/full image in pixels.\n"
                              },
                              "w": {
                                "type": "integer",
                                "example": 255,
                                "description": "The width of the reduced/full image in pixels.\n"
                              }
                            }
                          },
                          "full": {
                            "type": "object",
                            "title": "image_size",
                            "description": "Width and height of an image\n",
                            "properties": {
                              "h": {
                                "type": "integer",
                                "example": 400,
                                "description": "The height of the reduced/full image in pixels.\n"
                              },
                              "w": {
                                "type": "integer",
                                "example": 255,
                                "description": "The width of the reduced/full image in pixels.\n"
                              }
                            }
                          }
                        }
                      },
                      "white_magic": {
                        "type": [
                          "string",
                          "boolean",
                          "null"
                        ],
                        "examples": [
                          null,
                          "false",
                          "true"
                        ],
                        "description": "Photo on white background : Try to remove the background.\n"
                      },
                      "x1": {
                        "type": "string",
                        "example": "-1"
                      },
                      "x2": {
                        "type": "string",
                        "example": "-1"
                      },
                      "y1": {
                        "type": "string",
                        "example": "-1"
                      },
                      "y2": {
                        "type": "string",
                        "example": "-1"
                      }
                    }
                  }
                },
                "additionalProperties": {
                  "type": "object",
                  "title": "image",
                  "description": "This object represent an image that was uploaded to a product.\n\"imgid\" is an integer which is a sequential number unique to each picture.\n",
                  "properties": {
                    "sizes": {
                      "type": "object",
                      "description": "The available image sizes for the product (both reduced and full). \nThe reduced images are the ones with numbers as the key( 100, 200 etc) \nwhile the full images have `full` as the key.\n",
                      "properties": {
                        "full": {
                          "type": "object",
                          "title": "image_size",
                          "description": "Width and height of an image\n",
                          "properties": {
                            "h": {
                              "type": "integer",
                              "example": 400,
                              "description": "The height of the reduced/full image in pixels.\n"
                            },
                            "w": {
                              "type": "integer",
                              "example": 255,
                              "description": "The width of the reduced/full image in pixels.\n"
                            }
                          }
                        }
                      },
                      "patternProperties": {
                        "(?<image_size>100|400)": {
                          "description": "properties of thumbnail of size `image_size`.\n**TODO** explain how to compute name\n\nFor real type: see description of property `full`.\n(Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))\n",
                          "type": "string"
                        }
                      }
                    },
                    "uploaded_t": {
                      "type": "string",
                      "example": "1457680652",
                      "description": "The time the image was uploaded (as unix timestamp).\n"
                    },
                    "uploader": {
                      "type": "string",
                      "example": "openfoodfacts-contributors",
                      "description": "The contributor that uploaded the image.\n"
                    }
                  }
                },
                "propertyNames": {
                  "type": "integer"
                },
                "patternProperties": {
                  "(?<imgid>\\d+)": {
                    "description": "See property `1` to get the real type of those objects\n(Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))\n",
                    "type": "string"
                  },
                  "(?<image_type>front|nutrition|ingredients|packaging|other)_(?<language_code>\\w\\w)": {
                    "description": "See property `front` to get the real type of those objects\n(Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))\n",
                    "type": "string"
                  }
                }
              },
              "last_image_dates_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "last_image_t": {
                "description": "timestamp of last image upload (or update?)",
                "type": "integer"
              },
              "selected_images": {
                "type": "object",
                "title": "product_selected_images",
                "description": "URL for selected (important) images of the product.\n\nThis is very handy if you display the product to users.\n",
                "properties": {
                  "front": {
                    "type": "object",
                    "description": "URLs of thumbnails image of image of type `image_type`",
                    "properties": {
                      "display": {
                        "description": "Thumbnail urls of product image (front) adapted to display on product page\n",
                        "type": "object",
                        "patternProperties": {
                          "(?<language_code>\\w\\w)": {
                            "type": "string",
                            "description": "url of the image for language `language_code`"
                          }
                        }
                      },
                      "small": {
                        "description": "Thumbnail urls of product image (front) adapted to display on product list page\n",
                        "type": "object",
                        "patternProperties": {
                          "(?<language_code>\\w\\w)": {
                            "type": "string",
                            "description": "url of the image for language `language_code`"
                          }
                        }
                      },
                      "thumb": {
                        "description": "Thumbnail urls of product image (front) in smallest format\n",
                        "type": "object",
                        "patternProperties": {
                          "(?<language_code>\\w\\w)": {
                            "type": "string",
                            "description": "url of the image for language `language_code`"
                          }
                        }
                      }
                    }
                  }
                },
                "patternProperties": {
                  "(?<image_type>front|packaging|ingredients|nutrition|other)": {
                    "description": "See property `front` to get the real type of those objects\n(Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))\n",
                    "type": "string"
                  }
                }
              },
              "image_small_url": {
                "type": "string"
              },
              "image_thumb_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              }
            },
            "patternProperties": {
              "image(_(?<image_type>front|packaging|ingredients|nutrition|other))?(_(?<image_size>small|thumb))?_url": {
                "description": "the URL of image of type `image_type` in size `image_size` (or full size if not given).\n\nThe `image_type` tells which image the url correspond to. `image_type` is `front` if not provided.\n\nThe image is the one for current language (affected by `lc` parameter) if an image exists for this language, the image in main product language otherwise.\n\n**IMPORTANT:** you should use `selected_images` field instead of this one.\n",
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "description": "Fields related to Eco-Score for a product.\n\nSee also: `ecoscore_score`, `ecoscore_grade` and `ecoscore_tags`.\n",
            "properties": {
              "ecoscore_data": {
                "type": "object",
                "title": "product_ecoscore_data",
                "description": "An object about a lot of details about data needed for Eco-Score computation\nand complementary data of interest.\n",
                "properties": {
                  "adjustments": {
                    "title": "product_ecoscore_adjustments",
                    "type": "object",
                    "properties": {
                      "origins_of_ingredients": {
                        "type": "object",
                        "properties": {
                          "aggregated_origins": {
                            "type": "array",
                            "description": "List of aggregated origins of ingredients and their impact.",
                            "items": {
                              "title": "adjustments_origin_of_ingredient_aggregated",
                              "type": "object",
                              "properties": {
                                "epi_score": {
                                  "type": "string"
                                },
                                "origin": {
                                  "type": "string",
                                  "description": "Country or region of origin for the ingredient."
                                },
                                "percent": {
                                  "type": "integer",
                                  "description": "Percentage of this ingredient from the specified origin."
                                },
                                "transportation_score": {
                                  "type": [
                                    "null",
                                    "integer"
                                  ],
                                  "description": "Transportation score associated with this ingredient's origin."
                                }
                              }
                            }
                          },
                          "epi_score": {
                            "type": "integer",
                            "description": "Environmental Performance Index (EPI) score for the ingredient's origin."
                          },
                          "epi_value": {
                            "type": "integer"
                          },
                          "origins_from_categories": {
                            "type": "array",
                            "description": "List of origins derived from product categories, eg for PDO.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "origins_from_origins_field": {
                            "type": "array",
                            "description": "List of origins explicitly stated in the product's origins field.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "transportation_score": {
                            "type": "integer"
                          },
                          "transportation_scores": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string",
                              "enum": [
                                "ad",
                                "al",
                                "at",
                                "ax",
                                "ba",
                                "be",
                                "bg",
                                "ch",
                                "cy",
                                "cz",
                                "de",
                                "dk",
                                "dz",
                                "ee",
                                "eg",
                                "es",
                                "fi",
                                "fo",
                                "fr",
                                "gg",
                                "gi",
                                "gr",
                                "hr",
                                "hu",
                                "ie",
                                "il",
                                "im",
                                "is",
                                "it",
                                "je",
                                "lb",
                                "li",
                                "lt",
                                "lu",
                                "lv",
                                "ly",
                                "ma",
                                "mc",
                                "md",
                                "me",
                                "mk",
                                "mt",
                                "nl",
                                "no",
                                "pl",
                                "ps",
                                "pt",
                                "ro",
                                "rs",
                                "se",
                                "si",
                                "sj",
                                "sk",
                                "sm",
                                "sy",
                                "tn",
                                "tr",
                                "ua",
                                "uk",
                                "us",
                                "va",
                                "world",
                                "xk"
                              ]
                            },
                            "additionalProperties": {
                              "type": "number",
                              "default": 0
                            }
                          },
                          "transportation_value": {
                            "type": "integer"
                          },
                          "transportation_values": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string",
                              "enum": [
                                "ad",
                                "al",
                                "at",
                                "ax",
                                "ba",
                                "be",
                                "bg",
                                "ch",
                                "cy",
                                "cz",
                                "de",
                                "dk",
                                "dz",
                                "ee",
                                "eg",
                                "es",
                                "fi",
                                "fo",
                                "fr",
                                "gg",
                                "gi",
                                "gr",
                                "hr",
                                "hu",
                                "ie",
                                "il",
                                "im",
                                "is",
                                "it",
                                "je",
                                "lb",
                                "li",
                                "lt",
                                "lu",
                                "lv",
                                "ly",
                                "ma",
                                "mc",
                                "md",
                                "me",
                                "mk",
                                "mt",
                                "nl",
                                "no",
                                "pl",
                                "ps",
                                "pt",
                                "ro",
                                "rs",
                                "se",
                                "si",
                                "sj",
                                "sk",
                                "sm",
                                "sy",
                                "tn",
                                "tr",
                                "ua",
                                "uk",
                                "us",
                                "va",
                                "world",
                                "xk"
                              ]
                            },
                            "additionalProperties": {
                              "type": "number",
                              "default": 0
                            }
                          },
                          "value": {
                            "type": "integer"
                          },
                          "values": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string",
                              "enum": [
                                "ad",
                                "al",
                                "at",
                                "ax",
                                "ba",
                                "be",
                                "bg",
                                "ch",
                                "cy",
                                "cz",
                                "de",
                                "dk",
                                "dz",
                                "ee",
                                "eg",
                                "es",
                                "fi",
                                "fo",
                                "fr",
                                "gg",
                                "gi",
                                "gr",
                                "hr",
                                "hu",
                                "ie",
                                "il",
                                "im",
                                "is",
                                "it",
                                "je",
                                "lb",
                                "li",
                                "lt",
                                "lu",
                                "lv",
                                "ly",
                                "ma",
                                "mc",
                                "md",
                                "me",
                                "mk",
                                "mt",
                                "nl",
                                "no",
                                "pl",
                                "ps",
                                "pt",
                                "ro",
                                "rs",
                                "se",
                                "si",
                                "sj",
                                "sk",
                                "sm",
                                "sy",
                                "tn",
                                "tr",
                                "ua",
                                "uk",
                                "us",
                                "va",
                                "world",
                                "xk"
                              ]
                            },
                            "additionalProperties": {
                              "type": "number",
                              "default": 0
                            }
                          },
                          "warning": {
                            "type": "string"
                          }
                        }
                      },
                      "packaging": {
                        "type": "object",
                        "properties": {
                          "non_recyclable_and_non_biodegradable_materials": {
                            "type": "integer"
                          },
                          "packagings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "adjustments_packaging_item",
                              "properties": {
                                "ecoscore_material_score": {
                                  "type": "integer"
                                },
                                "ecoscore_shape_ratio": {
                                  "type": "integer"
                                },
                                "material": {
                                  "type": "string"
                                },
                                "shape": {
                                  "type": "string"
                                },
                                "number_of_units": {
                                  "type": "integer",
                                  "examples": [
                                    1
                                  ]
                                },
                                "quantity_per_unit": {
                                  "type": "string",
                                  "description": "The quantity per packaging unit, as a string.",
                                  "examples": [
                                    "33 cL"
                                  ]
                                },
                                "quantity_per_unit_unit": {
                                  "type": "string",
                                  "examples": [
                                    "cl"
                                  ]
                                },
                                "quantity_per_unit_value": {
                                  "type": "number",
                                  "examples": [
                                    33
                                  ]
                                },
                                "recycling": {
                                  "type": "string",
                                  "examples": [
                                    "en:recycle-in-sorting-bin"
                                  ]
                                },
                                "weight_measured": {
                                  "type": "number",
                                  "examples": [
                                    12.08
                                  ]
                                }
                              }
                            }
                          },
                          "score": {
                            "type": "integer"
                          },
                          "value": {
                            "type": "integer"
                          },
                          "warning": {
                            "type": "string"
                          }
                        }
                      },
                      "production_system": {
                        "type": "object",
                        "properties": {
                          "labels": {
                            "type": "array",
                            "examples": [
                              "vegan",
                              "fat free",
                              "Kosher"
                            ],
                            "items": {
                              "type": "string"
                            }
                          },
                          "value": {
                            "type": "integer"
                          },
                          "warning": {
                            "type": "string"
                          }
                        }
                      },
                      "threatened_species": {
                        "type": "object",
                        "properties": {
                          "ingredient": {
                            "type": "string"
                          },
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "agribalyse": {
                    "type": "object",
                    "properties": {
                      "agribalyse_proxy_food_code": {
                        "type": "string"
                      },
                      "agribalyse_food_code": {
                        "type": "string"
                      },
                      "co2_agriculture": {
                        "type": "number"
                      },
                      "co2_consumption": {
                        "type": "integer"
                      },
                      "co2_distribution": {
                        "type": "number"
                      },
                      "co2_packaging": {
                        "type": "number"
                      },
                      "co2_processing": {
                        "type": "number"
                      },
                      "co2_total": {
                        "type": "number"
                      },
                      "co2_transportation": {
                        "type": "number"
                      },
                      "code": {
                        "type": "string"
                      },
                      "dqr": {
                        "type": "string"
                      },
                      "ef_agriculture": {
                        "type": "number"
                      },
                      "ef_consumption": {
                        "type": "integer"
                      },
                      "ef_distribution": {
                        "type": "number"
                      },
                      "ef_packaging": {
                        "type": "number"
                      },
                      "ef_processing": {
                        "type": "number"
                      },
                      "ef_total": {
                        "type": "number"
                      },
                      "ef_transportation": {
                        "type": "number"
                      },
                      "is_beverage": {
                        "type": "integer"
                      },
                      "name_en": {
                        "type": "string",
                        "description": "This can be returned in many other languages\nlike name_fr (for french).\n"
                      },
                      "score": {
                        "type": "integer"
                      },
                      "version": {
                        "type": "string"
                      }
                    }
                  },
                  "grade": {
                    "type": "string"
                  },
                  "grades": {
                    "type": "object",
                    "patternProperties": {
                      "(?<country_code>\\w\\w)": {
                        "type": "string"
                      }
                    }
                  },
                  "missing": {
                    "type": "object",
                    "properties": {
                      "labels": {
                        "type": "integer"
                      },
                      "origins": {
                        "type": "integer"
                      },
                      "packagings": {
                        "type": "integer"
                      }
                    }
                  },
                  "missing_data_warning": {
                    "type": "integer"
                  },
                  "previous_data": {
                    "type": "object",
                    "properties": {
                      "grade": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "score": {
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "agribalyse": {
                        "type": "object",
                        "properties": {
                          "agribalyse_proxy_food_code": {
                            "type": "string"
                          },
                          "agribalyse_food_code": {
                            "type": "string"
                          },
                          "co2_agriculture": {
                            "type": "number"
                          },
                          "co2_consumption": {
                            "type": "integer"
                          },
                          "co2_distribution": {
                            "type": "number"
                          },
                          "co2_packaging": {
                            "type": "number"
                          },
                          "co2_processing": {
                            "type": "number"
                          },
                          "co2_total": {
                            "type": "number"
                          },
                          "co2_transportation": {
                            "type": "number"
                          },
                          "code": {
                            "type": "string"
                          },
                          "dqr": {
                            "type": "string"
                          },
                          "ef_agriculture": {
                            "type": "number"
                          },
                          "ef_consumption": {
                            "type": "integer"
                          },
                          "ef_distribution": {
                            "type": "number"
                          },
                          "ef_packaging": {
                            "type": "number"
                          },
                          "ef_processing": {
                            "type": "number"
                          },
                          "ef_total": {
                            "type": "number"
                          },
                          "ef_transportation": {
                            "type": "number"
                          },
                          "is_beverage": {
                            "type": "integer"
                          },
                          "name_en": {
                            "type": "string",
                            "description": "This can be returned in many other languages\nlike name_fr (for french).\n"
                          },
                          "score": {
                            "type": "integer"
                          },
                          "version": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "score": {
                    "type": "integer"
                  },
                  "scores": {
                    "type": "object",
                    "patternProperties": {
                      "(?<country_code>\\w\\w)": {
                        "type": "integer"
                      }
                    }
                  },
                  "status": {
                    "type": "string"
                  }
                }
              },
              "ecoscore_extended_data_version": {
                "type": "string"
              },
              "environment_impact_level": {
                "type": "string"
              },
              "environment_impact_level_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/Product-Ingredients"
          },
          {
            "type": "object",
            "title": "product_nutrition",
            "description": "Nutrition fields of a product\n\nMost of these properties are read-only.\n\nSee [how to add nutrition data](https://openfoodfacts.github.io/openfoodfacts-server/api/ref-cheatsheet/#add-nutrition-facts-values-units-and-base)\n",
            "properties": {
              "no_nutrition_data": {
                "type": "string",
                "description": "When a product does not have nutrition data displayed on the\npackaging, the user can check the field \"Nutrition facts are\nnot specified on the product\".\nBy doing so, the no_nutrition_data field takes the value \"on\".\nThis case is frequent (thousands of products).\n",
                "example": "on"
              },
              "nutrition_data_per": {
                "type": "string",
                "enum": [
                  "serving",
                  "100g"
                ],
                "description": "The nutrition data on the package can be per serving or per 100g.\n\nThis is essential to understand if `<nutrient>_value` and `<nutrient>`\nvalues in `nutriments` applies for a serving or for 100g.\n\n**IMPORTANT:**\nWhen writing products,\nthis setting applies to all existing nutrients values for the product,\nnot only the nutrient values sent in the write request.\nSo it should not be changed unless all nutrients values are provided\nwith values that match the nutrition_data_per field.\n"
              },
              "nutrition_data_prepared_per": {
                "type": "string",
                "enum": [
                  "serving",
                  "100g"
                ],
                "description": "The nutrition data for prepared product on the package (if any) can be per serving or per 100g.\n\nThis is essential to understand if `<nutrient>_prepared_value` and `<nutrient>_prepared`\nvalues in `nutriments` applies for a serving or for 100g.\n\nSee also important note on `nutrition_data_per`.\n"
              },
              "nutriments": {
                "type": "object",
                "description": "All known nutrients for the product.\n\nNote that each nutrients are declined with a variety of suffixes like `_100g`, `_serving`,\nsee patternProperties below.\n\nA specific `_unit` is the unit of the value that was entered by the contributor (a user or the manufacturer).\nIt is not necessarily the unit that is printed on the product, as some apps may force specific units when writing nutrient values.\n\nBeware that some properties are to be interpreted based upon `nutrition_data_per` value.\n\nFor most use cases, you should use the `<nutrient>_100g` or `<nutrient>_serving` fields, as they are always in the same standard unit, for a specific quantity (100g or 1 serving).\n\nFor products that have a nutrition table for prepared product\n(eg. the nutrition facts for a bowl of milk with cocoa powder),\na `_prepared` suffix is added (before other suffixes).\n\nYou can get all possible nutrients from the\n[nutrients taxonomy](https://static.openfoodfacts.org/data/taxonomies/nutrients.json)\n\n**FIXME** add more nutrients with description.\n",
                "properties": {
                  "alcohol": {
                    "description": "Quantity of alcohol\n\n(per 100g or per serving) in a standard unit (g or ml)\n",
                    "type": "number"
                  },
                  "carbohydrates": {
                    "description": "This is the available carbohydrates (excluding fiber), also known as net carbohydrates",
                    "type": "number"
                  },
                  "carbohydrates-total": {
                    "description": "This follows the US / Canada definition of carbohydrates which includes fiber, also known as gross carbohydrates",
                    "type": "number"
                  },
                  "energy": {
                    "type": "number",
                    "description": "It is the same as `energy-kj` if we have it, or computed from `energy-kcal` otherwise\n\n(per 100g or per serving) in kj\n"
                  },
                  "energy_value": {
                    "type": "number",
                    "description": "energy_value will be equal to energy-kj_value if we have it or to energy-kcal_value otherwise\n"
                  },
                  "energy_unit": {
                    "type": "string",
                    "enum": [
                      "kcal",
                      "kJ"
                    ],
                    "description": "Equal to energy-kj_unit if we have it or to energy-kcal_unit otherwise\n"
                  },
                  "energy-kcal": {
                    "type": "number",
                    "description": "energy in kcal, if it is specified\n\n(per 100g or per serving) in a standard unit (g or ml)\n"
                  },
                  "energy-kj": {
                    "type": "number",
                    "description": "energy in kj, if it is specified\n\n(per 100g or per serving) in a standard unit (g or ml)\n"
                  },
                  "fat": {
                    "type": "number"
                  },
                  "fruits-vegetables-legumes-estimate-from-ingredients": {
                    "type": "number",
                    "description": "An estimate, from the ingredients list of the percentage of fruits, vegetable and legumes.\nThis is an important information for Nutri-Score (2023 version) computation.\n"
                  },
                  "fruits-vegetables-nuts-estimate-from-ingredients": {
                    "type": "number",
                    "description": "An estimate, from the ingredients list of the percentage of fruits, vegetable and nuts.\nThis is an important information for Nutri-Score (2021 version) computation.\n"
                  },
                  "nova-group": {
                    "type": "integer"
                  },
                  "nutrition-score-fr": {
                    "description": "Experimental nutrition score derived from\nthe UK FSA score and adapted for the French market\n(formula defined by the team of Professor Hercberg).\n"
                  },
                  "proteins": {
                    "type": "number"
                  },
                  "salt": {
                    "type": "number"
                  },
                  "saturated-fat": {
                    "type": "number"
                  },
                  "sodium": {
                    "type": "number"
                  },
                  "sugars": {
                    "type": "number"
                  },
                  "carbon-footprint-from-known-ingredients_product": {
                    "type": "integer"
                  },
                  "carbon-footprint-from-known-ingredients_serving": {
                    "type": "number"
                  },
                  "erythritol": {
                    "type": "number",
                    "description": "erythritol is a polyol which is not providing any energy.\nAs such, it needs not be taken into account when computing\nthe energy of a product. Eryhtritol is now displayed on\nnutrition facts sheet of some products, mainly in the USA.\nThis value is entered either by contributors, either by\nimports.\n",
                    "example": 12.5
                  }
                },
                "patternProperties": {
                  "(?<nutrient>[\\w-]+)_unit": {
                    "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product as sold (not prepared).\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n\n**Note**: For most use cases, you should not use this unit, as it can change depending on how the value was entered.\nInstead use the `<nutrient>_100g` or `<nutrient>_serving` fields, and convert them to the unit you need.\n",
                    "type": "string",
                    "enum": [
                      "公斤",
                      "公升",
                      "kg",
                      "кг",
                      "l",
                      "л",
                      "毫克",
                      "mg",
                      "мг",
                      "mcg",
                      "µg",
                      "oz",
                      "fl oz",
                      "dl",
                      "дл",
                      "cl",
                      "кл",
                      "斤",
                      "g",
                      "",
                      " ",
                      "kJ",
                      "克",
                      "公克",
                      "г",
                      "мл",
                      "ml",
                      "mmol/l",
                      "毫升",
                      "% vol",
                      "ph",
                      "%",
                      "% dv",
                      "% vol (alcohol)",
                      "iu",
                      "mol/l",
                      "mval/l",
                      "ppm",
                      "�rh",
                      "�fh",
                      "�e",
                      "�dh",
                      "gpg"
                    ]
                  },
                  "(?<nutrient>[\\w-]+)_100g": {
                    "description": "The normalized value of the nutrient for 100g (or 100ml for liquids), in a standard unit, for the product as sold (not prepared):\n* g for all nutrients that are measured by weight (e.g. fat, proteins, carbohydrates, sodium, vitamins, minerals etc.)\n* % vol for nutrients that are percentages by volume (e.g. alcohol)\n* kJ for energy and energy-kj\n* kcal for energy-kcal\n* no unit for pH\n\nThis is computed from the `nutrient` property,\nthe serving size (if `nutrient` is per serving), and the `nutrient`_unit field.\n\n**Note**:\nFor most use cases, this is the only value you should use, as it is always in the same unit, and always per 100g or 100ml.\n",
                    "type": "number",
                    "readOnly": true
                  },
                  "(?<nutrient>[\\w-]+)_serving": {
                    "description": "The normalized value of the nutrient for one serving, in a standard unit:\n- g for most nutrients\n- % for nutrients that are percentages (e.g. alcohol)\n- kJ for energy and energy-kj\n- kcal for energy-kcal\n\nThis is computed from the `nutrient` property,\nthe serving size (if `nutrient` is per 100g), and the `nutrient`_unit field.\n",
                    "type": "number",
                    "readOnly": true
                  },
                  "(?<nutrient>[\\w-]+)_value": {
                    "description": "The value entered by the contributor (a user or the manufacturer).\nIn most cases, the unit of the value is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\n* per 100g or serving, depending on `nutrition_data_per` field.\n* in the unit of the corresponding <nutrient>_unit field.\n\n**Note**: For most use cases, you should not use this value, as it can be in different units, and can be per 100g or per serving.\n",
                    "type": "number",
                    "readOnly": true
                  },
                  "(?<nutrient>[\\w-]+)_prepared": {
                    "description": "Same as '(?<nutrient>[\\w-]+)', for the prepared product (not as sold).\n",
                    "type": "number"
                  },
                  "(?<nutrient>[\\w-]+)_prepared_unit": {
                    "description": "Same as '(?<nutrient>[\\w-]+)_unit', for the prepared product (not as sold).\n",
                    "type": "string"
                  },
                  "(?<nutrient>[\\w-]+)_prepared_100g": {
                    "description": "Same as '(?<nutrient>[\\w-]+)_100g', for the prepared product (not as sold).\n",
                    "type": "number",
                    "readOnly": true
                  },
                  "(?<nutrient>[\\w-]+)_prepared_serving": {
                    "description": "Same as '(?<nutrient>[\\w-]+)_serving', for the prepared product (not as sold).\n",
                    "type": "number",
                    "readOnly": true
                  },
                  "(?<nutrient>[\\w-]+)_prepared_value": {
                    "description": "Same as '(?<nutrient>[\\w-]+)_value', for the prepared product (not as sold).\n",
                    "type": "number",
                    "readOnly": true
                  }
                }
              },
              "nutriscore_data": {
                "description": "Detail of data the Nutri-Score was computed upon.\n\n**Note**: this might not be stable, don't rely too much on this, or, at least, tell us !\n\n**TODO** document each property\n",
                "type": "object",
                "properties": {
                  "saturated_fat_ratio": {
                    "type": "number"
                  },
                  "saturated_fat_ratio_points": {
                    "type": "integer"
                  },
                  "saturated_fat_ratio_value": {
                    "type": "number"
                  }
                }
              },
              "nutrition_grade_fr": {
                "type": "string",
                "description": "Nutrition grade (‘a’ to ‘e’),\nhttps://world.openfoodfacts.org/nutriscore.\n"
              },
              "nutrition_grades": {
                "description": "Nutrition grades as a comma separated list.\n\nSome products with multiple components might have multiple Nutri-Score\n",
                "type": "string"
              },
              "nutrition_grades_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "nutrition_score_beverage": {
                "type": "integer"
              },
              "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients": {
                "type": "integer"
              },
              "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value": {
                "type": "integer"
              },
              "nutrition_score_warning_no_fiber": {
                "type": "integer"
              },
              "other_nutritional_substances_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "unknown_nutrients_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "vitamins_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          {
            "title": "ProductNutriscore",
            "type": "object",
            "properties": {
              "nutriscore": {
                "title": "Nutriscores",
                "type": "object",
                "properties": {
                  "2021": {
                    "title": "Nutriscore2021",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "category_available": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              1
                            ]
                          },
                          "grade": {
                            "examples": [
                              "d"
                            ],
                            "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                            "type": "string",
                            "enum": [
                              "a",
                              "b",
                              "c",
                              "d",
                              "e"
                            ]
                          },
                          "nutrients_available": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              1
                            ]
                          },
                          "nutriscore_applicable": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              1
                            ]
                          },
                          "nutriscore_computed": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              1
                            ]
                          },
                          "score": {
                            "type": "integer",
                            "examples": [
                              13,
                              18
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "data": {
                            "title": "Nutriscore2021Data",
                            "allOf": [
                              {
                                "title": "Nutriscore2021InnerData",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "is_beverage": {
                                        "type": "integer",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "examples": [
                                          0
                                        ]
                                      },
                                      "is_cheese": {
                                        "type": "integer",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "examples": [
                                          0
                                        ]
                                      },
                                      "is_water": {
                                        "type": "integer",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "examples": [
                                          0
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "is_fat": {
                                        "type": "integer",
                                        "enum": [
                                          0,
                                          1
                                        ],
                                        "examples": [
                                          0
                                        ]
                                      },
                                      "energy": {
                                        "type": "integer",
                                        "examples": [
                                          1996
                                        ]
                                      },
                                      "energy_points": {
                                        "type": "integer",
                                        "examples": [
                                          5
                                        ]
                                      },
                                      "energy_value": {
                                        "type": "integer",
                                        "examples": [
                                          1996
                                        ]
                                      },
                                      "fiber": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          3.8
                                        ]
                                      },
                                      "fiber_points": {
                                        "type": "integer",
                                        "examples": [
                                          4
                                        ]
                                      },
                                      "fiber_value": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          3.8
                                        ]
                                      },
                                      "fruits_vegetables_nuts_colza_walnut_olive_oils": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          0
                                        ]
                                      },
                                      "fruits_vegetables_nuts_colza_walnut_olive_oils_points": {
                                        "type": "integer",
                                        "examples": [
                                          0
                                        ]
                                      },
                                      "fruits_vegetables_nuts_colza_walnut_olive_oils_value": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          0
                                        ]
                                      },
                                      "proteins": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          6.6
                                        ]
                                      },
                                      "proteins_points": {
                                        "type": "integer",
                                        "examples": [
                                          4
                                        ]
                                      },
                                      "proteins_value": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          6.6
                                        ]
                                      },
                                      "saturated_fat": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          6.2
                                        ]
                                      },
                                      "saturated_fat_points": {
                                        "type": "integer",
                                        "examples": [
                                          6
                                        ]
                                      },
                                      "saturated_fat_value": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          6.2
                                        ]
                                      },
                                      "sodium": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          210
                                        ]
                                      },
                                      "sodium_points": {
                                        "type": "integer",
                                        "examples": [
                                          2
                                        ]
                                      },
                                      "sodium_value": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          210
                                        ]
                                      },
                                      "sugars": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          21.5
                                        ]
                                      },
                                      "sugars_points": {
                                        "type": "integer",
                                        "examples": [
                                          4
                                        ]
                                      },
                                      "sugars_value": {
                                        "type": "number",
                                        "format": "float",
                                        "examples": [
                                          21.5
                                        ]
                                      },
                                      "negative_points": {
                                        "type": "integer",
                                        "examples": [
                                          17
                                        ]
                                      },
                                      "positive_points": {
                                        "type": "integer",
                                        "examples": [
                                          4
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "grade": {
                                    "examples": [
                                      "d"
                                    ],
                                    "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                                    "type": "string",
                                    "enum": [
                                      "a",
                                      "b",
                                      "c",
                                      "d",
                                      "e"
                                    ]
                                  },
                                  "score": {
                                    "type": "integer",
                                    "examples": [
                                      13
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "2023": {
                    "title": "Nutriscore2023",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "category_available": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              1
                            ]
                          },
                          "grade": {
                            "examples": [
                              "d"
                            ],
                            "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                            "type": "string",
                            "enum": [
                              "a",
                              "b",
                              "c",
                              "d",
                              "e"
                            ]
                          },
                          "nutrients_available": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              1
                            ]
                          },
                          "nutriscore_applicable": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              1
                            ]
                          },
                          "nutriscore_computed": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              1
                            ]
                          },
                          "score": {
                            "type": "integer",
                            "examples": [
                              13,
                              18
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "data": {
                            "title": "Nutriscore2023Data",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "is_beverage": {
                                    "type": "integer",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "is_cheese": {
                                    "type": "integer",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "is_water": {
                                    "type": "integer",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "examples": [
                                      0
                                    ]
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "is_fat_oil_nuts_seeds": {
                                    "type": "integer",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "is_red_meat_product": {
                                    "type": "integer",
                                    "enum": [
                                      0,
                                      1
                                    ],
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "components": {
                                    "title": "Nutriscore2023DataComponents",
                                    "type": "object",
                                    "properties": {
                                      "negative": {
                                        "type": "array",
                                        "items": {
                                          "title": "NutriscoreComponent",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "examples": [
                                                "energy",
                                                "sugars",
                                                "saturated_fat",
                                                "salt",
                                                "fiber",
                                                "fruits_vegetables_legumes"
                                              ]
                                            },
                                            "points": {
                                              "type": "integer",
                                              "examples": [
                                                5,
                                                6,
                                                7,
                                                2,
                                                1,
                                                0
                                              ]
                                            },
                                            "points_max": {
                                              "type": "integer",
                                              "examples": [
                                                10,
                                                15,
                                                20,
                                                25,
                                                5,
                                                5
                                              ]
                                            },
                                            "unit": {
                                              "type": "string",
                                              "examples": [
                                                "kJ",
                                                "g",
                                                "%"
                                              ]
                                            },
                                            "value": {
                                              "type": [
                                                "null",
                                                "number"
                                              ],
                                              "format": "float",
                                              "examples": [
                                                21.5,
                                                6.2,
                                                0.53,
                                                3.8,
                                                0
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "positive": {
                                        "type": "array",
                                        "items": {
                                          "title": "NutriscoreComponent",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "examples": [
                                                "energy",
                                                "sugars",
                                                "saturated_fat",
                                                "salt",
                                                "fiber",
                                                "fruits_vegetables_legumes"
                                              ]
                                            },
                                            "points": {
                                              "type": "integer",
                                              "examples": [
                                                5,
                                                6,
                                                7,
                                                2,
                                                1,
                                                0
                                              ]
                                            },
                                            "points_max": {
                                              "type": "integer",
                                              "examples": [
                                                10,
                                                15,
                                                20,
                                                25,
                                                5,
                                                5
                                              ]
                                            },
                                            "unit": {
                                              "type": "string",
                                              "examples": [
                                                "kJ",
                                                "g",
                                                "%"
                                              ]
                                            },
                                            "value": {
                                              "type": [
                                                "null",
                                                "number"
                                              ],
                                              "format": "float",
                                              "examples": [
                                                21.5,
                                                6.2,
                                                0.53,
                                                3.8,
                                                0
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "count_proteins": {
                                    "type": "number",
                                    "format": "float",
                                    "examples": [
                                      0
                                    ]
                                  },
                                  "count_proteins_reason": {
                                    "type": "string",
                                    "examples": [
                                      "negative_points_greater_than_or_equal_to_11"
                                    ]
                                  },
                                  "negative_points": {
                                    "type": "integer",
                                    "examples": [
                                      19
                                    ]
                                  },
                                  "positive_points": {
                                    "type": "integer",
                                    "examples": [
                                      1
                                    ]
                                  },
                                  "negative_points_max": {
                                    "type": "integer",
                                    "examples": [
                                      55
                                    ]
                                  },
                                  "positive_points_max": {
                                    "type": "integer",
                                    "examples": [
                                      10
                                    ]
                                  },
                                  "positive_nutrients": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "examples": [
                                      [
                                        "fiber",
                                        "fruits_vegetables_legumes"
                                      ]
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "nutriscore_2021_tags": {
                "type": "array",
                "items": {
                  "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                  "type": "string",
                  "enum": [
                    "a",
                    "b",
                    "c",
                    "d",
                    "e"
                  ]
                },
                "examples": [
                  [
                    "d"
                  ]
                ]
              },
              "nutriscore_2023_tags": {
                "type": "array",
                "items": {
                  "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                  "type": "string",
                  "enum": [
                    "a",
                    "b",
                    "c",
                    "d",
                    "e"
                  ]
                },
                "examples": [
                  [
                    "d"
                  ]
                ]
              },
              "nutriscore_data": {
                "title": "Nutriscore2021Data",
                "allOf": [
                  {
                    "title": "Nutriscore2021InnerData",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "is_beverage": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              0
                            ]
                          },
                          "is_cheese": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              0
                            ]
                          },
                          "is_water": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              0
                            ]
                          }
                        }
                      },
                      {
                        "properties": {
                          "is_fat": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "examples": [
                              0
                            ]
                          },
                          "energy": {
                            "type": "integer",
                            "examples": [
                              1996
                            ]
                          },
                          "energy_points": {
                            "type": "integer",
                            "examples": [
                              5
                            ]
                          },
                          "energy_value": {
                            "type": "integer",
                            "examples": [
                              1996
                            ]
                          },
                          "fiber": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              3.8
                            ]
                          },
                          "fiber_points": {
                            "type": "integer",
                            "examples": [
                              4
                            ]
                          },
                          "fiber_value": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              3.8
                            ]
                          },
                          "fruits_vegetables_nuts_colza_walnut_olive_oils": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              0
                            ]
                          },
                          "fruits_vegetables_nuts_colza_walnut_olive_oils_points": {
                            "type": "integer",
                            "examples": [
                              0
                            ]
                          },
                          "fruits_vegetables_nuts_colza_walnut_olive_oils_value": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              0
                            ]
                          },
                          "proteins": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              6.6
                            ]
                          },
                          "proteins_points": {
                            "type": "integer",
                            "examples": [
                              4
                            ]
                          },
                          "proteins_value": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              6.6
                            ]
                          },
                          "saturated_fat": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              6.2
                            ]
                          },
                          "saturated_fat_points": {
                            "type": "integer",
                            "examples": [
                              6
                            ]
                          },
                          "saturated_fat_value": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              6.2
                            ]
                          },
                          "sodium": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              210
                            ]
                          },
                          "sodium_points": {
                            "type": "integer",
                            "examples": [
                              2
                            ]
                          },
                          "sodium_value": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              210
                            ]
                          },
                          "sugars": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              21.5
                            ]
                          },
                          "sugars_points": {
                            "type": "integer",
                            "examples": [
                              4
                            ]
                          },
                          "sugars_value": {
                            "type": "number",
                            "format": "float",
                            "examples": [
                              21.5
                            ]
                          },
                          "negative_points": {
                            "type": "integer",
                            "examples": [
                              17
                            ]
                          },
                          "positive_points": {
                            "type": "integer",
                            "examples": [
                              4
                            ]
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "grade": {
                        "examples": [
                          "d"
                        ],
                        "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                        "type": "string",
                        "enum": [
                          "a",
                          "b",
                          "c",
                          "d",
                          "e"
                        ]
                      },
                      "score": {
                        "type": "integer",
                        "examples": [
                          13
                        ]
                      }
                    }
                  }
                ]
              },
              "nutriscore_grade": {
                "examples": [
                  "d"
                ],
                "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                "type": "string",
                "enum": [
                  "a",
                  "b",
                  "c",
                  "d",
                  "e"
                ]
              },
              "nutriscore_score": {
                "description": "Nutri-Score for the product as an integer (see also `nutriscore_grade`).\n",
                "type": "integer",
                "examples": [
                  13
                ]
              },
              "nutriscore_score_opposite": {
                "type": "integer",
                "examples": [
                  -13
                ]
              },
              "nutriscore_tags": {
                "type": "array",
                "items": {
                  "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                  "type": "string",
                  "enum": [
                    "a",
                    "b",
                    "c",
                    "d",
                    "e"
                  ]
                },
                "examples": [
                  [
                    "d"
                  ]
                ]
              },
              "nutriscore_version": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "description": "This is data that is linked to products data quality\n",
            "properties": {
              "data_quality_bugs_tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Each data quality bug describes a data quality bug on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
                }
              },
              "data_quality_errors_tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Each Data Quality Error describes a data quality error on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
                }
              },
              "data_quality_info_tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Each Data Quality Info describes a data quality info on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
                }
              },
              "data_quality_tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Each Data Quality tag describes a data quality issue on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
                }
              },
              "data_quality_warnings_tags": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Each Data Quality warning tag describes a data quality warning on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
                }
              },
              "data_sources": {
                "type": "string",
                "description": "Source of data imported from producers.\n"
              },
              "data_sources_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "last_check_dates_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "last_checked_t": {
                "type": "integer"
              },
              "last_checker": {
                "type": "string"
              },
              "states": {
                "description": "comma separated list of values indicating some states of the product,\nlike things to be done, or to be completed.\nSee [states taxonomy](https://static.openfoodfacts.net/data/taxonomies/states.json)\n",
                "type": "string"
              },
              "states_hierarchy": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "states_tags": {
                "type": "array",
                "items": {
                  "description": "Each state describe something that is completed or is to be done or improved on the product.\n\nRefer to [states taxonomy](https://static.openfoodfacts.net/data/taxonomies/states.json)\n",
                  "type": "string"
                }
              },
              "misc_tags": {
                "description": "Information about different aspect of the product\n  Refer to [misc taxonomy](https://static.openfoodfacts.org/data/taxonomies/misc.json)\n",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "title": "product_extended",
            "type": "object",
            "properties": {
              "additives_original_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "additives_prev_original_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "added_countries_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "allergens_from_ingredients": {
                "type": "string"
              },
              "allergens_from_user": {
                "type": "string"
              },
              "amino_acids_prev_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "amino_acids_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "carbon_footprint_percent_of_known_ingredients": {
                "type": "integer"
              },
              "categories_properties": {
                "type": "object",
                "properties": {
                  "agribalyse_food_code:en": {
                    "type": "string"
                  },
                  "agribalyse_proxy_food_code:en": {
                    "type": "string"
                  },
                  "ciqual_food_code:en": {
                    "type": "string"
                  }
                }
              },
              "categories_properties_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "category_properties": {
                "type": "object",
                "additionalProperties": {
                  "description": "those are properties taken from the category taxonomy",
                  "type": "string"
                }
              },
              "ciqual_food_name_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "compared_to_category": {
                "type": "string",
                "description": "the category to use for comparison.\n\n**TODO** explain how it is chosen.\n"
              },
              "conservation_conditions": {
                "type": "string"
              },
              "customer_service": {
                "type": "string",
                "description": "Contact info of customer service.\n"
              },
              "expiration_date": {
                "type": "string"
              },
              "link": {
                "type": "string",
                "description": "link to the product on the website of the producer\n"
              },
              "main_countries_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "minerals_prev_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "minerals_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "owner_fields": {
                "type": "object",
                "description": "Those are fields provided by the producer (through producers platform),\nand the value he provided.\n",
                "properties": {
                  "additionalProperties": {
                    "description": "you can retrieve all kind of properties, the same as on the parent object (the product).\nIt's not processed entries (like tags for example) but raw ones.\n",
                    "oneOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "object"
                      }
                    ]
                  }
                }
              },
              "nova_groups_markers": {
                "type": "object",
                "description": "Detail of ingredients or processing that makes the products having Nova 3 or 4\n",
                "propertyNames": {
                  "description": "Markers of level 3, 4, ...",
                  "type": "integer",
                  "enum": [
                    3,
                    4
                  ]
                },
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "description": "This array has two elements for each marker. The first element is the tag type of the marker (e.g. \"ingredients\", \"additives\", \"categories\"), and the second is the tag id in the taxonomy (e.g. \"en:e471\")",
                      "type": "string"
                    }
                  }
                }
              },
              "nucleotides_tags": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "origin": {
                "type": "string"
              },
              "purchase_places": {
                "type": "string",
                "description": "Country, state, or city where the product can be purchased.\n",
                "example": "Paris"
              },
              "purchase_places_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "stores": {
                "type": "string",
                "description": "Distributor name.\n",
                "example": "Walmart"
              },
              "stores_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "traces_from_ingredients": {
                "type": "string"
              },
              "traces_from_user": {
                "type": "string"
              }
            },
            "patternProperties": {
              "conservation_conditions_(?<language_code>\\w\\w)": {
                "type": "string"
              },
              "customer_service_(?<language_code>\\w\\w)": {
                "type": "string"
              },
              "origin_(?<language_code>\\w\\w)": {
                "type": "string",
                "description": "`origin` in language indicated by `language_code`\n"
              }
            }
          },
          {
            "type": "object",
            "description": "Metadata of a product (author, editors, creation date, etc.)\n",
            "properties": {
              "created_t": {
                "type": "integer",
                "description": "Date when the product was added (UNIX timestamp format).\nSee also `entry_dates_tags`\n",
                "example": 1457680652
              },
              "creator": {
                "type": "string",
                "description": "The contributor who added the product first.\n"
              },
              "editors_tags": {
                "description": "List of editors who edited the product.\n",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "informers_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "interface_version_created": {
                "type": "string"
              },
              "interface_version_modified": {
                "type": "string"
              },
              "languages": {
                "type": "object",
                "patternProperties": {
                  "en:(?<language_name>\\w\\w)": {
                    "type": "integer",
                    "description": "**TODO** explain !\n"
                  }
                }
              },
              "languages_codes": {
                "type": "object",
                "patternProperties": {
                  "(?<language_code>\\w\\w)": {
                    "type": "integer"
                  }
                },
                "description": "Same as `languages` but by language code, instead of language tags\n"
              },
              "languages_hierarchy": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "languages_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "last_edit_dates_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "last_editor": {
                "type": "string"
              },
              "last_modified_by": {
                "type": "string",
                "description": "The username of the user who last modified the product.\n",
                "example": "sebleouf"
              },
              "last_modified_t": {
                "type": "integer",
                "description": "Date when the product page was last modified.\nThis date is updated only when primary data is modified (data entered by the user or updated by an interface)\n"
              },
              "last_updated_t": {
                "type": "integer",
                "description": "Date when the product page was last modified.\nThis date is updated when primary data or secondary data is modified\n(primary: data entered by a user or read from an interface, secondary: data computed by a utility\nsuch as update_all_products.pl)\n"
              },
              "owner": {
                "description": "Id of the producer in case he provides his own data about a product (producer platform).\n",
                "type": "string"
              },
              "owners_tags": {
                "description": "Tagyfied version of owner\n",
                "type": "string"
              },
              "photographers_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "rev": {
                "description": "revision number of this product version (each edit adds a revision)",
                "type": "integer"
              },
              "sources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "product_meta_source",
                  "properties": {
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "import_t": {
                      "type": "integer"
                    },
                    "manufacturer": {
                      "type": [
                        "integer",
                        "string"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "source_licence": {
                      "type": "string"
                    },
                    "source_licence_url": {
                      "type": "string"
                    },
                    "url": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  }
                }
              },
              "sources_fields": {
                "type": "object",
                "title": "product_meta_source_fields",
                "properties": {
                  "org-gs1": {
                    "type": "object",
                    "properties": {
                      "gln": {
                        "type": "string"
                      },
                      "gpcCategoryCode": {
                        "type": "string"
                      },
                      "gpcCategoryName": {
                        "type": "string"
                      },
                      "isAllergenRelevantDataProvided": {
                        "type": "string"
                      },
                      "lastChangeDateTime": {
                        "type": "string"
                      },
                      "partyName": {
                        "type": "string"
                      },
                      "productionVariantDescription": {
                        "type": "string"
                      },
                      "publicationDateTime": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "teams": {
                "type": "string"
              },
              "teams_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "update_key": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "description": "Knowledge panels for a product\n",
            "properties": {
              "knowledge_panels": {
                "type": "object",
                "title": "panels",
                "description": "The panels object is a dictionary of individual panel objects.\nEach key of the dictionary is the id of the panel, and the value is the panel object.\n\nApps typically display a number of root panels with known panel ids (e.g. health_card and environment_card). Panels can reference other panels and display them as sub-panels.",
                "examples": [
                  {
                    "additionalProperties": "string"
                  }
                ],
                "properties": {
                  "additionalProperties": {
                    "title": "panel",
                    "type": "object",
                    "description": "Each panel contains an optional title and an optional array of elements.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of the panel. If set to \"card\", the panel and its sub-panels should be displayed in a card. If set to \"inline\", the panel should have its content always displayed."
                      },
                      "expanded": {
                        "type": "boolean",
                        "description": "If true, the panel is to be displayed already expanded. If false, only the title should be displayed, and the user should be able to click or tap it to open the panel and display the elements."
                      },
                      "expand_for": {
                        "type": "string",
                        "description": "If set to \"large\", the content of the panel should be expanded on large screens, but it should still be possible to unexpand it."
                      },
                      "evaluation": {
                        "type": "string",
                        "description": "An evaluation status specifically for this title element. This can be used to directly color the icon if 'icon_color_from_evaluation' is true and this field is present, or it might provide context for the title itself. e.g. bad is red. Please be careful in choosing colors, to avoid 50 shades of red.",
                        "example": "bad",
                        "enum": [
                          "good",
                          "average",
                          "neutral",
                          "bad",
                          "unknown"
                        ]
                      },
                      "half_width_on_mobile": {
                        "type": "boolean",
                        "description": "If true, suggests that this panel could be rendered as half-width on mobile devices, allowing for side-by-side display with another half-width panel if applicable.",
                        "example": true
                      },
                      "title_element": {
                        "title": "title_element",
                        "x-stoplight": {
                          "id": "lox0wvl9bdgy2"
                        },
                        "type": "object",
                        "description": "The title of a panel.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "A short name of this panel, not including any actual values"
                          },
                          "title": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "grade",
                              "percentage"
                            ],
                            "description": "Used to indicate how the value of this item is measured, such as \"grade\" for Nutri-Score and Green-Score or \"percentage\" for Salt"
                          },
                          "grade": {
                            "type": "string",
                            "description": "The value for this panel where it corresponds to a A to E grade such as the Nutri-Score or the Green-Score.",
                            "enum": [
                              "a+",
                              "a",
                              "b",
                              "c",
                              "d",
                              "e",
                              "f",
                              "unknown"
                            ]
                          },
                          "value": {
                            "type": "number",
                            "description": "The numeric value of the panel, where the type is \"percentage\""
                          },
                          "icon_url": {
                            "type": "string"
                          },
                          "icon_color_from_evaluation": {
                            "type": "string"
                          },
                          "icon_size": {
                            "type": "string",
                            "description": "If set to \"small\", the icon should be displayed at a small size.\n"
                          }
                        }
                      },
                      "elements": {
                        "type": "array",
                        "description": "An ordered list of elements to display in the content of the panel.",
                        "items": {
                          "title": "element",
                          "x-stoplight": {
                            "id": "e2ybdrtmx0tme"
                          },
                          "type": "object",
                          "description": "Each element object contains one specific element object such as a text element or an image element.\n",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "text",
                                "image",
                                "action",
                                "panel",
                                "panel_group",
                                "table"
                              ],
                              "description": "The type of the included element object.\nThe type also indicates which field contains the included element object.\ne.g. if the type is \"text\", the included element object will be in the \"text_element\" field.\n\nNote that in the future, new type of element may be added,\nso your code should ignore unrecognized types, and unknown properties.\n\nTODO: add Map type\n"
                            },
                            "text_element": {
                              "title": "text_element",
                              "x-stoplight": {
                                "id": "vdwxlt73qnqfa"
                              },
                              "type": "object",
                              "description": "A text in simple HTML format to display.\n\nFor some specific texts that correspond to a product field (e.g. a product name, the ingredients list of a product),the edit_field_* fields are used to indicate how to edit the field value.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "the type of text, might influence the way you display it.\n",
                                  "enum": [
                                    "summary",
                                    "warning",
                                    "notes"
                                  ]
                                },
                                "html": {
                                  "type": "string",
                                  "description": "Text to display in HTML format."
                                },
                                "language": {
                                  "type": "string",
                                  "description": "Language of the text. The name of the language is returned in the language requested when making the API call. e.g. if the text is in Polish, and the requested language is French, the language field will contain \"Polonais\" (French for \"Polish\"). Only set for specific fields such as the list of ingredients of a product."
                                },
                                "lc": {
                                  "type": "string",
                                  "description": "2 letter language code for the text. Only set for specific fields such as the list of ingredients of a product."
                                },
                                "edit_field_id": {
                                  "type": "string",
                                  "description": "id of the field used to edit this text in the product edit API."
                                },
                                "edit_field_type": {
                                  "type": "string",
                                  "description": "Type of the product field."
                                },
                                "edit_field_value": {
                                  "type": "string",
                                  "description": "Current value of the product field. This may differ from the html field which can contain extra formating."
                                },
                                "source_url": {
                                  "type": "string",
                                  "description": "Link to the source",
                                  "example": "https://en.wikipedia.org/wiki/Sodium acetate"
                                },
                                "source_text": {
                                  "type": "string",
                                  "description": "name of the source",
                                  "example": "Wikipedia"
                                },
                                "source_lc": {
                                  "type": "string",
                                  "description": "Source locale name",
                                  "example": "en"
                                },
                                "source_language": {
                                  "type": "string",
                                  "description": "Human readable source locale name",
                                  "example": "English"
                                }
                              }
                            },
                            "image_element": {
                              "title": "image_element",
                              "x-stoplight": {
                                "id": "k4v4kwt489q3j"
                              },
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "full URL of the image"
                                },
                                "width": {
                                  "type": "integer",
                                  "description": "Width of the image.\n\nThis is just a suggestion coming from the server, \nthe client may choose to use its own dimensions for the image.\n"
                                },
                                "height": {
                                  "type": "integer",
                                  "description": "Height of the image.\n\nThis is just a suggestion coming from the server,\nthe client may choose to use its own dimensions for the image.\n"
                                },
                                "alt_text": {
                                  "type": "string",
                                  "description": "Alt Text of the image."
                                }
                              }
                            },
                            "action_element": {
                              "type": "string"
                            },
                            "panel_element": {
                              "title": "panel_element",
                              "x-stoplight": {
                                "id": "ymx41elz4yrnj"
                              },
                              "type": "object",
                              "description": "Panels can include other panels as sub-panels using the panel_element.",
                              "properties": {
                                "panel_id": {
                                  "type": "string",
                                  "description": "The id of the panel to include. The id is the key of the panel in the panels object returned in the knowledge_panels field."
                                }
                              }
                            },
                            "panel_group_element": {
                              "title": "panel_group_element",
                              "x-stoplight": {
                                "id": "b7emlfrgiuue2"
                              },
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string"
                                },
                                "panel_ids": {
                                  "type": "array",
                                  "description": "The ids of the panels to include. The ids are the keys of the panels in the panels object returned in the knowledge_panels field.",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "image": {
                                  "type": "object",
                                  "description": "An image related to the panel group (e.g. the ingredients or nutrition facts image for the ingredients and nutrition panel groups)."
                                }
                              },
                              "description": "The panel group element is used to display an optional title followed by a number of sub-panels."
                            },
                            "table_element": {
                              "title": "table_element",
                              "type": "object",
                              "description": "Element to display a table.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "An id for the table."
                                },
                                "title": {
                                  "type": "string",
                                  "description": "Title of the column.\n"
                                },
                                "rows": {
                                  "type": "string"
                                },
                                "columns": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "table_column",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "text": {
                                        "type": "string"
                                      },
                                      "text_for_small_screens": {
                                        "type": "string"
                                      },
                                      "style": {
                                        "type": "string"
                                      },
                                      "column_group_id": {
                                        "type": "string"
                                      },
                                      "shown_by_default": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      },
                      "level": {
                        "type": "string",
                        "description": "a message level, as levels we use in log.\nIt might help theming the panel visually. Some possible values: info, recommendation\n",
                        "example": "info"
                      },
                      "size": {
                        "type": "string",
                        "enum": [
                          "small"
                        ],
                        "description": "size is either empty (normal display) \nor small to indicate a panel that should have a smaller font size\n",
                        "example": "small"
                      },
                      "topics": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "health"
                        },
                        "description": "topics currently include health, environment, problem"
                      }
                    }
                  }
                },
                "readOnly": true
              }
            }
          },
          {
            "type": "object",
            "description": "Specific data about a product to enable personal ranking\n",
            "properties": {
              "attribute_groups": {
                "type": "array",
                "description": "Each element is an attribute that can help compute a personal ranking for the product",
                "items": {
                  "title": "product_attribute_group",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique id of the attribute.\n\nIt will be use to match against preferences parameters.\n"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "known",
                        "unknown"
                      ],
                      "description": "wether we have the information to really compute this criteria or not."
                    },
                    "title": {
                      "type": "string",
                      "description": "A descriptive sentence about the situation of the product concerning attribute\n",
                      "example": "Does not contain: Molluscs"
                    },
                    "match": {
                      "type": "number",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 100,
                      "description": "a numeric value for the match,\ntelling how much the products ranks well for this particular attribute.\nThe higher the value, the better the match.\n"
                    },
                    "grade": {
                      "description": "every attribute as a grade for a to e",
                      "type": "string",
                      "enum": [
                        "unknown",
                        "a",
                        "b",
                        "c",
                        "d",
                        "e"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of attribute, for eventual display"
                    },
                    "icon_url": {
                      "type": "string",
                      "description": "an icon representing the attribute match (often using a color)"
                    },
                    "description": {
                      "type": "string",
                      "description": "An eventual description of the value of the property upon which this attribute is based"
                    },
                    "description_short": {
                      "type": "string",
                      "description": "An eventual short description of the value of the property upon which this attribute is based"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "Ingredient": {
        "title": "ingredient",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ingredients": {
            "title": "ingredients",
            "type": "array",
            "description": "This structure gives the different ingredients and some information about them,\nlike estimate on their quantity.\n",
            "items": {
              "$ref": "#/components/schemas/Ingredient"
            }
          },
          "percent": {
            "type": "integer",
            "description": "The percentage of the ingredient."
          },
          "percent_estimate": {
            "type": "number",
            "description": "Estimated percentage of the ingredient."
          },
          "percent_max": {
            "type": [
              "string",
              "number"
            ],
            "description": "Maximum percentage of the ingredient."
          },
          "percent_min": {
            "type": "integer",
            "description": "Minimum percentage of the ingredient."
          },
          "text": {
            "type": "string",
            "description": "Text description of the ingredient."
          },
          "vegan": {
            "type": "string",
            "description": "Indicates if the ingredient is vegan."
          },
          "vegetarian": {
            "type": "string",
            "description": "Indicates if the ingredient is vegetarian."
          }
        }
      },
      "Nutrient": {
        "type": "object",
        "title": "nutrient",
        "properties": {
          "id": {
            "type": "string",
            "description": "id of the nutrient"
          },
          "name": {
            "type": "string",
            "description": "Name of the nutrient in the requested language"
          },
          "important": {
            "type": "boolean",
            "description": "Indicates if the nutrient is always shown on the nutrition facts table"
          },
          "display_in_edit_form": {
            "type": "boolean",
            "description": "Indicates if the nutrient should be shown in the nutrition facts edit form"
          },
          "unit": {
            "description": "Default unit of the nutrient",
            "type": "string",
            "enum": [
              "g",
              "mg",
              "μg",
              "cl",
              "ml",
              "dv",
              "% vol",
              "%"
            ]
          },
          "nutrients": {
            "type": "array",
            "description": "Nutrients and sub-nutrients of a product, with their name and default unit.\n(e.g. saturated-fat is a sub-nutrient of fat).\n",
            "items": {
              "$ref": "#/components/schemas/Nutrient"
            }
          }
        }
      }
    },
    "parameters": {
      "id": {
        "schema": {
          "type": "string",
          "example": "ingredients_en"
        },
        "in": "query",
        "name": "id",
        "required": true
      },
      "cc": {
        "schema": {
          "type": "string",
          "example": "us"
        },
        "in": "query",
        "name": "cc",
        "required": false,
        "description": "2 letter code of the country of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the country may be inferred by the IP address of the request."
      },
      "lc": {
        "schema": {
          "type": "string",
          "example": "fr"
        },
        "in": "query",
        "name": "lc",
        "required": false,
        "description": "2 letter code of the language of the user.\nUsed for localizing some fields in returned values (e.g. knowledge panels).\nIf not passed, the language may be inferred by the Accept-Language header of the request,\nor from the domain name prefix.\n"
      },
      "code": {
        "schema": {
          "type": "string",
          "example": "4251105501381"
        },
        "in": "query",
        "name": "code",
        "description": "Barcode of the product",
        "required": true
      },
      "process_image": {
        "schema": {
          "type": "string",
          "example": "1"
        },
        "in": "query",
        "name": "process_image",
        "required": true
      },
      "ocr_engine": {
        "schema": {
          "type": "string",
          "example": "google_cloud_vision"
        },
        "in": "query",
        "name": "ocr_engine",
        "required": true
      },
      "imgid": {
        "schema": {
          "type": "string",
          "example": "1"
        },
        "in": "query",
        "name": "imgid",
        "required": true
      },
      "angle": {
        "schema": {
          "type": "string",
          "example": "90"
        },
        "in": "query",
        "name": "angle",
        "required": true
      },
      "page": {
        "schema": {
          "type": "integer",
          "example": 24
        },
        "in": "query",
        "name": "page",
        "description": "The page number you request to view (eg. in search results spanning multiple pages)\n"
      },
      "page_size": {
        "schema": {
          "type": "integer",
          "example": 24
        },
        "in": "query",
        "name": "page_size",
        "description": "The number of elements should be sent per page\n"
      },
      "sort_by": {
        "schema": {
          "type": "string",
          "example": "product_name",
          "enum": [
            "product_name",
            "last_modified_t",
            "scans_n",
            "unique_scans_n",
            "created_t",
            "completeness",
            "popularity_key",
            "nutriscore_score",
            "nova_score",
            "nothing",
            "ecoscore_score"
          ]
        },
        "in": "query",
        "name": "sort_by",
        "description": "The allowed values  used to sort/order the search results.\n\n* `product_name` sorts on name\n* `ecoscore_score`, `nova_score`, `nutriscore_score` rank on the [Eco-Score](https://world.openfoodfacts.org/eco-score-the-environmental-impact-of-food-products), [Nova](https://world.openfoodfacts.org/nova), or [Nutri-Score](https://world.openfoodfacts.org/nutriscore)\n* `scans_n`, `unique_scans_n` and `popularity_key` are about product popularity: number of scans on unique scans, rank of product\n* `created_t`, `last_modified_t`, are about creation and modification dates\n* `nothing`, tells not to sort at all (because if you do not provide the sort_by argument we default to sorting on popularity (for food) or last modification date)\n"
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "Specific fields to return. Use 'knowledge_panels' for Knowledge Panels only.",
        "required": false,
        "schema": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_.-]+(,[a-zA-Z0-9_.-]+)*$",
          "description": "Custom comma-separated list of product field names",
          "examples": [
            "knowledge_panels",
            "knowledge_panels,product_name,nutriments",
            "categories_tags,packaging_tags",
            "allergens_tags,nutriscores",
            "images,brands_tags,categories_tags,countries_tags,languages_tags,ecoscore_tags"
          ]
        }
      },
      "knowledge_panels_included": {
        "schema": {
          "type": "string",
          "example": "heatlh_card, environment_card"
        },
        "in": "query",
        "name": "knowledge_panels_included",
        "description": "When knowledge_panels are requested, you can specify which panels should be in the response. All the others will be excluded.\n"
      },
      "knowledge_panels_excluded": {
        "schema": {
          "type": "string",
          "example": "heatlh_card, environment_card"
        },
        "in": "query",
        "name": "knowledge_panels_excluded",
        "description": "When knowledge_panels are requested, you can specify which panels to exclude from the response. All the others will be included.\nIf a panel is both excluded and included (with the knowledge_panels_excluded parameter), it will be excluded.\n"
      },
      "tagtype": {
        "schema": {
          "type": "string",
          "example": "additives"
        },
        "in": "query",
        "name": "tagtype"
      },
      "term": {
        "schema": {
          "type": "string",
          "example": "f"
        },
        "in": "query",
        "name": "term"
      }
    }
  },
  "security": [
    {}
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Endpoints for managing product data and information."
    },
    {
      "name": "Images",
      "description": "Endpoints for uploading, cropping, rotating, and managing product images."
    },
    {
      "name": "Search",
      "description": "Endpoints for searching products with various filters and criteria."
    },
    {
      "name": "OCR",
      "description": "Endpoints for optical character recognition on product labels."
    },
    {
      "name": "Suggestions",
      "description": "Endpoints for getting suggestions to aid in product editing."
    },
    {
      "name": "Nutrients",
      "description": "Endpoints for retrieving nutrition-related data and facts."
    },
    {
      "name": "Personal Search",
      "description": "Endpoints for personalized search and recommendations."
    },
    {
      "name": "Authentication",
      "description": "Endpoints for user authentication and session management."
    }
  ]
}