{
  "openapi": "3.0.3",
  "info": {
    "title": "Open Food Facts open-prices REST API",
    "version": "0.0.0 (api)",
    "description": "Open Prices API allows you to add product prices",
    "contact": {
      "name": "The Open Food Facts team",
      "url": "https://world.openfoodfacts.org",
      "email": "contact@openfoodfacts.org"
    },
    "license": {
      "name": " AGPL-3.0",
      "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
    }
  },
  "paths": {
    "/api/schema": {
      "get": {
        "operationId": "api_schema_retrieve",
        "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "yaml"
              ]
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string",
              "enum": [
                "af",
                "ar",
                "ar-dz",
                "ast",
                "az",
                "be",
                "bg",
                "bn",
                "br",
                "bs",
                "ca",
                "ckb",
                "cs",
                "cy",
                "da",
                "de",
                "dsb",
                "el",
                "en",
                "en-au",
                "en-gb",
                "eo",
                "es",
                "es-ar",
                "es-co",
                "es-mx",
                "es-ni",
                "es-ve",
                "et",
                "eu",
                "fa",
                "fi",
                "fr",
                "fy",
                "ga",
                "gd",
                "gl",
                "he",
                "hi",
                "hr",
                "hsb",
                "hu",
                "hy",
                "ia",
                "id",
                "ig",
                "io",
                "is",
                "it",
                "ja",
                "ka",
                "kab",
                "kk",
                "km",
                "kn",
                "ko",
                "ky",
                "lb",
                "lt",
                "lv",
                "mk",
                "ml",
                "mn",
                "mr",
                "ms",
                "my",
                "nb",
                "ne",
                "nl",
                "nn",
                "os",
                "pa",
                "pl",
                "pt",
                "pt-br",
                "ro",
                "ru",
                "sk",
                "sl",
                "sq",
                "sr",
                "sr-latn",
                "sv",
                "sw",
                "ta",
                "te",
                "tg",
                "th",
                "tk",
                "tr",
                "tt",
                "udm",
                "ug",
                "uk",
                "ur",
                "uz",
                "vi",
                "zh-hans",
                "zh-hant"
              ]
            }
          }
        ],
        "tags": [
          "api"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.oai.openapi": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/vnd.oai.openapi+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth": {
      "post": {
        "operationId": "auth_create",
        "description": "Authentication: provide username/password\nand get a bearer token in return.\n\n- **username**: Open Food Facts user_id (not email)\n- **password**: user password (clear text, but HTTPS encrypted)\n\nA **token** is returned. If the **set_cookie** parameter is set to 1,\nthe token is also set as a cookie named \"session\" in the response.\n\nTo authenticate, you can either:\n- use the **Authorization** header with the **Bearer** scheme,\ne.g.: \"Authorization: bearer token\"\n- use the **session** cookie, e.g.: \"Cookie: session=token\"",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/challenges": {
      "get": {
        "operationId": "challenges_list",
        "parameters": [
          {
            "in": "query",
            "name": "end_date__gt",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "end_date__gte",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "end_date__lt",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "end_date__lte",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "end_date__month",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "end_date__year",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "is_published",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "start_date__gt",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "start_date__gte",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "start_date__lt",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "start_date__lte",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "start_date__month",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "start_date__year",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "COMPLETED",
                "DRAFT",
                "ONGOING",
                "UPCOMING"
              ]
            },
            "description": "* `DRAFT` - DRAFT\n* `UPCOMING` - UPCOMING\n* `ONGOING` - ONGOING\n* `COMPLETED` - COMPLETED"
          }
        ],
        "tags": [
          "challenges"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChallengeList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/challenges/{id}": {
      "get": {
        "operationId": "challenges_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Challenge.",
            "required": true
          }
        ],
        "tags": [
          "challenges"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/locations": {
      "get": {
        "operationId": "locations_list",
        "parameters": [
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "osm_address_city__like",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "osm_address_country__like",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "osm_name__like",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count__gte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count__lte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "ONLINE",
                "OSM"
              ]
            },
            "description": "* `OSM` - OSM\n* `ONLINE` - ONLINE"
          }
        ],
        "tags": [
          "locations"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedLocationList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "locations_create",
        "tags": [
          "locations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationCreate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/locations/{id}": {
      "get": {
        "operationId": "locations_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Location.",
            "required": true
          }
        ],
        "tags": [
          "locations"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/locations/osm/{osm_type}/{osm_id}": {
      "get": {
        "operationId": "locations_osm_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "osm_id",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "osm_type",
            "schema": {
              "type": "string",
              "pattern": "^\\w+$"
            },
            "required": true
          }
        ],
        "tags": [
          "locations"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/price-tags": {
      "get": {
        "operationId": "price_tags_list",
        "parameters": [
          {
            "in": "query",
            "name": "created__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "created__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "prediction_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "prediction_count__gte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "prediction_count__lte",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "proof__owner",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "proof__ready_for_price_tag_validation",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "proof_id",
            "schema": {
              "type": "integer"
            },
            "description": "The proof this price tag belongs to"
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "integer",
              "nullable": true,
              "enum": [
                0,
                1,
                10,
                2,
                3,
                4,
                5
              ]
            },
            "description": "The annotation status\n\n* `0` - deleted\n* `1` - linked_to_price\n* `2` - not_readable\n* `3` - truncated\n* `4` - not_price_tag\n* `5` - no_barcode\n* `10` - other"
          },
          {
            "in": "query",
            "name": "status__isnull",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "tags__contains",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "price-tags"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPriceTagFullList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "price_tags_create",
        "tags": [
          "price-tags"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceTagCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PriceTagCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PriceTagCreate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceTagCreate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/price-tags/{id}": {
      "get": {
        "operationId": "price_tags_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Price Tag.",
            "required": true
          }
        ],
        "tags": [
          "price-tags"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceTagFull"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "price_tags_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Price Tag.",
            "required": true
          }
        ],
        "tags": [
          "price-tags"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPriceTagUpdate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPriceTagUpdate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPriceTagUpdate"
              }
            }
          }
        },
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceTagUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "price_tags_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Price Tag.",
            "required": true
          }
        ],
        "tags": [
          "price-tags"
        ],
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/prices": {
      "get": {
        "operationId": "prices_list",
        "parameters": [
          {
            "in": "query",
            "name": "category_tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "created__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "currency",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "ADP",
                "AED",
                "AFA",
                "AFN",
                "ALK",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "AOK",
                "AON",
                "AOR",
                "ARA",
                "ARL",
                "ARM",
                "ARP",
                "ARS",
                "ATS",
                "AUD",
                "AWG",
                "AZM",
                "AZN",
                "BAD",
                "BAM",
                "BAN",
                "BBD",
                "BDT",
                "BEC",
                "BEF",
                "BEL",
                "BGL",
                "BGM",
                "BGN",
                "BGO",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BOL",
                "BOP",
                "BOV",
                "BRB",
                "BRC",
                "BRE",
                "BRL",
                "BRN",
                "BRR",
                "BRZ",
                "BSD",
                "BTN",
                "BUK",
                "BWP",
                "BYB",
                "BYN",
                "BYR",
                "BZD",
                "CAD",
                "CDF",
                "CHE",
                "CHF",
                "CHW",
                "CLE",
                "CLF",
                "CLP",
                "CNH",
                "CNX",
                "CNY",
                "COP",
                "COU",
                "CRC",
                "CSD",
                "CSK",
                "CUC",
                "CUP",
                "CVE",
                "CYP",
                "CZK",
                "DDM",
                "DEM",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "ECS",
                "ECV",
                "EEK",
                "EGP",
                "ERN",
                "ESA",
                "ESB",
                "ESP",
                "ETB",
                "EUR",
                "FIM",
                "FJD",
                "FKP",
                "FRF",
                "GBP",
                "GEK",
                "GEL",
                "GHC",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GNS",
                "GQE",
                "GRD",
                "GTQ",
                "GWE",
                "GWP",
                "GYD",
                "HKD",
                "HNL",
                "HRD",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "IEP",
                "ILP",
                "ILR",
                "ILS",
                "INR",
                "IQD",
                "IRR",
                "ISJ",
                "ISK",
                "ITL",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRH",
                "KRO",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LTL",
                "LTT",
                "LUC",
                "LUF",
                "LUL",
                "LVL",
                "LVR",
                "LYD",
                "MAD",
                "MAF",
                "MCF",
                "MDC",
                "MDL",
                "MGA",
                "MGF",
                "MKD",
                "MKN",
                "MLF",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MRU",
                "MTL",
                "MTP",
                "MUR",
                "MVP",
                "MVR",
                "MWK",
                "MXN",
                "MXP",
                "MXV",
                "MYR",
                "MZE",
                "MZM",
                "MZN",
                "NAD",
                "NGN",
                "NIC",
                "NIO",
                "NLG",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEI",
                "PEN",
                "PES",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PLZ",
                "PTE",
                "PYG",
                "QAR",
                "RHD",
                "ROL",
                "RON",
                "RSD",
                "RUB",
                "RUR",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDD",
                "SDG",
                "SDP",
                "SEK",
                "SGD",
                "SHP",
                "SIT",
                "SKK",
                "SLE",
                "SLL",
                "SOS",
                "SRD",
                "SRG",
                "SSP",
                "STD",
                "STN",
                "SUR",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJR",
                "TJS",
                "TMM",
                "TMT",
                "TND",
                "TOP",
                "TPE",
                "TRL",
                "TRY",
                "TTD",
                "TWD",
                "TZS",
                "UAH",
                "UAK",
                "UGS",
                "UGX",
                "USD",
                "USN",
                "USS",
                "UYI",
                "UYP",
                "UYU",
                "UYW",
                "UZS",
                "VEB",
                "VED",
                "VEF",
                "VES",
                "VND",
                "VNN",
                "VUV",
                "WST",
                "XAF",
                "XAG",
                "XAU",
                "XBA",
                "XBB",
                "XBC",
                "XBD",
                "XCD",
                "XDR",
                "XEU",
                "XFO",
                "XFU",
                "XOF",
                "XPD",
                "XPF",
                "XPT",
                "XRE",
                "XSU",
                "XTS",
                "XUA",
                "XXX",
                "YDD",
                "YER",
                "YUD",
                "YUM",
                "YUN",
                "YUR",
                "ZAL",
                "ZAR",
                "ZMK",
                "ZMW",
                "ZRN",
                "ZRZ",
                "ZWD",
                "ZWL",
                "ZWR"
              ]
            },
            "description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR"
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__gt",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__gte",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__lt",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__lte",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__month",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "date__year",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "discount_type",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "EXPIRES_SOON",
                "LOYALTY_PROGRAM",
                "OTHER",
                "PICK_IT_YOURSELF",
                "QUANTITY",
                "SALE",
                "SEASONAL",
                "SECOND_HAND"
              ]
            },
            "description": "* `QUANTITY` - QUANTITY\n* `SALE` - SALE\n* `SEASONAL` - SEASONAL\n* `LOYALTY_PROGRAM` - LOYALTY_PROGRAM\n* `EXPIRES_SOON` - EXPIRES_SOON\n* `PICK_IT_YOURSELF` - PICK_IT_YOURSELF\n* `SECOND_HAND` - SECOND_HAND\n* `OTHER` - OTHER"
          },
          {
            "in": "query",
            "name": "kind",
            "schema": {
              "type": "string",
              "enum": [
                "COMMUNITY",
                "CONSUMPTION"
              ]
            },
            "description": "* `COMMUNITY` - COMMUNITY\n* `CONSUMPTION` - CONSUMPTION"
          },
          {
            "in": "query",
            "name": "labels_tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "location__osm_name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "location_id",
            "schema": {
              "type": "integer",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "location_id__isnull",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "location_osm_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "location_osm_type",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "NODE",
                "RELATION",
                "WAY"
              ]
            },
            "description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION"
          },
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "origins_tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "price__gt",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "price__gte",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "price__lt",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "price__lte",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "price_is_discounted",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "product__categories_tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product__categories_tags__overlap",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "Provide multiple values as separate query parameters. Example: ?product__categories_tags__overlap=en:breakfasts&product__categories_tags__overlap=en:apples",
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "product_code",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "integer",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "product_id__isnull",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "product_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "proof__type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "GDPR_REQUEST",
                  "PRICE_TAG",
                  "RECEIPT",
                  "SHOP_IMPORT"
                ]
              }
            },
            "description": "* `PRICE_TAG` - PRICE_TAG\n* `RECEIPT` - RECEIPT\n* `GDPR_REQUEST` - GDPR_REQUEST\n* `SHOP_IMPORT` - SHOP_IMPORT",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "proof_id",
            "schema": {
              "type": "integer",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "proof_id__isnull",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "CATEGORY",
                "PRODUCT"
              ]
            },
            "description": "* `PRODUCT` - PRODUCT\n* `CATEGORY` - CATEGORY"
          }
        ],
        "tags": [
          "prices"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPriceFullList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "prices_create",
        "tags": [
          "prices"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PriceCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PriceCreate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceCreate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/prices/{id}": {
      "get": {
        "operationId": "prices_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Price.",
            "required": true
          }
        ],
        "tags": [
          "prices"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceFull"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "prices_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Price.",
            "required": true
          }
        ],
        "tags": [
          "prices"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPriceUpdate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPriceUpdate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPriceUpdate"
              }
            }
          }
        },
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "prices_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Price.",
            "required": true
          }
        ],
        "tags": [
          "prices"
        ],
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/prices/stats": {
      "get": {
        "operationId": "prices_stats_retrieve",
        "parameters": [
          {
            "in": "query",
            "name": "category_tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "created__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "currency",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "ADP",
                "AED",
                "AFA",
                "AFN",
                "ALK",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "AOK",
                "AON",
                "AOR",
                "ARA",
                "ARL",
                "ARM",
                "ARP",
                "ARS",
                "ATS",
                "AUD",
                "AWG",
                "AZM",
                "AZN",
                "BAD",
                "BAM",
                "BAN",
                "BBD",
                "BDT",
                "BEC",
                "BEF",
                "BEL",
                "BGL",
                "BGM",
                "BGN",
                "BGO",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BOL",
                "BOP",
                "BOV",
                "BRB",
                "BRC",
                "BRE",
                "BRL",
                "BRN",
                "BRR",
                "BRZ",
                "BSD",
                "BTN",
                "BUK",
                "BWP",
                "BYB",
                "BYN",
                "BYR",
                "BZD",
                "CAD",
                "CDF",
                "CHE",
                "CHF",
                "CHW",
                "CLE",
                "CLF",
                "CLP",
                "CNH",
                "CNX",
                "CNY",
                "COP",
                "COU",
                "CRC",
                "CSD",
                "CSK",
                "CUC",
                "CUP",
                "CVE",
                "CYP",
                "CZK",
                "DDM",
                "DEM",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "ECS",
                "ECV",
                "EEK",
                "EGP",
                "ERN",
                "ESA",
                "ESB",
                "ESP",
                "ETB",
                "EUR",
                "FIM",
                "FJD",
                "FKP",
                "FRF",
                "GBP",
                "GEK",
                "GEL",
                "GHC",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GNS",
                "GQE",
                "GRD",
                "GTQ",
                "GWE",
                "GWP",
                "GYD",
                "HKD",
                "HNL",
                "HRD",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "IEP",
                "ILP",
                "ILR",
                "ILS",
                "INR",
                "IQD",
                "IRR",
                "ISJ",
                "ISK",
                "ITL",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRH",
                "KRO",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LTL",
                "LTT",
                "LUC",
                "LUF",
                "LUL",
                "LVL",
                "LVR",
                "LYD",
                "MAD",
                "MAF",
                "MCF",
                "MDC",
                "MDL",
                "MGA",
                "MGF",
                "MKD",
                "MKN",
                "MLF",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MRU",
                "MTL",
                "MTP",
                "MUR",
                "MVP",
                "MVR",
                "MWK",
                "MXN",
                "MXP",
                "MXV",
                "MYR",
                "MZE",
                "MZM",
                "MZN",
                "NAD",
                "NGN",
                "NIC",
                "NIO",
                "NLG",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEI",
                "PEN",
                "PES",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PLZ",
                "PTE",
                "PYG",
                "QAR",
                "RHD",
                "ROL",
                "RON",
                "RSD",
                "RUB",
                "RUR",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDD",
                "SDG",
                "SDP",
                "SEK",
                "SGD",
                "SHP",
                "SIT",
                "SKK",
                "SLE",
                "SLL",
                "SOS",
                "SRD",
                "SRG",
                "SSP",
                "STD",
                "STN",
                "SUR",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJR",
                "TJS",
                "TMM",
                "TMT",
                "TND",
                "TOP",
                "TPE",
                "TRL",
                "TRY",
                "TTD",
                "TWD",
                "TZS",
                "UAH",
                "UAK",
                "UGS",
                "UGX",
                "USD",
                "USN",
                "USS",
                "UYI",
                "UYP",
                "UYU",
                "UYW",
                "UZS",
                "VEB",
                "VED",
                "VEF",
                "VES",
                "VND",
                "VNN",
                "VUV",
                "WST",
                "XAF",
                "XAG",
                "XAU",
                "XBA",
                "XBB",
                "XBC",
                "XBD",
                "XCD",
                "XDR",
                "XEU",
                "XFO",
                "XFU",
                "XOF",
                "XPD",
                "XPF",
                "XPT",
                "XRE",
                "XSU",
                "XTS",
                "XUA",
                "XXX",
                "YDD",
                "YER",
                "YUD",
                "YUM",
                "YUN",
                "YUR",
                "ZAL",
                "ZAR",
                "ZMK",
                "ZMW",
                "ZRN",
                "ZRZ",
                "ZWD",
                "ZWL",
                "ZWR"
              ]
            },
            "description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR"
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__gt",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__gte",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__lt",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__lte",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__month",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "date__year",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "discount_type",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "EXPIRES_SOON",
                "LOYALTY_PROGRAM",
                "OTHER",
                "PICK_IT_YOURSELF",
                "QUANTITY",
                "SALE",
                "SEASONAL",
                "SECOND_HAND"
              ]
            },
            "description": "* `QUANTITY` - QUANTITY\n* `SALE` - SALE\n* `SEASONAL` - SEASONAL\n* `LOYALTY_PROGRAM` - LOYALTY_PROGRAM\n* `EXPIRES_SOON` - EXPIRES_SOON\n* `PICK_IT_YOURSELF` - PICK_IT_YOURSELF\n* `SECOND_HAND` - SECOND_HAND\n* `OTHER` - OTHER"
          },
          {
            "in": "query",
            "name": "kind",
            "schema": {
              "type": "string",
              "enum": [
                "COMMUNITY",
                "CONSUMPTION"
              ]
            },
            "description": "* `COMMUNITY` - COMMUNITY\n* `CONSUMPTION` - CONSUMPTION"
          },
          {
            "in": "query",
            "name": "labels_tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "location__osm_name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "location_id",
            "schema": {
              "type": "integer",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "location_id__isnull",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "location_osm_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "location_osm_type",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "NODE",
                "RELATION",
                "WAY"
              ]
            },
            "description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION"
          },
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "origins_tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "price",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "price__gt",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "price__gte",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "price__lt",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "price__lte",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "price_is_discounted",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "product__categories_tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product__categories_tags__overlap",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "description": "Provide multiple values as separate query parameters. Example: ?product__categories_tags__overlap=en:breakfasts&product__categories_tags__overlap=en:apples",
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "product_code",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "integer",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "product_id__isnull",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "product_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "proof__type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "GDPR_REQUEST",
                  "PRICE_TAG",
                  "RECEIPT",
                  "SHOP_IMPORT"
                ]
              }
            },
            "description": "* `PRICE_TAG` - PRICE_TAG\n* `RECEIPT` - RECEIPT\n* `GDPR_REQUEST` - GDPR_REQUEST\n* `SHOP_IMPORT` - SHOP_IMPORT",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "proof_id",
            "schema": {
              "type": "integer",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "proof_id__isnull",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "CATEGORY",
                "PRODUCT"
              ]
            },
            "description": "* `PRODUCT` - PRODUCT\n* `CATEGORY` - CATEGORY"
          }
        ],
        "tags": [
          "prices"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceStats"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/products": {
      "get": {
        "operationId": "products_list",
        "parameters": [
          {
            "in": "query",
            "name": "brands__like",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "brands_tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "categories_tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ecoscore_grade",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "labels_tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nova_group",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "nutriscore_grade",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count__gte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count__lte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "product_name__like",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "source",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "obf",
                "off",
                "opf",
                "opff"
              ]
            },
            "description": "* `off` - off\n* `obf` - obf\n* `opff` - opff\n* `opf` - opf"
          },
          {
            "in": "query",
            "name": "unique_scans_n__gte",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "products"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedProductFullList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "operationId": "products_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Product.",
            "required": true
          }
        ],
        "tags": [
          "products"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFull"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/products/code/{code}": {
      "get": {
        "operationId": "products_code_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "products"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFull"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/proofs": {
      "get": {
        "operationId": "proofs_list",
        "parameters": [
          {
            "in": "query",
            "name": "created__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "created__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "currency",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "ADP",
                "AED",
                "AFA",
                "AFN",
                "ALK",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "AOK",
                "AON",
                "AOR",
                "ARA",
                "ARL",
                "ARM",
                "ARP",
                "ARS",
                "ATS",
                "AUD",
                "AWG",
                "AZM",
                "AZN",
                "BAD",
                "BAM",
                "BAN",
                "BBD",
                "BDT",
                "BEC",
                "BEF",
                "BEL",
                "BGL",
                "BGM",
                "BGN",
                "BGO",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BOL",
                "BOP",
                "BOV",
                "BRB",
                "BRC",
                "BRE",
                "BRL",
                "BRN",
                "BRR",
                "BRZ",
                "BSD",
                "BTN",
                "BUK",
                "BWP",
                "BYB",
                "BYN",
                "BYR",
                "BZD",
                "CAD",
                "CDF",
                "CHE",
                "CHF",
                "CHW",
                "CLE",
                "CLF",
                "CLP",
                "CNH",
                "CNX",
                "CNY",
                "COP",
                "COU",
                "CRC",
                "CSD",
                "CSK",
                "CUC",
                "CUP",
                "CVE",
                "CYP",
                "CZK",
                "DDM",
                "DEM",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "ECS",
                "ECV",
                "EEK",
                "EGP",
                "ERN",
                "ESA",
                "ESB",
                "ESP",
                "ETB",
                "EUR",
                "FIM",
                "FJD",
                "FKP",
                "FRF",
                "GBP",
                "GEK",
                "GEL",
                "GHC",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GNS",
                "GQE",
                "GRD",
                "GTQ",
                "GWE",
                "GWP",
                "GYD",
                "HKD",
                "HNL",
                "HRD",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "IEP",
                "ILP",
                "ILR",
                "ILS",
                "INR",
                "IQD",
                "IRR",
                "ISJ",
                "ISK",
                "ITL",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRH",
                "KRO",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LTL",
                "LTT",
                "LUC",
                "LUF",
                "LUL",
                "LVL",
                "LVR",
                "LYD",
                "MAD",
                "MAF",
                "MCF",
                "MDC",
                "MDL",
                "MGA",
                "MGF",
                "MKD",
                "MKN",
                "MLF",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MRU",
                "MTL",
                "MTP",
                "MUR",
                "MVP",
                "MVR",
                "MWK",
                "MXN",
                "MXP",
                "MXV",
                "MYR",
                "MZE",
                "MZM",
                "MZN",
                "NAD",
                "NGN",
                "NIC",
                "NIO",
                "NLG",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEI",
                "PEN",
                "PES",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PLZ",
                "PTE",
                "PYG",
                "QAR",
                "RHD",
                "ROL",
                "RON",
                "RSD",
                "RUB",
                "RUR",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDD",
                "SDG",
                "SDP",
                "SEK",
                "SGD",
                "SHP",
                "SIT",
                "SKK",
                "SLE",
                "SLL",
                "SOS",
                "SRD",
                "SRG",
                "SSP",
                "STD",
                "STN",
                "SUR",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJR",
                "TJS",
                "TMM",
                "TMT",
                "TND",
                "TOP",
                "TPE",
                "TRL",
                "TRY",
                "TTD",
                "TWD",
                "TZS",
                "UAH",
                "UAK",
                "UGS",
                "UGX",
                "USD",
                "USN",
                "USS",
                "UYI",
                "UYP",
                "UYU",
                "UYW",
                "UZS",
                "VEB",
                "VED",
                "VEF",
                "VES",
                "VND",
                "VNN",
                "VUV",
                "WST",
                "XAF",
                "XAG",
                "XAU",
                "XBA",
                "XBB",
                "XBC",
                "XBD",
                "XCD",
                "XDR",
                "XEU",
                "XFO",
                "XFU",
                "XOF",
                "XPD",
                "XPF",
                "XPT",
                "XRE",
                "XSU",
                "XTS",
                "XUA",
                "XXX",
                "YDD",
                "YER",
                "YUD",
                "YUM",
                "YUN",
                "YUR",
                "ZAL",
                "ZAR",
                "ZMK",
                "ZMW",
                "ZRN",
                "ZRZ",
                "ZWD",
                "ZWL",
                "ZWR"
              ]
            },
            "description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR"
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__gt",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__gte",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__lt",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__lte",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "date__month",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "date__year",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "image_md5_hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "kind",
            "schema": {
              "type": "string",
              "enum": [
                "COMMUNITY",
                "CONSUMPTION"
              ]
            },
            "description": "* `COMMUNITY` - COMMUNITY\n* `CONSUMPTION` - CONSUMPTION"
          },
          {
            "in": "query",
            "name": "location_id",
            "schema": {
              "type": "integer",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "location_id__isnull",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "location_osm_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "location_osm_type",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "NODE",
                "RELATION",
                "WAY"
              ]
            },
            "description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION"
          },
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "prediction_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "prediction_count__gte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "prediction_count__lte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count__gte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count__lte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "ready_for_price_tag_validation",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "tags__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "GDPR_REQUEST",
                  "PRICE_TAG",
                  "RECEIPT",
                  "SHOP_IMPORT"
                ]
              }
            },
            "description": "* `PRICE_TAG` - PRICE_TAG\n* `RECEIPT` - RECEIPT\n* `GDPR_REQUEST` - GDPR_REQUEST\n* `SHOP_IMPORT` - SHOP_IMPORT",
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "proofs"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedProofHalfFullList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/proofs/{id}": {
      "get": {
        "operationId": "proofs_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Proof.",
            "required": true
          }
        ],
        "tags": [
          "proofs"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofFull"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "proofs_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Proof.",
            "required": true
          }
        ],
        "tags": [
          "proofs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedProofUpdate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedProofUpdate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedProofUpdate"
              }
            }
          }
        },
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "proofs_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Proof.",
            "required": true
          }
        ],
        "tags": [
          "proofs"
        ],
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/proofs/process-with-gemini": {
      "post": {
        "operationId": "proofs_process_with_gemini_create",
        "tags": [
          "proofs"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProofProcessWithGemini"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofFull"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/proofs/upload": {
      "post": {
        "operationId": "proofs_upload_create",
        "tags": [
          "proofs"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProofUpload"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofFull"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/receipt-items": {
      "get": {
        "operationId": "receipt_items_list",
        "parameters": [
          {
            "in": "query",
            "name": "created__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "created__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "proof__owner",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "proof_id",
            "schema": {
              "type": "integer"
            },
            "description": "The proof this receipt item belongs to"
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "nullable": true,
              "enum": [
                0,
                1
              ]
            },
            "description": "The current status of the item\n\n* `0` - deleted\n* `1` - linked_to_price"
          },
          {
            "in": "query",
            "name": "status__isnull",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "receipt-items"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedReceiptItemFullList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "receipt_items_create",
        "tags": [
          "receipt-items"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceiptItemFull"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ReceiptItemFull"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ReceiptItemFull"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptItemFull"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/receipt-items/{id}": {
      "get": {
        "operationId": "receipt_items_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Receipt Item.",
            "required": true
          }
        ],
        "tags": [
          "receipt-items"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptItemFull"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "receipt_items_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Receipt Item.",
            "required": true
          }
        ],
        "tags": [
          "receipt-items"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReceiptItemFull"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReceiptItemFull"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReceiptItemFull"
              }
            }
          }
        },
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptItemFull"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "receipt_items_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this Receipt Item.",
            "required": true
          }
        ],
        "tags": [
          "receipt-items"
        ],
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/session": {
      "get": {
        "operationId": "session_retrieve",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionFull"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "session_destroy",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "CustomAuthentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/stats": {
      "get": {
        "operationId": "stats_retrieve",
        "tags": [
          "stats"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotalStats"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/status": {
      "get": {
        "operationId": "status_retrieve",
        "tags": [
          "status"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "operationId": "users_list",
        "parameters": [
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count__gte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "price_count__lte",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "operationId": "users_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this User.",
            "required": true
          }
        ],
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BlankEnum": {
        "enum": [
          ""
        ]
      },
      "Challenge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "readOnly": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "tag": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "maxLength": 20
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "example_proof_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "is_published": {
            "type": "boolean"
          },
          "stats": {
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "locations",
          "status",
          "tag",
          "updated"
        ]
      },
      "CurrencyEnum": {
        "enum": [
          "ADP",
          "AED",
          "AFA",
          "AFN",
          "ALK",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "AOK",
          "AON",
          "AOR",
          "ARA",
          "ARL",
          "ARM",
          "ARP",
          "ARS",
          "ATS",
          "AUD",
          "AWG",
          "AZM",
          "AZN",
          "BAD",
          "BAM",
          "BAN",
          "BBD",
          "BDT",
          "BEC",
          "BEF",
          "BEL",
          "BGL",
          "BGM",
          "BGN",
          "BGO",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOL",
          "BOP",
          "BOV",
          "BRB",
          "BRC",
          "BRE",
          "BRL",
          "BRN",
          "BRR",
          "BRZ",
          "BSD",
          "BTN",
          "BUK",
          "BWP",
          "BYB",
          "BYN",
          "BYR",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLE",
          "CLF",
          "CLP",
          "CNH",
          "CNX",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CSD",
          "CSK",
          "CUC",
          "CUP",
          "CVE",
          "CYP",
          "CZK",
          "DDM",
          "DEM",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "ECS",
          "ECV",
          "EEK",
          "EGP",
          "ERN",
          "ESA",
          "ESB",
          "ESP",
          "ETB",
          "EUR",
          "FIM",
          "FJD",
          "FKP",
          "FRF",
          "GBP",
          "GEK",
          "GEL",
          "GHC",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GNS",
          "GQE",
          "GRD",
          "GTQ",
          "GWE",
          "GWP",
          "GYD",
          "HKD",
          "HNL",
          "HRD",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "IEP",
          "ILP",
          "ILR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISJ",
          "ISK",
          "ITL",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRH",
          "KRO",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LTL",
          "LTT",
          "LUC",
          "LUF",
          "LUL",
          "LVL",
          "LVR",
          "LYD",
          "MAD",
          "MAF",
          "MCF",
          "MDC",
          "MDL",
          "MGA",
          "MGF",
          "MKD",
          "MKN",
          "MLF",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MRU",
          "MTL",
          "MTP",
          "MUR",
          "MVP",
          "MVR",
          "MWK",
          "MXN",
          "MXP",
          "MXV",
          "MYR",
          "MZE",
          "MZM",
          "MZN",
          "NAD",
          "NGN",
          "NIC",
          "NIO",
          "NLG",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEI",
          "PEN",
          "PES",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PLZ",
          "PTE",
          "PYG",
          "QAR",
          "RHD",
          "ROL",
          "RON",
          "RSD",
          "RUB",
          "RUR",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDD",
          "SDG",
          "SDP",
          "SEK",
          "SGD",
          "SHP",
          "SIT",
          "SKK",
          "SLE",
          "SLL",
          "SOS",
          "SRD",
          "SRG",
          "SSP",
          "STD",
          "STN",
          "SUR",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJR",
          "TJS",
          "TMM",
          "TMT",
          "TND",
          "TOP",
          "TPE",
          "TRL",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UAK",
          "UGS",
          "UGX",
          "USD",
          "USN",
          "USS",
          "UYI",
          "UYP",
          "UYU",
          "UYW",
          "UZS",
          "VEB",
          "VED",
          "VEF",
          "VES",
          "VND",
          "VNN",
          "VUV",
          "WST",
          "XAF",
          "XAG",
          "XAU",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XCD",
          "XDR",
          "XEU",
          "XFO",
          "XFU",
          "XOF",
          "XPD",
          "XPF",
          "XPT",
          "XRE",
          "XSU",
          "XTS",
          "XUA",
          "XXX",
          "YDD",
          "YER",
          "YUD",
          "YUM",
          "YUN",
          "YUR",
          "ZAL",
          "ZAR",
          "ZMK",
          "ZMW",
          "ZRN",
          "ZRZ",
          "ZWD",
          "ZWL",
          "ZWR"
        ],
        "type": "string",
        "description": "* `ADP` - ADP\n* `AED` - AED\n* `AFA` - AFA\n* `AFN` - AFN\n* `ALK` - ALK\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `AOK` - AOK\n* `AON` - AON\n* `AOR` - AOR\n* `ARA` - ARA\n* `ARL` - ARL\n* `ARM` - ARM\n* `ARP` - ARP\n* `ARS` - ARS\n* `ATS` - ATS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZM` - AZM\n* `AZN` - AZN\n* `BAD` - BAD\n* `BAM` - BAM\n* `BAN` - BAN\n* `BBD` - BBD\n* `BDT` - BDT\n* `BEC` - BEC\n* `BEF` - BEF\n* `BEL` - BEL\n* `BGL` - BGL\n* `BGM` - BGM\n* `BGN` - BGN\n* `BGO` - BGO\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BOL` - BOL\n* `BOP` - BOP\n* `BOV` - BOV\n* `BRB` - BRB\n* `BRC` - BRC\n* `BRE` - BRE\n* `BRL` - BRL\n* `BRN` - BRN\n* `BRR` - BRR\n* `BRZ` - BRZ\n* `BSD` - BSD\n* `BTN` - BTN\n* `BUK` - BUK\n* `BWP` - BWP\n* `BYB` - BYB\n* `BYN` - BYN\n* `BYR` - BYR\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHE` - CHE\n* `CHF` - CHF\n* `CHW` - CHW\n* `CLE` - CLE\n* `CLF` - CLF\n* `CLP` - CLP\n* `CNH` - CNH\n* `CNX` - CNX\n* `CNY` - CNY\n* `COP` - COP\n* `COU` - COU\n* `CRC` - CRC\n* `CSD` - CSD\n* `CSK` - CSK\n* `CUC` - CUC\n* `CUP` - CUP\n* `CVE` - CVE\n* `CYP` - CYP\n* `CZK` - CZK\n* `DDM` - DDM\n* `DEM` - DEM\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `ECS` - ECS\n* `ECV` - ECV\n* `EEK` - EEK\n* `EGP` - EGP\n* `ERN` - ERN\n* `ESA` - ESA\n* `ESB` - ESB\n* `ESP` - ESP\n* `ETB` - ETB\n* `EUR` - EUR\n* `FIM` - FIM\n* `FJD` - FJD\n* `FKP` - FKP\n* `FRF` - FRF\n* `GBP` - GBP\n* `GEK` - GEK\n* `GEL` - GEL\n* `GHC` - GHC\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GNS` - GNS\n* `GQE` - GQE\n* `GRD` - GRD\n* `GTQ` - GTQ\n* `GWE` - GWE\n* `GWP` - GWP\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRD` - HRD\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `IEP` - IEP\n* `ILP` - ILP\n* `ILR` - ILR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISJ` - ISJ\n* `ISK` - ISK\n* `ITL` - ITL\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KPW` - KPW\n* `KRH` - KRH\n* `KRO` - KRO\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LSL` - LSL\n* `LTL` - LTL\n* `LTT` - LTT\n* `LUC` - LUC\n* `LUF` - LUF\n* `LUL` - LUL\n* `LVL` - LVL\n* `LVR` - LVR\n* `LYD` - LYD\n* `MAD` - MAD\n* `MAF` - MAF\n* `MCF` - MCF\n* `MDC` - MDC\n* `MDL` - MDL\n* `MGA` - MGA\n* `MGF` - MGF\n* `MKD` - MKD\n* `MKN` - MKN\n* `MLF` - MLF\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRO` - MRO\n* `MRU` - MRU\n* `MTL` - MTL\n* `MTP` - MTP\n* `MUR` - MUR\n* `MVP` - MVP\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MXP` - MXP\n* `MXV` - MXV\n* `MYR` - MYR\n* `MZE` - MZE\n* `MZM` - MZM\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIC` - NIC\n* `NIO` - NIO\n* `NLG` - NLG\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEI` - PEI\n* `PEN` - PEN\n* `PES` - PES\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PLZ` - PLZ\n* `PTE` - PTE\n* `PYG` - PYG\n* `QAR` - QAR\n* `RHD` - RHD\n* `ROL` - ROL\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RUR` - RUR\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDD` - SDD\n* `SDG` - SDG\n* `SDP` - SDP\n* `SEK` - SEK\n* `SGD` - SGD\n* `SHP` - SHP\n* `SIT` - SIT\n* `SKK` - SKK\n* `SLE` - SLE\n* `SLL` - SLL\n* `SOS` - SOS\n* `SRD` - SRD\n* `SRG` - SRG\n* `SSP` - SSP\n* `STD` - STD\n* `STN` - STN\n* `SUR` - SUR\n* `SVC` - SVC\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJR` - TJR\n* `TJS` - TJS\n* `TMM` - TMM\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TPE` - TPE\n* `TRL` - TRL\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UAK` - UAK\n* `UGS` - UGS\n* `UGX` - UGX\n* `USD` - USD\n* `USN` - USN\n* `USS` - USS\n* `UYI` - UYI\n* `UYP` - UYP\n* `UYU` - UYU\n* `UYW` - UYW\n* `UZS` - UZS\n* `VEB` - VEB\n* `VED` - VED\n* `VEF` - VEF\n* `VES` - VES\n* `VND` - VND\n* `VNN` - VNN\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XAG` - XAG\n* `XAU` - XAU\n* `XBA` - XBA\n* `XBB` - XBB\n* `XBC` - XBC\n* `XBD` - XBD\n* `XCD` - XCD\n* `XDR` - XDR\n* `XEU` - XEU\n* `XFO` - XFO\n* `XFU` - XFU\n* `XOF` - XOF\n* `XPD` - XPD\n* `XPF` - XPF\n* `XPT` - XPT\n* `XRE` - XRE\n* `XSU` - XSU\n* `XTS` - XTS\n* `XUA` - XUA\n* `XXX` - XXX\n* `YDD` - YDD\n* `YER` - YER\n* `YUD` - YUD\n* `YUM` - YUM\n* `YUN` - YUN\n* `YUR` - YUR\n* `ZAL` - ZAL\n* `ZAR` - ZAR\n* `ZMK` - ZMK\n* `ZMW` - ZMW\n* `ZRN` - ZRN\n* `ZRZ` - ZRZ\n* `ZWD` - ZWD\n* `ZWL` - ZWL\n* `ZWR` - ZWR"
      },
      "DiscountTypeEnum": {
        "enum": [
          "QUANTITY",
          "SALE",
          "SEASONAL",
          "LOYALTY_PROGRAM",
          "EXPIRES_SOON",
          "PICK_IT_YOURSELF",
          "SECOND_HAND",
          "OTHER"
        ],
        "type": "string",
        "description": "* `QUANTITY` - QUANTITY\n* `SALE` - SALE\n* `SEASONAL` - SEASONAL\n* `LOYALTY_PROGRAM` - LOYALTY_PROGRAM\n* `EXPIRES_SOON` - EXPIRES_SOON\n* `PICK_IT_YOURSELF` - PICK_IT_YOURSELF\n* `SECOND_HAND` - SECOND_HAND\n* `OTHER` - OTHER"
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeA9eEnum"
          },
          "osm_id": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "format": "int64",
            "nullable": true
          },
          "osm_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationOsmTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "osm_name": {
            "type": "string",
            "nullable": true
          },
          "osm_display_name": {
            "type": "string",
            "nullable": true
          },
          "osm_tag_key": {
            "type": "string",
            "nullable": true
          },
          "osm_tag_value": {
            "type": "string",
            "nullable": true
          },
          "osm_brand": {
            "type": "string",
            "nullable": true
          },
          "osm_address_postcode": {
            "type": "string",
            "nullable": true
          },
          "osm_address_city": {
            "type": "string",
            "nullable": true
          },
          "osm_address_country": {
            "type": "string",
            "nullable": true
          },
          "osm_address_country_code": {
            "type": "string",
            "nullable": true
          },
          "osm_lat": {
            "type": "number",
            "format": "double",
            "maximum": 10000,
            "minimum": -10000,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true,
            "nullable": true
          },
          "osm_lon": {
            "type": "number",
            "format": "double",
            "maximum": 10000,
            "minimum": -10000,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true,
            "nullable": true
          },
          "osm_version": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "website_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "maxLength": 200
          },
          "price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "user_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "product_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "proof_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "osm_id",
          "osm_type",
          "type",
          "updated"
        ]
      },
      "LocationCreate": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TypeA9eEnum"
          },
          "osm_id": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "format": "int64",
            "nullable": true
          },
          "osm_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationOsmTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "website_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "LocationOsmTypeEnum": {
        "enum": [
          "NODE",
          "WAY",
          "RELATION"
        ],
        "type": "string",
        "description": "* `NODE` - NODE\n* `WAY` - WAY\n* `RELATION` - RELATION"
      },
      "Login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "username"
        ]
      },
      "NullEnum": {
        "enum": [
          null
        ]
      },
      "PaginatedChallengeList": {
        "type": "object",
        "required": [
          "items",
          "page",
          "pages",
          "size",
          "total"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Challenge"
              }
            }
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 16
          },
          "size": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 100
          },
          "total": {
            "type": "integer",
            "description": "Total number of items",
            "example": 1531
          }
        }
      },
      "PaginatedLocationList": {
        "type": "object",
        "required": [
          "items",
          "page",
          "pages",
          "size",
          "total"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 16
          },
          "size": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 100
          },
          "total": {
            "type": "integer",
            "description": "Total number of items",
            "example": 1531
          }
        }
      },
      "PaginatedPriceFullList": {
        "type": "object",
        "required": [
          "items",
          "page",
          "pages",
          "size",
          "total"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PriceFull"
              }
            }
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 16
          },
          "size": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 100
          },
          "total": {
            "type": "integer",
            "description": "Total number of items",
            "example": 1531
          }
        }
      },
      "PaginatedPriceTagFullList": {
        "type": "object",
        "required": [
          "items",
          "page",
          "pages",
          "size",
          "total"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PriceTagFull"
              }
            }
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 16
          },
          "size": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 100
          },
          "total": {
            "type": "integer",
            "description": "Total number of items",
            "example": 1531
          }
        }
      },
      "PaginatedProductFullList": {
        "type": "object",
        "required": [
          "items",
          "page",
          "pages",
          "size",
          "total"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductFull"
              }
            }
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 16
          },
          "size": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 100
          },
          "total": {
            "type": "integer",
            "description": "Total number of items",
            "example": 1531
          }
        }
      },
      "PaginatedProofHalfFullList": {
        "type": "object",
        "required": [
          "items",
          "page",
          "pages",
          "size",
          "total"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProofHalfFull"
              }
            }
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 16
          },
          "size": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 100
          },
          "total": {
            "type": "integer",
            "description": "Total number of items",
            "example": 1531
          }
        }
      },
      "PaginatedReceiptItemFullList": {
        "type": "object",
        "required": [
          "items",
          "page",
          "pages",
          "size",
          "total"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReceiptItemFull"
              }
            }
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 16
          },
          "size": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 100
          },
          "total": {
            "type": "integer",
            "description": "Total number of items",
            "example": 1531
          }
        }
      },
      "PaginatedUserList": {
        "type": "object",
        "required": [
          "items",
          "page",
          "pages",
          "size",
          "total"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 16
          },
          "size": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 100
          },
          "total": {
            "type": "integer",
            "description": "Total number of items",
            "example": 1531
          }
        }
      },
      "PatchedPriceTagUpdate": {
        "type": "object",
        "properties": {
          "bounding_box": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Coordinates of the bounding box, in the format [y_min, x_min, y_max, x_max]"
          },
          "status": {
            "nullable": true,
            "description": "The annotation status\n\n* `0` - deleted\n* `1` - linked_to_price\n* `2` - not_readable\n* `3` - truncated\n* `4` - not_price_tag\n* `5` - no_barcode\n* `10` - other",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StatusDe1Enum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "price_id": {
            "type": "integer"
          }
        }
      },
      "PatchedPriceUpdate": {
        "type": "object",
        "properties": {
          "category_tag": {
            "type": "string",
            "nullable": true
          },
          "labels_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "origins_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "price_is_discounted": {
            "type": "boolean"
          },
          "price_without_discount": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "discount_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "price_per": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PricePerEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "currency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "receipt_quantity": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's price quantity (user input)"
          },
          "owner_comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PatchedProofUpdate": {
        "type": "object",
        "properties": {
          "location_osm_id": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "format": "int64",
            "nullable": true
          },
          "location_osm_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationOsmTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "type": {
            "$ref": "#/components/schemas/TypeEbbEnum"
          },
          "currency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "receipt_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true,
            "title": "Receipt's number of prices (user input)"
          },
          "receipt_price_total": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's total amount (user input)"
          },
          "receipt_online_delivery_costs": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's online delivery costs (user input)"
          },
          "ready_for_price_tag_validation": {
            "type": "boolean"
          },
          "owner_consumption": {
            "type": "boolean",
            "nullable": true
          },
          "owner_comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PatchedReceiptItemFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "proof_id": {
            "type": "integer"
          },
          "price_id": {
            "type": "integer"
          },
          "order": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "description": "The order of the item in the receipt. Item on top is 1."
          },
          "predicted_data": {
            "description": "A dict representing the predicted data of the receipt item. For example the product name, the price etc."
          },
          "status": {
            "nullable": true,
            "description": "The current status of the item\n\n* `0` - deleted\n* `1` - linked_to_price",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReceiptItemFullStatusEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When the item was created in DB"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "When the item was last updated"
          },
          "proof_prediction": {
            "type": "integer",
            "nullable": true,
            "description": "The proof prediction used to create this receipt item. Null if created by a user."
          }
        }
      },
      "PriceCreate": {
        "type": "object",
        "properties": {
          "category_tag": {
            "type": "string",
            "nullable": true
          },
          "labels_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "origins_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "price_is_discounted": {
            "type": "boolean"
          },
          "price_without_discount": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "discount_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "price_per": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PricePerEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "currency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "receipt_quantity": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's price quantity (user input)"
          },
          "owner_comment": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeF36Enum"
          },
          "product_code": {
            "type": "string",
            "nullable": true
          },
          "product_name": {
            "type": "string",
            "nullable": true
          },
          "location_osm_id": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "format": "int64",
            "nullable": true
          },
          "location_osm_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationOsmTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "location_id": {
            "type": "integer"
          },
          "proof_id": {
            "type": "integer"
          }
        },
        "required": [
          "proof_id"
        ]
      },
      "PriceFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "product_id": {
            "type": "integer"
          },
          "location_id": {
            "type": "integer"
          },
          "proof_id": {
            "type": "integer"
          },
          "product": {
            "$ref": "#/components/schemas/ProductFull"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "proof": {
            "$ref": "#/components/schemas/Proof"
          },
          "type": {
            "$ref": "#/components/schemas/TypeF36Enum"
          },
          "product_code": {
            "type": "string",
            "nullable": true
          },
          "product_name": {
            "type": "string",
            "nullable": true
          },
          "category_tag": {
            "type": "string",
            "nullable": true
          },
          "labels_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "origins_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "price_is_discounted": {
            "type": "boolean"
          },
          "price_without_discount": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "discount_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "price_per": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PricePerEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "currency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "location_osm_id": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "format": "int64",
            "nullable": true
          },
          "location_osm_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationOsmTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "receipt_quantity": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's price quantity (user input)"
          },
          "owner_comment": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "location",
          "location_id",
          "product",
          "product_id",
          "proof",
          "proof_id",
          "type",
          "updated"
        ]
      },
      "PricePerEnum": {
        "enum": [
          "UNIT",
          "KILOGRAM"
        ],
        "type": "string",
        "description": "* `UNIT` - UNIT\n* `KILOGRAM` - KILOGRAM"
      },
      "PriceStats": {
        "type": "object",
        "properties": {
          "price__count": {
            "type": "integer"
          },
          "price__min": {
            "type": "number",
            "format": "double",
            "maximum": 100000000,
            "minimum": -100000000,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true
          },
          "price__max": {
            "type": "number",
            "format": "double",
            "maximum": 100000000,
            "minimum": -100000000,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true
          },
          "price__avg": {
            "type": "number",
            "format": "double",
            "maximum": 100000000,
            "minimum": -100000000,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true
          }
        },
        "required": [
          "price__avg",
          "price__count",
          "price__max",
          "price__min"
        ]
      },
      "PriceTagCreate": {
        "type": "object",
        "properties": {
          "bounding_box": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Coordinates of the bounding box, in the format [y_min, x_min, y_max, x_max]"
          },
          "status": {
            "nullable": true,
            "description": "The annotation status\n\n* `0` - deleted\n* `1` - linked_to_price\n* `2` - not_readable\n* `3` - truncated\n* `4` - not_price_tag\n* `5` - no_barcode\n* `10` - other",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StatusDe1Enum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "price_id": {
            "type": "integer"
          },
          "proof_id": {
            "type": "integer"
          }
        },
        "required": [
          "bounding_box",
          "proof_id"
        ]
      },
      "PriceTagFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "price_id": {
            "type": "integer",
            "nullable": true,
            "description": "The price linked to this tag",
            "readOnly": true
          },
          "predictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceTagPrediction"
            },
            "readOnly": true
          },
          "proof": {
            "$ref": "#/components/schemas/ProofHalfFull"
          },
          "bounding_box": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Coordinates of the bounding box, in the format [y_min, x_min, y_max, x_max]"
          },
          "status": {
            "nullable": true,
            "description": "The annotation status\n\n* `0` - deleted\n* `1` - linked_to_price\n* `2` - not_readable\n* `3` - truncated\n* `4` - not_price_tag\n* `5` - no_barcode\n* `10` - other",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StatusDe1Enum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "prediction_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true,
            "description": "The name of the user who created this price tag. This field is null if the tag was created by a model.",
            "maxLength": 100
          },
          "updated_by": {
            "type": "string",
            "nullable": true,
            "description": "The name of the user who last updated this price tag bounding boxes. If the price tag bounding boxes were never updated, this field is null.",
            "maxLength": 100
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When the tag was created in DB"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "When the tag was last updated"
          },
          "proof_prediction": {
            "type": "integer",
            "nullable": true,
            "description": "The proof prediction used to create this price tag. Null if created by a user."
          }
        },
        "required": [
          "bounding_box",
          "id",
          "predictions",
          "price_id",
          "proof",
          "updated"
        ]
      },
      "PriceTagPrediction": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceTagPredictionTypeEnum"
              }
            ],
            "description": "The type of the prediction\n\n* `PRICE_TAG_EXTRACTION` - PRICE_TAG_EXTRACTION"
          },
          "model_name": {
            "type": "string",
            "description": "The name of the model that generated the prediction",
            "maxLength": 30
          },
          "model_version": {
            "type": "string",
            "description": "The specific version of the model that generated the prediction",
            "maxLength": 30
          },
          "schema_version": {
            "type": "string",
            "nullable": true,
            "description": "The schema version of the prediction data. Used to handle changes in the prediction data structure. It is currently used when calling Gemine API to extract price tags.",
            "maxLength": 20
          },
          "data": {
            "description": "a dict representing the data of the prediction. This field is model-specific."
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When the prediction was created in DB"
          }
        },
        "required": [
          "model_name",
          "model_version",
          "type"
        ]
      },
      "PriceTagPredictionTypeEnum": {
        "enum": [
          "PRICE_TAG_EXTRACTION"
        ],
        "type": "string",
        "description": "* `PRICE_TAG_EXTRACTION` - PRICE_TAG_EXTRACTION"
      },
      "PriceTagUpdate": {
        "type": "object",
        "properties": {
          "bounding_box": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Coordinates of the bounding box, in the format [y_min, x_min, y_max, x_max]"
          },
          "status": {
            "nullable": true,
            "description": "The annotation status\n\n* `0` - deleted\n* `1` - linked_to_price\n* `2` - not_readable\n* `3` - truncated\n* `4` - not_price_tag\n* `5` - no_barcode\n* `10` - other",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StatusDe1Enum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "price_id": {
            "type": "integer"
          }
        },
        "required": [
          "bounding_box",
          "price_id"
        ]
      },
      "PriceUpdate": {
        "type": "object",
        "properties": {
          "category_tag": {
            "type": "string",
            "nullable": true
          },
          "labels_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "origins_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "price_is_discounted": {
            "type": "boolean"
          },
          "price_without_discount": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "discount_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "price_per": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PricePerEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "currency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "receipt_quantity": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's price quantity (user input)"
          },
          "owner_comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "code": {
            "type": "string"
          },
          "source": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SourceEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "source_last_synced": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "product_name": {
            "type": "string",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true
          },
          "product_quantity": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "product_quantity_unit": {
            "type": "string",
            "nullable": true
          },
          "categories_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brands": {
            "type": "string",
            "nullable": true
          },
          "brands_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "labels_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nutriscore_grade": {
            "type": "string",
            "nullable": true
          },
          "ecoscore_grade": {
            "type": "string",
            "nullable": true
          },
          "nova_group": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "unique_scans_n": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "price_currency_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "location_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "location_type_osm_country_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "user_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "proof_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "code",
          "id",
          "updated"
        ]
      },
      "Proof": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "location_id": {
            "type": "integer"
          },
          "file_path": {
            "type": "string",
            "nullable": true
          },
          "mimetype": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeEbbEnum"
          },
          "image_md5_hash": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "image_thumb_path": {
            "type": "string",
            "nullable": true
          },
          "location_osm_id": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "format": "int64",
            "nullable": true
          },
          "location_osm_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationOsmTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "currency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "receipt_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true,
            "title": "Receipt's number of prices (user input)"
          },
          "receipt_price_total": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's total amount (user input)"
          },
          "receipt_online_delivery_costs": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's online delivery costs (user input)"
          },
          "ready_for_price_tag_validation": {
            "type": "boolean"
          },
          "owner_consumption": {
            "type": "boolean",
            "nullable": true
          },
          "owner_comment": {
            "type": "string",
            "nullable": true
          },
          "price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "prediction_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "location_id",
          "type",
          "updated"
        ]
      },
      "ProofFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "location_id": {
            "type": "integer"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "predictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProofPrediction"
            },
            "readOnly": true
          },
          "file_path": {
            "type": "string",
            "nullable": true
          },
          "mimetype": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeEbbEnum"
          },
          "image_md5_hash": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "image_thumb_path": {
            "type": "string",
            "nullable": true
          },
          "location_osm_id": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "format": "int64",
            "nullable": true
          },
          "location_osm_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationOsmTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "currency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "receipt_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true,
            "title": "Receipt's number of prices (user input)"
          },
          "receipt_price_total": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's total amount (user input)"
          },
          "receipt_online_delivery_costs": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's online delivery costs (user input)"
          },
          "ready_for_price_tag_validation": {
            "type": "boolean"
          },
          "owner_consumption": {
            "type": "boolean",
            "nullable": true
          },
          "owner_comment": {
            "type": "string",
            "nullable": true
          },
          "price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "prediction_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "location",
          "location_id",
          "predictions",
          "type",
          "updated"
        ]
      },
      "ProofHalfFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "location_id": {
            "type": "integer"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "file_path": {
            "type": "string",
            "nullable": true
          },
          "mimetype": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeEbbEnum"
          },
          "image_md5_hash": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "image_thumb_path": {
            "type": "string",
            "nullable": true
          },
          "location_osm_id": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "format": "int64",
            "nullable": true
          },
          "location_osm_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationOsmTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "currency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "receipt_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true,
            "title": "Receipt's number of prices (user input)"
          },
          "receipt_price_total": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's total amount (user input)"
          },
          "receipt_online_delivery_costs": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's online delivery costs (user input)"
          },
          "ready_for_price_tag_validation": {
            "type": "boolean"
          },
          "owner_consumption": {
            "type": "boolean",
            "nullable": true
          },
          "owner_comment": {
            "type": "string",
            "nullable": true
          },
          "price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "prediction_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "location",
          "location_id",
          "type",
          "updated"
        ]
      },
      "ProofPrediction": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProofPredictionTypeEnum"
              }
            ],
            "title": "The type of the prediction"
          },
          "model_name": {
            "type": "string",
            "title": "The name of the model that generated the prediction",
            "maxLength": 30
          },
          "model_version": {
            "type": "string",
            "title": "The specific version of the model that generated the prediction",
            "maxLength": 30
          },
          "data": {
            "nullable": true,
            "title": "A dict representing the data of the prediction. This field is model-specific."
          },
          "value": {
            "type": "string",
            "nullable": true,
            "title": "The predicted value, only for classification models, null otherwise.",
            "maxLength": 30
          },
          "max_confidence": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "title": "The maximum confidence of the prediction, may be null for some models.For object detection models, this is the confidence of the most confident object.For classification models, this is the confidence of the predicted class."
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "When the prediction was created in DB"
          }
        },
        "required": [
          "model_name",
          "model_version",
          "type"
        ]
      },
      "ProofPredictionTypeEnum": {
        "enum": [
          "OBJECT_DETECTION",
          "CLASSIFICATION",
          "RECEIPT_EXTRACTION"
        ],
        "type": "string",
        "description": "* `OBJECT_DETECTION` - OBJECT_DETECTION\n* `CLASSIFICATION` - CLASSIFICATION\n* `RECEIPT_EXTRACTION` - RECEIPT_EXTRACTION"
      },
      "ProofProcessWithGemini": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mode": {
            "type": "string"
          }
        },
        "required": [
          "files",
          "mode"
        ]
      },
      "ProofUpdate": {
        "type": "object",
        "properties": {
          "location_osm_id": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "format": "int64",
            "nullable": true
          },
          "location_osm_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationOsmTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "type": {
            "$ref": "#/components/schemas/TypeEbbEnum"
          },
          "currency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "receipt_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true,
            "title": "Receipt's number of prices (user input)"
          },
          "receipt_price_total": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's total amount (user input)"
          },
          "receipt_online_delivery_costs": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's online delivery costs (user input)"
          },
          "ready_for_price_tag_validation": {
            "type": "boolean"
          },
          "owner_consumption": {
            "type": "boolean",
            "nullable": true
          },
          "owner_comment": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "ProofUpload": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string"
          },
          "location_osm_id": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "format": "int64",
            "nullable": true
          },
          "location_osm_type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationOsmTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "type": {
            "$ref": "#/components/schemas/TypeEbbEnum"
          },
          "currency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "receipt_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true,
            "title": "Receipt's number of prices (user input)"
          },
          "receipt_price_total": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's total amount (user input)"
          },
          "receipt_online_delivery_costs": {
            "type": "number",
            "format": "double",
            "maximum": 10000000,
            "minimum": 0,
            "exclusiveMaximum": true,
            "nullable": true,
            "title": "Receipt's online delivery costs (user input)"
          },
          "ready_for_price_tag_validation": {
            "type": "boolean"
          },
          "owner_consumption": {
            "type": "boolean",
            "nullable": true
          },
          "owner_comment": {
            "type": "string",
            "nullable": true
          },
          "location_id": {
            "type": "integer"
          }
        },
        "required": [
          "file",
          "type"
        ]
      },
      "ReceiptItemFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "proof_id": {
            "type": "integer"
          },
          "price_id": {
            "type": "integer"
          },
          "order": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "description": "The order of the item in the receipt. Item on top is 1."
          },
          "predicted_data": {
            "description": "A dict representing the predicted data of the receipt item. For example the product name, the price etc."
          },
          "status": {
            "nullable": true,
            "description": "The current status of the item\n\n* `0` - deleted\n* `1` - linked_to_price",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReceiptItemFullStatusEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When the item was created in DB"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "When the item was last updated"
          },
          "proof_prediction": {
            "type": "integer",
            "nullable": true,
            "description": "The proof prediction used to create this receipt item. Null if created by a user."
          }
        },
        "required": [
          "id",
          "order",
          "price_id",
          "proof_id",
          "updated"
        ]
      },
      "ReceiptItemFullStatusEnum": {
        "enum": [
          0,
          1
        ],
        "description": "* `0` - deleted\n* `1` - linked_to_price"
      },
      "SessionFull": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "last_used": {
            "type": "string"
          }
        },
        "required": [
          "created",
          "last_used",
          "token",
          "user_id"
        ]
      },
      "SessionResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          }
        },
        "required": [
          "access_token",
          "token_type"
        ]
      },
      "SourceEnum": {
        "enum": [
          "off",
          "obf",
          "opff",
          "opf"
        ],
        "type": "string",
        "description": "* `off` - off\n* `obf` - obf\n* `opff` - opff\n* `opf` - opf"
      },
      "Status": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "StatusDe1Enum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          10
        ],
        "type": "integer",
        "description": "* `0` - deleted\n* `1` - linked_to_price\n* `2` - not_readable\n* `3` - truncated\n* `4` - not_price_tag\n* `5` - no_barcode\n* `10` - other"
      },
      "TotalStats": {
        "type": "object",
        "properties": {
          "price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_type_product_code_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_type_category_tag_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_with_discount_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_currency_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_year_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_location_country_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_kind_community_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_kind_consumption_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_source_web_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_source_mobile_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_source_api_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_source_other_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_in_challenge_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "product_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "product_source_off_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "product_source_obf_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "product_source_opff_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "product_source_opf_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "product_with_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "product_source_off_with_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "product_source_obf_with_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "product_source_opff_with_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "product_source_opf_with_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "location_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "location_with_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "location_type_osm_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "location_type_online_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "location_type_osm_country_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_with_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_type_price_tag_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_type_receipt_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_type_gdpr_request_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_type_shop_import_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_kind_community_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_kind_consumption_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_source_web_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_source_mobile_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_source_api_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_source_other_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_currency_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_in_challenge_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_tag_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_tag_status_unknown_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_tag_status_linked_to_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "user_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "user_with_price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "challenge_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "updated"
        ]
      },
      "TypeA9eEnum": {
        "enum": [
          "OSM",
          "ONLINE"
        ],
        "type": "string",
        "description": "* `OSM` - OSM\n* `ONLINE` - ONLINE"
      },
      "TypeEbbEnum": {
        "enum": [
          "PRICE_TAG",
          "RECEIPT",
          "GDPR_REQUEST",
          "SHOP_IMPORT"
        ],
        "type": "string",
        "description": "* `PRICE_TAG` - PRICE_TAG\n* `RECEIPT` - RECEIPT\n* `GDPR_REQUEST` - GDPR_REQUEST\n* `SHOP_IMPORT` - SHOP_IMPORT"
      },
      "TypeF36Enum": {
        "enum": [
          "PRODUCT",
          "CATEGORY"
        ],
        "type": "string",
        "description": "* `PRODUCT` - PRODUCT\n* `CATEGORY` - CATEGORY"
      },
      "User": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "price_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "price_type_product_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "price_type_category_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "price_kind_community_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_kind_consumption_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_in_proof_owned_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "price_in_proof_not_owned_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "price_not_owned_in_proof_owned_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "proof_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "proof_kind_community_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "proof_kind_consumption_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "location_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "location_type_osm_country_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "product_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "currency_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "year_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "challenge_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          }
        },
        "required": [
          "user_id"
        ]
      }
    },
    "securitySchemes": {
      "CustomAuthentication": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
