{
  "openapi": "3.1.0",
  "info": {
    "title": "Open Food Facts Open API V3 - under development",
    "description": "As a developer, the Open Food Facts API allows you to get information\nand contribute to the products database. You can create great apps to\nhelp people make better food choices and also provide data to enhance the database.\n\n**IMPORTANT**: Please read the [API introduction](https://openfoodfacts.github.io/openfoodfacts-server/api/) before using this API.\n\n**WARNING** v3 is under development and you should expect changes\n\nThe current version of API v3 is v3.4\nSee the [change log for the API and product schema](../ref-api-and-product-schema-change-log.md)\n",
    "termsOfService": "https://world.openfoodfacts.org/terms-of-use",
    "contact": {
      "name": "Open Food Facts",
      "url": "https://slack.openfoodfacts.org/",
      "email": "reuse@openfoodfacts.org"
    },
    "license": {
      "name": "License (MIT, Apache 2.0, etc)",
      "url": "https://opendatacommons.org/licenses/odbl/summary/index.html"
    },
    "version": "3"
  },
  "servers": [
    {
      "url": "https://world.openfoodfacts.org",
      "description": "prod"
    },
    {
      "description": "dev",
      "url": "https://world.openfoodfacts.net"
    }
  ],
  "paths": {
    "/api/v3/product/{barcode}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Product Data",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "description": "The barcode of the product to be fetched\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "3017620422003"
            }
          },
          {
            "name": "product_type",
            "in": "query",
            "description": "Used for READ queries for one product. Expected product type of the requested product. Defaults to the product type of the server the query is sent to (e.g. 'food' for Open Food Facts, 'beauty' for Open Beauty Facts, etc.). 'all' matches all product types. If the product exists on a different server that matches the requested product type, the API will return a 302 redirect to the correct server. Otherwise, the API will return a 404 error. It is possible that new product types will be added in the future.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "beauty",
                "food",
                "petfood",
                "product"
              ],
              "description": "Expected product type of the requested product",
              "examples": [
                "all",
                "food"
              ]
            }
          },
          {
            "schema": {
              "type": "string",
              "example": "us"
            },
            "in": "query",
            "name": "cc",
            "required": false,
            "description": "2 letter code of the country of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the country may be inferred by the IP address of the request."
          },
          {
            "schema": {
              "type": "string",
              "example": "fr"
            },
            "in": "query",
            "name": "lc",
            "required": false,
            "description": "2 letter code of the language of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the language may be inferred by the Accept-Language header of the request."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tags_lc",
            "description": "2 letter language code to request names of tags in a specific language.  For READ requests: if passed, all taxonomized tags of the response will include a `lc_name` property with the translation in the requested language, if available. Otherwise, the property value will contain the name in the original language, prefixed by the 2 language code and a colon."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fields",
            "description": "Comma separated list of fields requested in the response.\n\nSpecial values:\n* \"none\": returns no fields\n* \"raw\": returns all fields as stored internally in the database\n* \"all\": returns all fields except generated fields that need to be explicitly requested such as \"knowledge_panels\".\n\nDefaults to \"all\" for READ requests. The \"all\" value can also be combined with fields like \"attribute_groups\" and \"knowledge_panels\"."
          },
          {
            "schema": {
              "type": "string",
              "example": "health_card, environment_card"
            },
            "required": false,
            "in": "query",
            "name": "knowledge_panels_included",
            "description": "When knowledge_panels are requested, you can specify which panels should be in the response. All the others will be excluded."
          },
          {
            "schema": {
              "type": "string",
              "example": "health_card, environment_card"
            },
            "required": false,
            "in": "query",
            "name": "knowledge_panels_excluded",
            "description": "When knowledge_panels are requested, you can specify which panels to exclude from the response. All the others will be included.\nIf a panel is both excluded and included (with the knowledge_panels_excluded parameter), it will be excluded."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "product": {
                          "type": "object",
                          "title": "product",
                          "description": "This is all the fields describing a product and how to display it on a page.\n\nRefer to the different sub schema for more readable entries:\n\n* [Product Base](#cmp--schemas-product-base): Base fields of a product\n* [Product Misc](#cmp--schemas-product-misc): Miscellaneous but important fields of a product\n* [Product Tags](#cmp--schemas-product-tags): Tags fields on a product\n* [Product Images](#cmp--schemas-product-images): Information about Images of a product\n* [Product Images 2](#cmp--schemas-product-images2): Information about Images of a product\n* [Product Eco-Score](#cmp--schemas-product-ecoscore): Fields related to Eco-Score for a product\n* [Product Ingredients](#cmp--schemas-product-ingredients): Fields about ingredients of a product\n* [Product Nutrition](#cmp--schemas-product-nutrition): Nutrition fields of a product\n* [Product Data Quality](#cmp--schemas-product-quality): fields related to data quality for a product\n* [Product Extended](#cmp--schemas-product-extended): TODO\n* [Product Metadata](#cmp--schemas-product-meta): Metadata of a product (author, editors, etc.)\n* [Product Knowledge Panels](#cmp--schemas-product-knowledge-panels): Knowledge panels for a product\n* [Product Attribute Groups](#cmp--schemas-product-attribute-groups): Attribute groups for personal product matching\n",
                          "allOf": [
                            {
                              "type": "object",
                              "description": "Base product data\n",
                              "required": [
                                "code",
                                "schema_version"
                              ],
                              "properties": {
                                "abbreviated_product_name": {
                                  "type": "string",
                                  "description": "Abbreviated name in requested language"
                                },
                                "product_type": {
                                  "type": "string",
                                  "description": "The product type is a fundamental separation that tells on which platform the product is made available:\nOpen Food Facts, Open Beauty Facts, Open Pet Food Facts or Open Products Facts.\n\nEach platform has variations on the way it analyses the product.\n\nChanging the product type moves the product to the new platform.\nIt must be done thoughtfully.\n",
                                  "enum": [
                                    "beauty",
                                    "food",
                                    "petfood",
                                    "product"
                                  ]
                                },
                                "code": {
                                  "type": "string",
                                  "description": "barcode of the product (can be EAN-13 or internal codes for some food stores),\nfor products without a barcode,\nOpen Food Facts assigns a number starting with the 200 reserved prefix\n"
                                },
                                "codes_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "A value which is the type of barcode \"code-13\" or \"code-8\"\nand\nA series of mask for the barcode\nIt helps retrieve barcodes starting by\n",
                                    "examples": [
                                      "code-13",
                                      "3017620422xxx",
                                      "301762042xxxx",
                                      "30176204xxxxx",
                                      "3017620xxxxxx",
                                      "301762xxxxxxx",
                                      "30176xxxxxxxx",
                                      "3017xxxxxxxxx",
                                      "301xxxxxxxxxx",
                                      "30xxxxxxxxxxx",
                                      "3xxxxxxxxxxxx"
                                    ]
                                  }
                                },
                                "generic_name": {
                                  "type": "string",
                                  "description": "Legal name of the product as regulated\nby the European authorities.\n"
                                },
                                "id": {
                                  "description": "internal identifier for the product, usually set to the value of `code`,\nexcept on the producers platform where it is prefixed by the owner\n",
                                  "type": "string"
                                },
                                "lc": {
                                  "type": "string",
                                  "description": "Main language of the product.\nThis is a duplicate of `lang` property (for historical reasons).\n"
                                },
                                "lang": {
                                  "type": "string",
                                  "description": "Main language of the product.\n\nThis should be the main language of product packaging (if one is predominant).\n\nMain language is also used to decide which ingredients list to parse.\n"
                                },
                                "nova_group": {
                                  "type": "integer",
                                  "description": "Nova group as an integer from 1 to 4. See https://world.openfoodfacts.org/nova\n"
                                },
                                "nova_groups": {
                                  "type": "string"
                                },
                                "obsolete": {
                                  "type": "string"
                                },
                                "obsolete_since_date": {
                                  "description": "A date at which the product was declared obsolete.\nThis means it's not produced any more.\n",
                                  "type": "string"
                                },
                                "product_name": {
                                  "type": "string",
                                  "description": "The name of the product\n"
                                },
                                "product_name_en": {
                                  "type": "string",
                                  "description": "The name of the product can also\nbe in many other languages like\nproduct_name_fr (for French).\n"
                                },
                                "product_quantity": {
                                  "type": "string",
                                  "description": "The size in g or ml for the whole product.\nIt is a normalized version of the `quantity` field.\nA `quantity` of \"2 x 60 g\" leads to `product_quantity`: \"120\".\n",
                                  "example": "500"
                                },
                                "product_quantity_unit": {
                                  "type": "string",
                                  "description": "The unit (either g or ml) for the corresponding `product_quantity`.\nIt is computed from the `quantity` field.\nA `quantity` of \"6 x 250 ml\" leads to `product_quantity_unit`: \"ml\".\n",
                                  "example": "g"
                                },
                                "quantity": {
                                  "type": "string",
                                  "description": "The quantity of the product, with the corresponding number of portions or unit (g, ml, kg, l, cl, oz, lbs...).\nIt should be the value as displayed on the product. The ℮ sign is allowed.\nWhen it refers to the number of portions, it can be filled without any units (e.g. \"6 eggs\").\n",
                                  "example": "3 x 150 g"
                                },
                                "schema_version": {
                                  "type": "integer",
                                  "description": "Version of the product object schema used in the response.\nThis indicates the structure of the 'product' field itself.\nFor more details, please read: https://openfoodfacts.github.io/openfoodfacts-server/api/ref-api-and-product-schema-change-log\n",
                                  "example": 999
                                }
                              },
                              "patternProperties": {
                                "abbreviated_product_name_(?<language_code>\\w\\w)": {
                                  "type": "string",
                                  "description": "Abbreviated name in language `language_code`."
                                },
                                "generic_name_(?<language_code>\\w\\w)": {
                                  "type": "string",
                                  "description": "This can be returned in many other languages\nlike generic_name_fr (for French).\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "product_misc",
                              "description": "Miscellaneous but important fields of a product\n",
                              "properties": {
                                "additives_n": {
                                  "type": "integer",
                                  "description": "Number of food additives.\n"
                                },
                                "checked": {
                                  "type": "string"
                                },
                                "complete": {
                                  "type": "integer"
                                },
                                "completeness": {
                                  "type": "number"
                                },
                                "ecoscore_grade": {
                                  "type": "string",
                                  "description": "See also: `ecoscore_tags`\n"
                                },
                                "ecoscore_score": {
                                  "type": "integer",
                                  "description": "See also: `ecoscore_tags`\n"
                                },
                                "food_groups": {
                                  "type": "string"
                                },
                                "food_groups_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "nutrient_levels": {
                                  "description": "Traffic light indicators on main nutrients levels\n",
                                  "type": "object",
                                  "properties": {
                                    "fat": {
                                      "type": "string",
                                      "enum": [
                                        "low",
                                        "moderate",
                                        "high"
                                      ]
                                    },
                                    "salt": {
                                      "type": "string",
                                      "enum": [
                                        "low",
                                        "moderate",
                                        "high"
                                      ]
                                    },
                                    "saturated-fat": {
                                      "type": "string",
                                      "enum": [
                                        "low",
                                        "moderate",
                                        "high"
                                      ]
                                    },
                                    "sugars": {
                                      "type": "string",
                                      "enum": [
                                        "low",
                                        "moderate",
                                        "high"
                                      ]
                                    }
                                  }
                                },
                                "packaging_text": {
                                  "type": "string",
                                  "description": "Recycling instructions as raw text, e.g. Plastic\nbottle to recycle, Plastic cap to recycle.\nThis will get automatically parsed and\nwill be used to compute the Eco-Score.\nYou can either request it (if it exists) or\nsend it in a specific language.\n",
                                  "example": "packaging_text_en"
                                },
                                "packagings": {
                                  "type": "array",
                                  "title": "Packagings (READ)",
                                  "description": "The packagings object is an array of individual packaging component objects.\n\nThe Packaging data document explains how packaging data is structured in Open Food Facts: https://openfoodfacts.github.io/openfoodfacts-server/dev/explain-packaging-data/\n\nThe shape, material and recycling properties of each packaging component are linked to entries in the packaging_shapes, packaging_materials and packaging_recycling taxonomies:\n\nhttps://world.openfoodfacts.org/data/taxonomies/packaging_shapes.json\nhttps://world.openfoodfacts.org/data/taxonomies/packaging_materials.json\nhttps://world.openfoodfacts.org/data/taxonomies/packaging_recycling.json\n\nIf the tags_lc field is set, the properties will include a lc_name field with the translation in the requested language.",
                                  "examples": [
                                    [
                                      {
                                        "number_of_units": 6,
                                        "shape": {
                                          "id": "en:bottle",
                                          "lc_name": "bouteille"
                                        },
                                        "material": {
                                          "id": "en:bottle",
                                          "lc_name": "bouteille"
                                        },
                                        "recycling": {
                                          "id": "en:bottle",
                                          "lc_name": "bouteille"
                                        },
                                        "quantity_per_unit": "25 cl",
                                        "quantity_per_unit_value": 25,
                                        "quantity_per_unit_unit": "cl",
                                        "weight_specified": 30,
                                        "weight_measured": 32,
                                        "weight_estimated": 26,
                                        "weight": 30,
                                        "weight_source_id": "specified"
                                      }
                                    ]
                                  ],
                                  "items": {
                                    "description": "Each packaging component has different properties to specify how many there are, its shape, material etc.\n\nThe shape, material and recycling properties are mapped to one entry in the packaging_shapes, packaging_materials and packaging_recycling taxonomies, and the value of the property is the canonical name of the taxonomy entry (e.g. en:bottle).\n\nThey may contain values that could not yet get matched to their respective taxonomy, in which case they will contain a free text value prefixed with the language code of this text value (e.g. \"fr:Bouteille sphérique\" might have been entered by a French user to indicate it is a spherical bottle).",
                                    "title": "Packaging component (READ)",
                                    "type": "object",
                                    "examples": [
                                      {
                                        "number_of_units": 6,
                                        "shape": {
                                          "id": "en:bottle",
                                          "lc_name": "bouteille"
                                        },
                                        "material": {
                                          "id": "en:bottle",
                                          "lc_name": "bouteille"
                                        },
                                        "recycling": {
                                          "id": "en:bottle",
                                          "lc_name": "bouteille"
                                        },
                                        "quantity_per_unit": "25 cl",
                                        "quantity_per_unit_value": 25,
                                        "quantity_per_unit_unit": "cl",
                                        "weight_specified": 30,
                                        "weight_measured": 32,
                                        "weight_estimated": 26,
                                        "weight": 30,
                                        "weight_source_id": "specified"
                                      }
                                    ],
                                    "properties": {
                                      "number_of_units": {
                                        "type": "integer",
                                        "description": "umber of units of this packaging component contained in the product (e.g. 6 for a pack of 6 bottles)"
                                      },
                                      "shape": {
                                        "title": "Packaging component shape",
                                        "x-stoplight": {
                                          "id": "xrj8agza3dwgf"
                                        },
                                        "type": "object",
                                        "description": "The shape property is canonicalized using the packaging_shapes taxonomy. Taxonomized values are available using the partial taxonomy API, the autosuggest API or the full packaging_shapes taxonomy JSON export.",
                                        "examples": [
                                          {
                                            "id": "en:bottle",
                                            "lc_name": "bouteille"
                                          }
                                        ],
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                          },
                                          "lc_name": {
                                            "type": "string",
                                            "description": "Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                          }
                                        }
                                      },
                                      "material": {
                                        "title": "Packaging component material",
                                        "type": "object",
                                        "description": "The material property is canonicalized using the packaging_materials taxonomy. Taxonomized values are available using the partial taxonomy API, the autosuggest API or the full packaging_material taxonomy JSON export.",
                                        "examples": [
                                          {
                                            "id": "en:bottle",
                                            "lc_name": "bouteille"
                                          }
                                        ],
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                          },
                                          "lc_name": {
                                            "type": "string",
                                            "description": "Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                          }
                                        }
                                      },
                                      "recycling": {
                                        "title": "Packaging component recycling instruction",
                                        "x-stoplight": {
                                          "id": "376tk8e2cmyh2"
                                        },
                                        "type": "object",
                                        "description": "The recycling property is canonicalized using the packaging_recycling taxonomy. Taxonomized values are available using the partial taxonomy API, the autosuggest API or the full packaging_recycling taxonomy JSON export.",
                                        "examples": [
                                          {
                                            "id": "en:bottle",
                                            "lc_name": "bouteille"
                                          }
                                        ],
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                          },
                                          "lc_name": {
                                            "type": "string",
                                            "description": "Name of the entry in the language requested in the tags_lc field of the request. This field is returned only of tags_lc is specified. If the translation is not available, or if the entry does not exist in the taxonomy, the value will be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                          }
                                        }
                                      },
                                      "quantity_per_unit": {
                                        "type": "string",
                                        "description": "Quantity (weight or volume) of food product contained in the packaging component. (e.g. 75cl for a wine bottle)"
                                      },
                                      "quantity_per_unit_value": {
                                        "type": "number",
                                        "description": "Value parsed from the quantity field."
                                      },
                                      "quantity_per_unit_unit": {
                                        "type": "string",
                                        "description": "Unit parsed and normalized from the quantity field."
                                      },
                                      "weight_specified": {
                                        "type": "number",
                                        "description": "Weight (as specified by the manufacturer) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component)."
                                      },
                                      "weight_measured": {
                                        "type": "number",
                                        "description": "Weight (as measured by one or more users) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component)."
                                      },
                                      "weight_estimated": {
                                        "type": "number",
                                        "description": "Weight (as estimated from similar products) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component)."
                                      },
                                      "weight": {
                                        "type": "number",
                                        "description": "Weight of one unit of the empty packaging component."
                                      },
                                      "weight_source_id": {
                                        "type": "string",
                                        "description": "Indicates which field was used to populate the \"weight\" field. Either \"specified\", \"measured\", or \"estimated\""
                                      }
                                    }
                                  },
                                  "readOnly": true
                                },
                                "packagings_complete": {
                                  "title": "packagings_complete",
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 1,
                                  "description": "Indicate if the packagings array contains all the packaging parts of the product. This field can be set by users when they enter or verify packaging data. Possible values are 0 or 1."
                                },
                                "pnns_groups_1": {
                                  "description": "Category of food according to [French Nutrition and Health Program](https://fr.wikipedia.org/wiki/Programme_national_nutrition_sant%C3%A9)\n",
                                  "type": "string"
                                },
                                "pnns_groups_1_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "pnns_groups_2": {
                                  "description": "Sub Category of food according to [French Nutrition and Health Program](https://fr.wikipedia.org/wiki/Programme_national_nutrition_sant%C3%A9)\n",
                                  "type": "string"
                                },
                                "pnns_groups_2_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "popularity_key": {
                                  "description": "An imprecise measurement of popularity based on Scan statistics. A higher value means higher popularity.\n",
                                  "type": "integer"
                                },
                                "popularity_tags": {
                                  "description": "Indicators for the popularity of a product, like the amount of scans in a specific year.\n`popularity_tags` values from previous years are kept, if there is no popularity_tags at all, then it was never popular.\nThis field must be used with care. In countries where Open Food Facts is not widely used, \na product may obtain the value \"top-90-percent-scans-2021\" with a single scan.\n",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "bottom-25-percent-scans-2020",
                                    "top-85-percent-scans-2021",
                                    "top-90-percent-scans-2022",
                                    "top-country-it-scans-2019",
                                    "top-100000-mg-scans-2024"
                                  ]
                                },
                                "scans_n": {
                                  "type": "integer",
                                  "description": "Number of scans performed with the official Open Food Facts mobile application, the last year \nfor which the product was scanned (current year excluded). This value is computed once a year by scanbot.pl.\nIt is possible that a product has never been scanned at all: `scans_n` is not given in this case.\nSee also `unique_scans_n` field.\n"
                                },
                                "unique_scans_n": {
                                  "type": "integer",
                                  "description": "Number of unique scans performed with the official Open Food Facts mobile application, the last year \nfor which the product was scanned (current year excluded).\nUnique scans means it is based on different IPs.\nThis value is computed once a year by scanbot.pl.\nSee also `scans_n` field.\n"
                                },
                                "serving_quantity": {
                                  "type": "string",
                                  "description": "Normalized version of serving_size.\nNote that this is NOT the number of servings by product.\n<small>(in perl, see `normalize_serving_size`)</small>\n"
                                },
                                "serving_quantity_unit": {
                                  "type": "string",
                                  "description": "The unit (either g or ml) for the correponding serving_quantity.\n",
                                  "example": "g"
                                },
                                "serving_size": {
                                  "type": "string",
                                  "description": "Serving size text (generally in g or ml).\nWe expect a quantity + unit but the user is free to input any string.\n"
                                }
                              },
                              "patternProperties": {
                                "food_groups_(?<language_code>\\w\\w)": {
                                  "type": "string",
                                  "description": "see `food_groups`"
                                },
                                "packaging_text_(?<language_code>\\w\\w)": {
                                  "type": "string",
                                  "description": "Packaging text in language designated by `language_code`\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Data about a product which is represented as tags\n",
                              "properties": {
                                "brands": {
                                  "type": "string",
                                  "description": "Comma separated list of brands (not taxonomized), in the last language used to edit it (recorded in brands_lc)\nThis field is mostly used for debugging and testing purposes. Do not use it for display purposes.\n"
                                },
                                "brands_hierarchy": {
                                  "type": "array",
                                  "description": "An array of brands tag entries (for display and editing).\n\nThat is the id of brands found in taxonomy + \nbrands not found in taxonomy (as-is, with no normalization).\n\nThis is the field that should be used for display purposes, as it is not lossy.\n",
                                  "items": {
                                    "title": "Canonicalized taxonomy tag entry",
                                    "type": "string",
                                    "description": "A tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\") -> for entries that could not be matched to a taxonomy entry"
                                  }
                                },
                                "brands_lc": {
                                  "type": "string",
                                  "description": "Language code of the last edit for brands"
                                },
                                "brands_tags": {
                                  "type": "array",
                                  "description": "An array of indexed brands tag entries (for search).\n\nThat is the id of brands found in taxonomy + \nbrands not found in taxonomy (with case / accents / spaces normalized).\n\nThis is mostly used for search as the normalization of entries not in the taxonomy is lossy.\n",
                                  "items": {
                                    "title": "Indexed taxonomy tag entry (lossy, for search only)",
                                    "type": "string",
                                    "description": "This field is used for search only. It is a lossy representation of the taxonomy tag entry, that can be used to index the entry in a search engine.\nA tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code, and normalized (deaccented and lowercased, depending on language)\n(e.g. \"fr:thes-verts\") -> for entries that could not be matched to a taxonomy entry"
                                  }
                                },
                                "categories": {
                                  "type": "string",
                                  "description": "Comma separated list of categories (not taxonomized), in the last language used to edit it (recorded in categories_lc)\nThis field is mostly used for debugging and testing purposes. Do not use it for display purposes.\n"
                                },
                                "categories_hierarchy": {
                                  "type": "array",
                                  "description": "An array of categories tag entries (for display and editing).\n\nThat is the id of categories found in taxonomy + \ncategories not found in taxonomy (as-is, with no normalization).\n\nThis is the field that should be used for display purposes, as it is not lossy.\n",
                                  "items": {
                                    "title": "Canonicalized taxonomy tag entry",
                                    "type": "string",
                                    "description": "A tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\") -> for entries that could not be matched to a taxonomy entry"
                                  }
                                },
                                "categories_lc": {
                                  "type": "string",
                                  "description": "Language code of the last edit for categories"
                                },
                                "categories_tags": {
                                  "type": "array",
                                  "description": "An array of indexed categories tag entries (for search).\n\nThat is the id of categories found in taxonomy + \ncategories not found in taxonomy (with case / accents / spaces normalized).\n\nThis is mostly used for search as the normalization of entries not in the taxonomy is lossy.\n",
                                  "items": {
                                    "title": "Indexed taxonomy tag entry (lossy, for search only)",
                                    "type": "string",
                                    "description": "This field is used for search only. It is a lossy representation of the taxonomy tag entry, that can be used to index the entry in a search engine.\nA tag entry, that has been matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\") -> for entries that could be matched to a taxonomy entry\n- a string in a specific language, prefixed by the 2 letter language code, and normalized (deaccented and lowercased, depending on language)\n(e.g. \"fr:thes-verts\") -> for entries that could not be matched to a taxonomy entry"
                                  }
                                },
                                "checkers_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "List of checkers (users who checked the product) tags"
                                  }
                                },
                                "cities": {
                                  "type": "string"
                                },
                                "cities_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "correctors_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "countries": {
                                  "type": "string",
                                  "description": "List of countries where the product is sold.\n"
                                },
                                "countries_hierarchy": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "countries_lc": {
                                  "type": "string",
                                  "description": "Countries language code"
                                },
                                "countries_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "ecoscore_tags": {
                                  "description": "All ecoscore of a product.\nMost of the time it's only one value,\nbut it might eventually be more for products composed of sub-products.\nSee also: `ecoscore_score`, `ecoscore_grade`.\n",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "emb_codes": {
                                  "type": "string",
                                  "description": "Packager code. EMB is the French system of traceability codes for packager.\n",
                                  "example": "EMB 2013330"
                                },
                                "emb_codes_orig": {
                                  "type": "string"
                                },
                                "emb_codes_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "labels": {
                                  "type": "string"
                                },
                                "labels_hierarchy": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "labels_lc": {
                                  "type": "string"
                                },
                                "labels_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "entry_dates_tags": {
                                  "description": "The data as a series of tag: `yyyy-mm-dd`, `yyyy-mm`, `yyyy`\n",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "examples": [
                                    [
                                      "2016-03-11",
                                      "2016-03",
                                      "2016"
                                    ]
                                  ]
                                },
                                "manufacturing_places": {
                                  "type": "string",
                                  "description": "Places where the product was manufactured or transformed.\n"
                                },
                                "manufacturing_places_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "nova_groups_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "nutrient_levels_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "Product Images",
                              "description": "Information about images (photos) of a product.\n\nImages ensure the reliability of Open Food Facts data.\nThey provides a primary source and proof of all the structured data.\nYou may therefore want to display them along the structured information.\n\nFor each product, we store:\n- the original images uploaded by users or manufacturers in images.uploaded\n- images that have been selected / cropped / rotated etc. containing specific\n  information (e.g. the front image, the ingredients image, etc.)\n  for specific languages in images.selected\n\nSee also tutorials about images:\n* [Getting images](https://openfoodfacts.github.io/openfoodfacts-server/api/how-to-download-images/)\n* [Uploading images](https://openfoodfacts.github.io/openfoodfacts-server/api/tutorial-uploading-photo-to-a-product/)\n",
                              "properties": {
                                "images": {
                                  "description": "Uploaded and selected images of the product.\n",
                                  "type": "object",
                                  "title": "images",
                                  "properties": {
                                    "uploaded": {
                                      "description": "List of all images uploaded by users or manufacturers.\nThose images are typically not displayed to users, but are used in edit mode to crop images with specific information\nfor specific languages. (See images.selected)\nOlder uploaded images that may correspond to older revisions of the product are also kept in this list.\n",
                                      "type": "object",
                                      "title": "images_uploaded",
                                      "patternProperties": {
                                        "(?<imgid>\\d+)": {
                                          "type": "object",
                                          "title": "Uploaded image",
                                          "description": "Image uploaded by a user or provided by a manufacturer identified by an integer 'imgid'.\n",
                                          "properties": {
                                            "uploader": {
                                              "type": "string",
                                              "description": "userid of the user who uploaded the image.\n",
                                              "example": "stephane"
                                            },
                                            "sizes": {
                                              "title": "Images Sizes",
                                              "type": "object",
                                              "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                              "properties": {
                                                "100": {
                                                  "title": "Image Size",
                                                  "type": "object",
                                                  "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                  "properties": {
                                                    "h": {
                                                      "type": "integer",
                                                      "example": 400,
                                                      "description": "The height of the reduced/full image in pixels.\n"
                                                    },
                                                    "w": {
                                                      "type": "integer",
                                                      "example": 255,
                                                      "description": "The width of the reduced/full image in pixels.\n"
                                                    },
                                                    "url": {
                                                      "type": "string",
                                                      "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                      "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                    }
                                                  }
                                                },
                                                "200": {
                                                  "title": "Image Size",
                                                  "type": "object",
                                                  "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                  "properties": {
                                                    "h": {
                                                      "type": "integer",
                                                      "example": 400,
                                                      "description": "The height of the reduced/full image in pixels.\n"
                                                    },
                                                    "w": {
                                                      "type": "integer",
                                                      "example": 255,
                                                      "description": "The width of the reduced/full image in pixels.\n"
                                                    },
                                                    "url": {
                                                      "type": "string",
                                                      "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                      "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                    }
                                                  }
                                                },
                                                "400": {
                                                  "title": "Image Size",
                                                  "type": "object",
                                                  "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                  "properties": {
                                                    "h": {
                                                      "type": "integer",
                                                      "example": 400,
                                                      "description": "The height of the reduced/full image in pixels.\n"
                                                    },
                                                    "w": {
                                                      "type": "integer",
                                                      "example": 255,
                                                      "description": "The width of the reduced/full image in pixels.\n"
                                                    },
                                                    "url": {
                                                      "type": "string",
                                                      "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                      "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                    }
                                                  }
                                                },
                                                "full": {
                                                  "title": "Image Size",
                                                  "type": "object",
                                                  "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                  "properties": {
                                                    "h": {
                                                      "type": "integer",
                                                      "example": 400,
                                                      "description": "The height of the reduced/full image in pixels.\n"
                                                    },
                                                    "w": {
                                                      "type": "integer",
                                                      "example": 255,
                                                      "description": "The width of the reduced/full image in pixels.\n"
                                                    },
                                                    "url": {
                                                      "type": "string",
                                                      "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                      "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "selected": {
                                      "description": "List of all images selected by users or manufacturers.\nThose images are typically displayed to users, and are used in edit mode to crop images with specific information\nfor specific languages. (See images.uploaded)\n",
                                      "type": "object",
                                      "title": "Selected images",
                                      "properties": {
                                        "front": {
                                          "description": "Front images of the full product in languages shown on the packaging.\nIn most cases we have a front image selected for only one language,\nunless the product has different packagings for different countries with the same barcode,\nor if the product has two front sides (e.g. in bilingual countries).\n",
                                          "patternProperties": {
                                            "(?<language_code>\\w\\w)": {
                                              "oneOf": [
                                                {
                                                  "type": "object",
                                                  "description": "Front image in the language given by the 2 letter 'language_code'.\n",
                                                  "title": "Selected image",
                                                  "properties": {
                                                    "imgid": {
                                                      "type": "integer",
                                                      "example": 12,
                                                      "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                    },
                                                    "rev": {
                                                      "type": "integer",
                                                      "example": 65,
                                                      "description": "The revision number of the product when the image was selected.",
                                                      "readOnly": true
                                                    },
                                                    "generation": {
                                                      "type": "object",
                                                      "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                      "properties": {
                                                        "angle": {
                                                          "type": "integer",
                                                          "example": 0,
                                                          "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                        },
                                                        "coordinates_image_size": {
                                                          "type": "string",
                                                          "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                          "example": "full"
                                                        },
                                                        "normalize": {
                                                          "type": "boolean",
                                                          "description": "Normalize colors. Default is false."
                                                        },
                                                        "white_magic": {
                                                          "type": "boolean",
                                                          "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                        },
                                                        "x1": {
                                                          "type": "integer",
                                                          "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "x2": {
                                                          "type": "string",
                                                          "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "y1": {
                                                          "type": "string",
                                                          "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "y2": {
                                                          "type": "string",
                                                          "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                        }
                                                      }
                                                    },
                                                    "sizes": {
                                                      "readOnly": true,
                                                      "title": "Images Sizes",
                                                      "type": "object",
                                                      "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                      "properties": {
                                                        "100": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "200": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "400": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "full": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "null",
                                                  "writeOnly": true,
                                                  "description": "Write only value to unselect a selected image\n"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "ingredients": {
                                          "description": "Cropped images of the ingredients list in languages shown on the packaging.\n",
                                          "patternProperties": {
                                            "(?<language_code>\\w\\w)": {
                                              "oneOf": [
                                                {
                                                  "type": "object",
                                                  "description": "Ingredient list image in the language given by the 2 letter 'language_code'.\n",
                                                  "title": "Selected image",
                                                  "properties": {
                                                    "imgid": {
                                                      "type": "integer",
                                                      "example": 12,
                                                      "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                    },
                                                    "rev": {
                                                      "type": "integer",
                                                      "example": 65,
                                                      "description": "The revision number of the product when the image was selected.",
                                                      "readOnly": true
                                                    },
                                                    "generation": {
                                                      "type": "object",
                                                      "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                      "properties": {
                                                        "angle": {
                                                          "type": "integer",
                                                          "example": 0,
                                                          "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                        },
                                                        "coordinates_image_size": {
                                                          "type": "string",
                                                          "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                          "example": "full"
                                                        },
                                                        "normalize": {
                                                          "type": "boolean",
                                                          "description": "Normalize colors. Default is false."
                                                        },
                                                        "white_magic": {
                                                          "type": "boolean",
                                                          "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                        },
                                                        "x1": {
                                                          "type": "integer",
                                                          "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "x2": {
                                                          "type": "string",
                                                          "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "y1": {
                                                          "type": "string",
                                                          "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "y2": {
                                                          "type": "string",
                                                          "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                        }
                                                      }
                                                    },
                                                    "sizes": {
                                                      "readOnly": true,
                                                      "title": "Images Sizes",
                                                      "type": "object",
                                                      "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                      "properties": {
                                                        "100": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "200": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "400": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "full": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "null",
                                                  "writeOnly": true,
                                                  "description": "Write only value to unselect a selected image              \n"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "nutrition": {
                                          "description": "Cropped images of the nutrition facts table / list in languages shown on the packaging.\n",
                                          "patternProperties": {
                                            "(?<language_code>\\w\\w)": {
                                              "oneOf": [
                                                {
                                                  "type": "object",
                                                  "description": "Nutrition facts image in the language given by the 2 letter 'language_code'.\n",
                                                  "title": "Selected image",
                                                  "properties": {
                                                    "imgid": {
                                                      "type": "integer",
                                                      "example": 12,
                                                      "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                    },
                                                    "rev": {
                                                      "type": "integer",
                                                      "example": 65,
                                                      "description": "The revision number of the product when the image was selected.",
                                                      "readOnly": true
                                                    },
                                                    "generation": {
                                                      "type": "object",
                                                      "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                      "properties": {
                                                        "angle": {
                                                          "type": "integer",
                                                          "example": 0,
                                                          "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                        },
                                                        "coordinates_image_size": {
                                                          "type": "string",
                                                          "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                          "example": "full"
                                                        },
                                                        "normalize": {
                                                          "type": "boolean",
                                                          "description": "Normalize colors. Default is false."
                                                        },
                                                        "white_magic": {
                                                          "type": "boolean",
                                                          "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                        },
                                                        "x1": {
                                                          "type": "integer",
                                                          "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "x2": {
                                                          "type": "string",
                                                          "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "y1": {
                                                          "type": "string",
                                                          "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "y2": {
                                                          "type": "string",
                                                          "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                        }
                                                      }
                                                    },
                                                    "sizes": {
                                                      "readOnly": true,
                                                      "title": "Images Sizes",
                                                      "type": "object",
                                                      "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                      "properties": {
                                                        "100": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "200": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "400": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "full": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "null",
                                                  "writeOnly": true,
                                                  "description": "Write only value to unselect a selected image\n"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "packaging": {
                                          "description": "Cropped images of the packaging / recycling information in languages shown on the packaging.\n",
                                          "patternProperties": {
                                            "(?<language_code>\\w\\w)": {
                                              "oneOf": [
                                                {
                                                  "type": "object",
                                                  "description": "Packaging / recycling information image in the language given by the 2 letter 'language_code'.\n",
                                                  "title": "Selected image",
                                                  "properties": {
                                                    "imgid": {
                                                      "type": "integer",
                                                      "example": 12,
                                                      "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                    },
                                                    "rev": {
                                                      "type": "integer",
                                                      "example": 65,
                                                      "description": "The revision number of the product when the image was selected.",
                                                      "readOnly": true
                                                    },
                                                    "generation": {
                                                      "type": "object",
                                                      "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                      "properties": {
                                                        "angle": {
                                                          "type": "integer",
                                                          "example": 0,
                                                          "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                        },
                                                        "coordinates_image_size": {
                                                          "type": "string",
                                                          "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                          "example": "full"
                                                        },
                                                        "normalize": {
                                                          "type": "boolean",
                                                          "description": "Normalize colors. Default is false."
                                                        },
                                                        "white_magic": {
                                                          "type": "boolean",
                                                          "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                        },
                                                        "x1": {
                                                          "type": "integer",
                                                          "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "x2": {
                                                          "type": "string",
                                                          "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "y1": {
                                                          "type": "string",
                                                          "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                        },
                                                        "y2": {
                                                          "type": "string",
                                                          "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                        }
                                                      }
                                                    },
                                                    "sizes": {
                                                      "readOnly": true,
                                                      "title": "Images Sizes",
                                                      "type": "object",
                                                      "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                      "properties": {
                                                        "100": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "200": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "400": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        },
                                                        "full": {
                                                          "title": "Image Size",
                                                          "type": "object",
                                                          "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                          "properties": {
                                                            "h": {
                                                              "type": "integer",
                                                              "example": 400,
                                                              "description": "The height of the reduced/full image in pixels.\n"
                                                            },
                                                            "w": {
                                                              "type": "integer",
                                                              "example": 255,
                                                              "description": "The width of the reduced/full image in pixels.\n"
                                                            },
                                                            "url": {
                                                              "type": "string",
                                                              "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                              "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "null",
                                                  "writeOnly": true,
                                                  "description": "Write only value to unselect a selected image\n"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "selected_images": {
                                  "type": "object",
                                  "title": "Selected images URLs",
                                  "description": "URLs of selected images, generated at runtime.\n",
                                  "patternProperties": {
                                    "(?<image_type>front|ingredients|nutrition|packaging)": {
                                      "description": "Type of the selected image: front (front of product), ingredients (ingredients list), nutrition (nutrition facts), packaging (packaging/recycling information).\n",
                                      "type": "object",
                                      "patternProperties": {
                                        "(?<language_code>\\w\\w|best)": {
                                          "type": "object",
                                          "description": "Packaging / recycling information image in the language given by the 2 letter 'language_code'.\n'best' returns the best image available, by priority in the language requested by the user, the main language of the product or another language.\n",
                                          "properties": {
                                            "100": {
                                              "type": "string",
                                              "description": "The URL of the image in max 100px width and height.\n"
                                            },
                                            "200": {
                                              "type": "string",
                                              "description": "The URL of the image in max 200px width and height.\n"
                                            },
                                            "400": {
                                              "type": "string",
                                              "description": "The URL of the image in max 400px width and height.\n"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "last_image_dates_tags": {
                                  "type": "array",
                                  "description": "An array of tags entries to indicated the year, month and day of the last image upload (in formats YYYY, YYYY-MM, YYYY-MM-DD).\n",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "last_image_t": {
                                  "description": "timestamp of last image upload",
                                  "type": "integer"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Fields related to Eco-Score for a product.\n\nSee also: `ecoscore_score`, `ecoscore_grade` and `ecoscore_tags`.\n",
                              "properties": {
                                "ecoscore_data": {
                                  "type": "object",
                                  "title": "product_ecoscore_data",
                                  "description": "An object about a lot of details about data needed for Eco-Score computation\nand complementary data of interest.\n",
                                  "properties": {
                                    "adjustments": {
                                      "title": "product_ecoscore_adjustments",
                                      "type": "object",
                                      "properties": {
                                        "origins_of_ingredients": {
                                          "type": "object",
                                          "properties": {
                                            "aggregated_origins": {
                                              "type": "array",
                                              "description": "List of aggregated origins of ingredients and their impact.",
                                              "items": {
                                                "title": "adjustments_origin_of_ingredient_aggregated",
                                                "type": "object",
                                                "properties": {
                                                  "epi_score": {
                                                    "type": "string"
                                                  },
                                                  "origin": {
                                                    "type": "string",
                                                    "description": "Country or region of origin for the ingredient."
                                                  },
                                                  "percent": {
                                                    "type": "integer",
                                                    "description": "Percentage of this ingredient from the specified origin."
                                                  },
                                                  "transportation_score": {
                                                    "type": [
                                                      "null",
                                                      "integer"
                                                    ],
                                                    "description": "Transportation score associated with this ingredient's origin."
                                                  }
                                                }
                                              }
                                            },
                                            "epi_score": {
                                              "type": "integer",
                                              "description": "Environmental Performance Index (EPI) score for the ingredient's origin."
                                            },
                                            "epi_value": {
                                              "type": "integer"
                                            },
                                            "origins_from_categories": {
                                              "type": "array",
                                              "description": "List of origins derived from product categories, eg for PDO.",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "origins_from_origins_field": {
                                              "type": "array",
                                              "description": "List of origins explicitly stated in the product's origins field.",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "transportation_score": {
                                              "type": "integer"
                                            },
                                            "transportation_scores": {
                                              "type": "object",
                                              "propertyNames": {
                                                "type": "string",
                                                "enum": [
                                                  "ad",
                                                  "al",
                                                  "at",
                                                  "ax",
                                                  "ba",
                                                  "be",
                                                  "bg",
                                                  "ch",
                                                  "cy",
                                                  "cz",
                                                  "de",
                                                  "dk",
                                                  "dz",
                                                  "ee",
                                                  "eg",
                                                  "es",
                                                  "fi",
                                                  "fo",
                                                  "fr",
                                                  "gg",
                                                  "gi",
                                                  "gr",
                                                  "hr",
                                                  "hu",
                                                  "ie",
                                                  "il",
                                                  "im",
                                                  "is",
                                                  "it",
                                                  "je",
                                                  "lb",
                                                  "li",
                                                  "lt",
                                                  "lu",
                                                  "lv",
                                                  "ly",
                                                  "ma",
                                                  "mc",
                                                  "md",
                                                  "me",
                                                  "mk",
                                                  "mt",
                                                  "nl",
                                                  "no",
                                                  "pl",
                                                  "ps",
                                                  "pt",
                                                  "ro",
                                                  "rs",
                                                  "se",
                                                  "si",
                                                  "sj",
                                                  "sk",
                                                  "sm",
                                                  "sy",
                                                  "tn",
                                                  "tr",
                                                  "ua",
                                                  "uk",
                                                  "us",
                                                  "va",
                                                  "world",
                                                  "xk"
                                                ]
                                              },
                                              "additionalProperties": {
                                                "type": "number",
                                                "default": 0
                                              }
                                            },
                                            "transportation_value": {
                                              "type": "integer"
                                            },
                                            "transportation_values": {
                                              "type": "object",
                                              "propertyNames": {
                                                "type": "string",
                                                "enum": [
                                                  "ad",
                                                  "al",
                                                  "at",
                                                  "ax",
                                                  "ba",
                                                  "be",
                                                  "bg",
                                                  "ch",
                                                  "cy",
                                                  "cz",
                                                  "de",
                                                  "dk",
                                                  "dz",
                                                  "ee",
                                                  "eg",
                                                  "es",
                                                  "fi",
                                                  "fo",
                                                  "fr",
                                                  "gg",
                                                  "gi",
                                                  "gr",
                                                  "hr",
                                                  "hu",
                                                  "ie",
                                                  "il",
                                                  "im",
                                                  "is",
                                                  "it",
                                                  "je",
                                                  "lb",
                                                  "li",
                                                  "lt",
                                                  "lu",
                                                  "lv",
                                                  "ly",
                                                  "ma",
                                                  "mc",
                                                  "md",
                                                  "me",
                                                  "mk",
                                                  "mt",
                                                  "nl",
                                                  "no",
                                                  "pl",
                                                  "ps",
                                                  "pt",
                                                  "ro",
                                                  "rs",
                                                  "se",
                                                  "si",
                                                  "sj",
                                                  "sk",
                                                  "sm",
                                                  "sy",
                                                  "tn",
                                                  "tr",
                                                  "ua",
                                                  "uk",
                                                  "us",
                                                  "va",
                                                  "world",
                                                  "xk"
                                                ]
                                              },
                                              "additionalProperties": {
                                                "type": "number",
                                                "default": 0
                                              }
                                            },
                                            "value": {
                                              "type": "integer"
                                            },
                                            "values": {
                                              "type": "object",
                                              "propertyNames": {
                                                "type": "string",
                                                "enum": [
                                                  "ad",
                                                  "al",
                                                  "at",
                                                  "ax",
                                                  "ba",
                                                  "be",
                                                  "bg",
                                                  "ch",
                                                  "cy",
                                                  "cz",
                                                  "de",
                                                  "dk",
                                                  "dz",
                                                  "ee",
                                                  "eg",
                                                  "es",
                                                  "fi",
                                                  "fo",
                                                  "fr",
                                                  "gg",
                                                  "gi",
                                                  "gr",
                                                  "hr",
                                                  "hu",
                                                  "ie",
                                                  "il",
                                                  "im",
                                                  "is",
                                                  "it",
                                                  "je",
                                                  "lb",
                                                  "li",
                                                  "lt",
                                                  "lu",
                                                  "lv",
                                                  "ly",
                                                  "ma",
                                                  "mc",
                                                  "md",
                                                  "me",
                                                  "mk",
                                                  "mt",
                                                  "nl",
                                                  "no",
                                                  "pl",
                                                  "ps",
                                                  "pt",
                                                  "ro",
                                                  "rs",
                                                  "se",
                                                  "si",
                                                  "sj",
                                                  "sk",
                                                  "sm",
                                                  "sy",
                                                  "tn",
                                                  "tr",
                                                  "ua",
                                                  "uk",
                                                  "us",
                                                  "va",
                                                  "world",
                                                  "xk"
                                                ]
                                              },
                                              "additionalProperties": {
                                                "type": "number",
                                                "default": 0
                                              }
                                            },
                                            "warning": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "packaging": {
                                          "type": "object",
                                          "properties": {
                                            "non_recyclable_and_non_biodegradable_materials": {
                                              "type": "integer"
                                            },
                                            "packagings": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "title": "adjustments_packaging_item",
                                                "properties": {
                                                  "ecoscore_material_score": {
                                                    "type": "integer"
                                                  },
                                                  "ecoscore_shape_ratio": {
                                                    "type": "integer"
                                                  },
                                                  "material": {
                                                    "type": "string"
                                                  },
                                                  "shape": {
                                                    "type": "string"
                                                  },
                                                  "number_of_units": {
                                                    "type": "integer",
                                                    "examples": [
                                                      1
                                                    ]
                                                  },
                                                  "quantity_per_unit": {
                                                    "type": "string",
                                                    "description": "The quantity per packaging unit, as a string.",
                                                    "examples": [
                                                      "33 cL"
                                                    ]
                                                  },
                                                  "quantity_per_unit_unit": {
                                                    "type": "string",
                                                    "examples": [
                                                      "cl"
                                                    ]
                                                  },
                                                  "quantity_per_unit_value": {
                                                    "type": "number",
                                                    "examples": [
                                                      33
                                                    ]
                                                  },
                                                  "recycling": {
                                                    "type": "string",
                                                    "examples": [
                                                      "en:recycle-in-sorting-bin"
                                                    ]
                                                  },
                                                  "weight_measured": {
                                                    "type": "number",
                                                    "examples": [
                                                      12.08
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "score": {
                                              "type": "integer"
                                            },
                                            "value": {
                                              "type": "integer"
                                            },
                                            "warning": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "production_system": {
                                          "type": "object",
                                          "properties": {
                                            "labels": {
                                              "type": "array",
                                              "examples": [
                                                "vegan",
                                                "fat free",
                                                "Kosher"
                                              ],
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "value": {
                                              "type": "integer"
                                            },
                                            "warning": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "threatened_species": {
                                          "type": "object",
                                          "properties": {
                                            "ingredient": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "agribalyse": {
                                      "type": "object",
                                      "properties": {
                                        "agribalyse_proxy_food_code": {
                                          "type": "string"
                                        },
                                        "agribalyse_food_code": {
                                          "type": "string"
                                        },
                                        "co2_agriculture": {
                                          "type": "number"
                                        },
                                        "co2_consumption": {
                                          "type": "integer"
                                        },
                                        "co2_distribution": {
                                          "type": "number"
                                        },
                                        "co2_packaging": {
                                          "type": "number"
                                        },
                                        "co2_processing": {
                                          "type": "number"
                                        },
                                        "co2_total": {
                                          "type": "number"
                                        },
                                        "co2_transportation": {
                                          "type": "number"
                                        },
                                        "code": {
                                          "type": "string"
                                        },
                                        "dqr": {
                                          "type": "string"
                                        },
                                        "ef_agriculture": {
                                          "type": "number"
                                        },
                                        "ef_consumption": {
                                          "type": "integer"
                                        },
                                        "ef_distribution": {
                                          "type": "number"
                                        },
                                        "ef_packaging": {
                                          "type": "number"
                                        },
                                        "ef_processing": {
                                          "type": "number"
                                        },
                                        "ef_total": {
                                          "type": "number"
                                        },
                                        "ef_transportation": {
                                          "type": "number"
                                        },
                                        "is_beverage": {
                                          "type": "integer"
                                        },
                                        "name_en": {
                                          "type": "string",
                                          "description": "This can be returned in many other languages\nlike name_fr (for french).\n"
                                        },
                                        "score": {
                                          "type": "integer"
                                        },
                                        "version": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "grade": {
                                      "type": "string"
                                    },
                                    "grades": {
                                      "type": "object",
                                      "patternProperties": {
                                        "(?<country_code>\\w\\w)": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "missing": {
                                      "type": "object",
                                      "properties": {
                                        "labels": {
                                          "type": "integer"
                                        },
                                        "origins": {
                                          "type": "integer"
                                        },
                                        "packagings": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "missing_data_warning": {
                                      "type": "integer"
                                    },
                                    "previous_data": {
                                      "type": "object",
                                      "properties": {
                                        "grade": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "score": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "agribalyse": {
                                          "type": "object",
                                          "properties": {
                                            "agribalyse_proxy_food_code": {
                                              "type": "string"
                                            },
                                            "agribalyse_food_code": {
                                              "type": "string"
                                            },
                                            "co2_agriculture": {
                                              "type": "number"
                                            },
                                            "co2_consumption": {
                                              "type": "integer"
                                            },
                                            "co2_distribution": {
                                              "type": "number"
                                            },
                                            "co2_packaging": {
                                              "type": "number"
                                            },
                                            "co2_processing": {
                                              "type": "number"
                                            },
                                            "co2_total": {
                                              "type": "number"
                                            },
                                            "co2_transportation": {
                                              "type": "number"
                                            },
                                            "code": {
                                              "type": "string"
                                            },
                                            "dqr": {
                                              "type": "string"
                                            },
                                            "ef_agriculture": {
                                              "type": "number"
                                            },
                                            "ef_consumption": {
                                              "type": "integer"
                                            },
                                            "ef_distribution": {
                                              "type": "number"
                                            },
                                            "ef_packaging": {
                                              "type": "number"
                                            },
                                            "ef_processing": {
                                              "type": "number"
                                            },
                                            "ef_total": {
                                              "type": "number"
                                            },
                                            "ef_transportation": {
                                              "type": "number"
                                            },
                                            "is_beverage": {
                                              "type": "integer"
                                            },
                                            "name_en": {
                                              "type": "string",
                                              "description": "This can be returned in many other languages\nlike name_fr (for french).\n"
                                            },
                                            "score": {
                                              "type": "integer"
                                            },
                                            "version": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "score": {
                                      "type": "integer"
                                    },
                                    "scores": {
                                      "type": "object",
                                      "patternProperties": {
                                        "(?<country_code>\\w\\w)": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "status": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "ecoscore_extended_data_version": {
                                  "type": "string"
                                },
                                "environment_impact_level": {
                                  "type": "string"
                                },
                                "environment_impact_level_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "product_ingredients",
                              "description": "Fields about ingredients of a product",
                              "properties": {
                                "additives_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allergens": {
                                  "type": "string",
                                  "description": "comma separated list of allergens"
                                },
                                "allergens_lc": {
                                  "type": "string",
                                  "description": "language in which `allergens` where input"
                                },
                                "allergens_hierarchy": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allergens_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "ingredients": {
                                  "title": "ingredients",
                                  "type": "array",
                                  "description": "This structure gives the different ingredients and some information about them,\nlike estimate on their quantity.\n",
                                  "items": {
                                    "title": "ingredient",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "ingredients": {
                                        "$ref": "#/paths/~1api~1v3~1product~1%7Bbarcode%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/product/allOf/5/properties/ingredients"
                                      },
                                      "percent": {
                                        "type": "integer",
                                        "description": "The percentage of the ingredient."
                                      },
                                      "percent_estimate": {
                                        "type": "number",
                                        "description": "Estimated percentage of the ingredient."
                                      },
                                      "percent_max": {
                                        "type": [
                                          "string",
                                          "number"
                                        ],
                                        "description": "Maximum percentage of the ingredient."
                                      },
                                      "percent_min": {
                                        "type": "integer",
                                        "description": "Minimum percentage of the ingredient."
                                      },
                                      "text": {
                                        "type": "string",
                                        "description": "Text description of the ingredient."
                                      },
                                      "vegan": {
                                        "type": "string",
                                        "description": "Indicates if the ingredient is vegan."
                                      },
                                      "vegetarian": {
                                        "type": "string",
                                        "description": "Indicates if the ingredient is vegetarian."
                                      }
                                    }
                                  }
                                },
                                "ingredients_analysis": {
                                  "type": "object",
                                  "properties": {
                                    "en:palm-oil": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "en:vegan-status-unknown": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "en:vegetarian-status-unknown": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "ingredients_analysis_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "ingredients_from_or_that_may_be_from_palm_oil_n": {
                                  "type": "integer"
                                },
                                "ingredients_from_palm_oil_n": {
                                  "type": "integer"
                                },
                                "ingredients_from_palm_oil_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "ingredients_hierarchy": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "ingredients_n": {
                                  "type": "integer"
                                },
                                "ingredients_n_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "ingredients_original_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "ingredients_percent_analysis": {
                                  "type": "integer",
                                  "description": "Indicates the result of ingredients analysis processing\n\n* not present -> we didn't run ingredient percent analysis (e.g. we have no ingredients)\n* 1: we estimated the ingredients percent.\n* -1 : we tried to estimate the ingredients, but the values were impossible. (e.g. if the sum of % is above 100%)\n"
                                },
                                "ingredients_sweeteners_n": {
                                  "type": "integer",
                                  "description": "Number of sweeteners additives in the ingredients. Undefined if ingredients are not specified.\n"
                                },
                                "ingredients_non_nutritive_sweeteners_n": {
                                  "type": "integer",
                                  "description": "Number of non-nutritive sweeteners additives (as specified in the Nutri-Score formula) in the ingredients. Undefined if ingredients are not specified.\n"
                                },
                                "ingredients_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "ingredients_lc": {
                                  "type": "string",
                                  "description": "Language that was used to parse the ingredient list. If `ingredients_text` is available\nfor the product main language (`lang`), `ingredients_lc=lang`, otherwise we look at\n`ingredients_text` fields for other languages and set `ingredients_lc` to the first\nnon-empty `ingredient_text`.\n"
                                },
                                "ingredients_text": {
                                  "type": "string",
                                  "description": "Raw list of ingredients. This will get automatically\nparsed and get used to compute the Eco-Score or find allergens, etc..\n\nIt's a copy of ingredients_text in the main language of the product (see `lang` proprety).\n",
                                  "example": "Farine de blé* 67,4%, sucre de canne*, huile de tournesol oléique*, graines de chia* 5,2%, son de blé*, oranges déshydratées * 0,9%, farine de riz*, poudres à lever (acide citrique, carbonates de sodium), arôme naturel d'orange.\n"
                                },
                                "ingredients_text_with_allergens": {
                                  "type": "string",
                                  "description": "Same text as `ingredients_text` but where allergens have HTML elements around them to identify them\n",
                                  "example": "Farine de <span class=\"allergen\">blé*</span> 67,4%, sucre de canne*, huile de tournesol oléique*, graines de chia* 5,2%, <span class=\"allergen\">son de blé*</span>, oranges déshydratées * 0,9%, farine de riz*, poudres à lever (acide citrique, carbonates de sodium), arôme naturel d'orange.\n"
                                },
                                "ingredients_that_may_be_from_palm_oil_n": {
                                  "type": "integer"
                                },
                                "ingredients_that_may_be_from_palm_oil_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "ingredients_with_specified_percent_n": {
                                  "type": "integer"
                                },
                                "ingredients_with_specified_percent_sum": {
                                  "type": "integer"
                                },
                                "ingredients_with_unspecified_percent_n": {
                                  "type": "integer"
                                },
                                "ingredients_with_unspecified_percent_sum": {
                                  "type": "integer"
                                },
                                "known_ingredients_n": {
                                  "type": "integer"
                                },
                                "origins": {
                                  "type": "string",
                                  "description": "Origins of ingredients\n"
                                },
                                "origins_hierarchy": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "origins_lc": {
                                  "type": "string"
                                },
                                "origins_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "traces": {
                                  "type": "string",
                                  "description": "List of substances that might cause allergies\nthat are present in trace amounts in the product\n(this does not include the ingredients, as they\nare not only present in trace amounts).\nIt is taxonomized with the allergens taxonomy. Refer to the [allergens taxonomy](https://static.openfoodfacts.org/data/taxonomies/allergens.json)\n"
                                },
                                "traces_hierarchy": {
                                  "type": "array",
                                  "items": {
                                    "oneOf": [
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  }
                                },
                                "traces_lc": {
                                  "type": "string"
                                },
                                "traces_tags": {
                                  "type": "array",
                                  "items": {
                                    "oneOf": [
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  }
                                },
                                "unknown_ingredients_n": {
                                  "type": "integer"
                                }
                              },
                              "patternProperties": {
                                "ingredients_text_(?<language_code>\\w\\w)": {
                                  "type": "string",
                                  "description": "Raw list of ingredients in language given by 'language_code'.\n\nSee `ingredients_text`\n"
                                },
                                "ingredients_text_with_allergens_(?<language_code>\\w\\w)": {
                                  "description": "Like `ingredients_text_with_allergens` for a particular language\n",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "title": "Product Nutrition Data",
                              "properties": {
                                "nutrition": {
                                  "type": "object",
                                  "description": "Nutrition fields of a product\n\nMost of these properties are read-only.\n\nSee [how to add nutrition data](https://openfoodfacts.github.io/openfoodfacts-server/api/ref-cheatsheet/#add-nutrition-facts-values-units-and-base)\n",
                                  "properties": {
                                    "aggregated_set": {
                                      "type": "object",
                                      "description": "A set that combines nutrient data from preferred sources, with normalized units, \nand for a normalized 100g or 100ml quantity.\n\nIt takes values from multiple sources (by priority: manufacturer, packaging, usda, estimate)\nand normalizes all values to the same unit: g for weights, kJ for energy and energy-kj, kcal for energy-kcal.\n",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "preparation": {
                                              "type": "string",
                                              "enum": [
                                                "as_sold",
                                                "prepared"
                                              ],
                                              "description": "Indicates whether the nutrition values refer to the product *as_sold* or *prepared*.\n\nThe preparation state affects nutrient values.\n"
                                            },
                                            "per": {
                                              "type": "string",
                                              "enum": [
                                                "100g",
                                                "100ml",
                                                "serving"
                                              ],
                                              "description": "The nutrition data on the package can be per serving, per 100g or per 100ml.\n\nThis is essential to understand if values in the `nutrients` object apply for a serving, for 100g or for 100ml.\n"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "nutrients": {
                                              "type": "object",
                                              "description": "All known nutrients for the product.\n\nYou can get all possible nutrients from the\n[nutrients taxonomy](https://static.openfoodfacts.org/data/taxonomies/nutrients.json).\n\nNew nutrients are regularly added.\n\nClients should not break if they encounter an unexpected nutrient to preserve compatibility.\n",
                                              "properties": {
                                                "energy": {
                                                  "description": "It is the same as `energy-kj` if we have it, or computed from `energy-kcal` otherwise\n\n(per 100g or per serving) in kj\n",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "energy_kcal": {
                                                  "description": "energy in kcal, if it is specified\n\n(per 100g or per serving) in a standard unit (g or ml)\n",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "energy_kj": {
                                                  "description": "energy in kj, if it is specified\n\n(per 100g or per serving) in a standard unit (g or ml)\n",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "fat": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "saturated-fat": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "trans-fat": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "cholesterol": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "salt": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "sodium": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "carbohydrates": {
                                                  "description": "This is the available carbohydrates (excluding fiber), also known as net carbohydrates\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "carbohydrates-total": {
                                                  "description": "This follows the US / Canada definition of carbohydrates which includes fiber, also known as gross carbohydrates\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "fiber": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "sugars": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "added-sugars": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "proteins": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "vitamin-d": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "calcium": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "iron": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "potassium": {
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "source": {
                                                          "type": "string",
                                                          "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n",
                                                          "example": "packaging"
                                                        },
                                                        "source_per": {
                                                          "type": "string",
                                                          "description": "Indicates if the original source is per serving or per 100g, 100ml\n",
                                                          "enum": [
                                                            "100g",
                                                            "100ml",
                                                            "serving"
                                                          ]
                                                        },
                                                        "source_index": {
                                                          "type": "integer",
                                                          "description": "Index of the source nutrient set in the input_sets array of the nutrition field\n",
                                                          "minimum": 0
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "additionalProperties": {
                                                "description": "Quantity of other nutrients from the nutrients taxonomy.\n\nSee [nutrients taxonomy file](https://static.openfoodfacts.org/data/taxonomies/nutrients.json) for all nutrients in Open Food Facts.\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "properties": {
                                                      "value": {
                                                        "type": "number",
                                                        "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                        "examples": [
                                                          2,
                                                          4.1
                                                        ]
                                                      },
                                                      "unit": {
                                                        "type": "string",
                                                        "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                        "examples": [
                                                          "公斤",
                                                          "公升",
                                                          "kg",
                                                          "кг",
                                                          "l",
                                                          "л",
                                                          "毫克",
                                                          "mg",
                                                          "мг",
                                                          "mcg",
                                                          "µg",
                                                          "oz",
                                                          "fl oz",
                                                          "dl",
                                                          "дл",
                                                          "cl",
                                                          "кл",
                                                          "斤",
                                                          "g",
                                                          "",
                                                          " ",
                                                          "kJ",
                                                          "克",
                                                          "公克",
                                                          "г",
                                                          "мл",
                                                          "ml",
                                                          "mmol/l",
                                                          "毫升",
                                                          "% vol",
                                                          "ph",
                                                          "%",
                                                          "% dv",
                                                          "% vol (alcohol)",
                                                          "iu",
                                                          "mol/l",
                                                          "mval/l",
                                                          "ppm",
                                                          "�rh",
                                                          "�fh",
                                                          "�e",
                                                          "�dh",
                                                          "gpg"
                                                        ]
                                                      },
                                                      "modifier": {
                                                        "type": "string",
                                                        "enum": [
                                                          "<",
                                                          "<=",
                                                          "~",
                                                          ">=",
                                                          ">"
                                                        ],
                                                        "description": "This property is optional.\n"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "source": {
                                                        "type": "string",
                                                        "description": "Indicates the original source like “packaging”, “manufacturer”, “estimate”, “usda”\n"
                                                      },
                                                      "source_per": {
                                                        "type": "string",
                                                        "description": "Indicates if the original source is per serving or per 100g, 100ml\n"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "input_sets": {
                                      "type": "array",
                                      "description": "An array of nutrient sets of the product.\n\nEach nutrient set represents a version of the nutrition facts, defined by a combination of:\n- the preparation state (e.g. *as_sold* or *prepared*),\n- the reference quantity (*per 100g*, *per 100ml* or *per serving*), and\n- the source of the data (e.g. *packaging*, *manufacturer*, *estimate*).\n\nThis structure allows capturing multiple nutritional profiles for a single product.\n",
                                      "items": {
                                        "type": "object",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "nutrients": {
                                                "type": "object",
                                                "description": "All known nutrients for the product.\n\nYou can get all possible nutrients from the\n[nutrients taxonomy](https://static.openfoodfacts.org/data/taxonomies/nutrients.json).\n\nNew nutrients are regularly added.\n\nClients should not break if they encounter an unexpected nutrient to preserve compatibility.\n",
                                                "properties": {
                                                  "energy": {
                                                    "description": "It is the same as `energy-kj` if we have it, or computed from `energy-kcal` otherwise\n\n(per 100g or per serving) in kj\n",
                                                    "type": "object",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "energy_kcal": {
                                                    "description": "energy in kcal, if it is specified\n\n(per 100g or per serving) in a standard unit (g or ml)\n",
                                                    "type": "object",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "energy_kj": {
                                                    "description": "energy in kj, if it is specified\n\n(per 100g or per serving) in a standard unit (g or ml)\n",
                                                    "type": "object",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "fat": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "saturated-fat": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "trans-fat": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "cholesterol": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "salt": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "sodium": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "carbohydrates-total": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "carbohydrates": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "fiber": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "sugars": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "added-sugars": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "proteins": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "vitamin-d": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "calcium": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "iron": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "potassium": {
                                                    "type": "object",
                                                    "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "value_string": {
                                                            "type": "string",
                                                            "description": "A string representing the value of the quantity.\n",
                                                            "examples": [
                                                              "2.0",
                                                              "4.1"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                        "properties": {
                                                          "value": {
                                                            "type": "number",
                                                            "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                            "examples": [
                                                              2,
                                                              4.1
                                                            ]
                                                          },
                                                          "unit": {
                                                            "type": "string",
                                                            "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                            "examples": [
                                                              "公斤",
                                                              "公升",
                                                              "kg",
                                                              "кг",
                                                              "l",
                                                              "л",
                                                              "毫克",
                                                              "mg",
                                                              "мг",
                                                              "mcg",
                                                              "µg",
                                                              "oz",
                                                              "fl oz",
                                                              "dl",
                                                              "дл",
                                                              "cl",
                                                              "кл",
                                                              "斤",
                                                              "g",
                                                              "",
                                                              " ",
                                                              "kJ",
                                                              "克",
                                                              "公克",
                                                              "г",
                                                              "мл",
                                                              "ml",
                                                              "mmol/l",
                                                              "毫升",
                                                              "% vol",
                                                              "ph",
                                                              "%",
                                                              "% dv",
                                                              "% vol (alcohol)",
                                                              "iu",
                                                              "mol/l",
                                                              "mval/l",
                                                              "ppm",
                                                              "�rh",
                                                              "�fh",
                                                              "�e",
                                                              "�dh",
                                                              "gpg"
                                                            ]
                                                          },
                                                          "modifier": {
                                                            "type": "string",
                                                            "enum": [
                                                              "<",
                                                              "<=",
                                                              "~",
                                                              ">=",
                                                              ">"
                                                            ],
                                                            "description": "This property is optional.\n"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": {
                                                  "type": "object",
                                                  "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "value_string": {
                                                          "type": "string",
                                                          "description": "A string representing the value of the quantity.\n",
                                                          "examples": [
                                                            "2.0",
                                                            "4.1"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Quantity of a nutrient\n\n(per 100g, per 100ml or per serving) in a standard unit (g or ml)\n",
                                                      "properties": {
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A normalized float value for the quantity, computed from `value_string` if it exists.\n",
                                                          "examples": [
                                                            2,
                                                            4.1
                                                          ]
                                                        },
                                                        "unit": {
                                                          "type": "string",
                                                          "description": "The unit of the value entered by the contributor (a user or the manufacturer), for the product.\nIn most cases, this unit is the unit displayed on the product for the nutrient, but it is not guaranteed, as some apps may force specific units when writing nutrient values.          \n\nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg` for milligrams\n* `μg` for micrograms\n* `cl` for centiliters\n* `ml` for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol` for alcohol vol per 100 ml\n\n🤓 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n[default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n",
                                                          "examples": [
                                                            "公斤",
                                                            "公升",
                                                            "kg",
                                                            "кг",
                                                            "l",
                                                            "л",
                                                            "毫克",
                                                            "mg",
                                                            "мг",
                                                            "mcg",
                                                            "µg",
                                                            "oz",
                                                            "fl oz",
                                                            "dl",
                                                            "дл",
                                                            "cl",
                                                            "кл",
                                                            "斤",
                                                            "g",
                                                            "",
                                                            " ",
                                                            "kJ",
                                                            "克",
                                                            "公克",
                                                            "г",
                                                            "мл",
                                                            "ml",
                                                            "mmol/l",
                                                            "毫升",
                                                            "% vol",
                                                            "ph",
                                                            "%",
                                                            "% dv",
                                                            "% vol (alcohol)",
                                                            "iu",
                                                            "mol/l",
                                                            "mval/l",
                                                            "ppm",
                                                            "�rh",
                                                            "�fh",
                                                            "�e",
                                                            "�dh",
                                                            "gpg"
                                                          ]
                                                        },
                                                        "modifier": {
                                                          "type": "string",
                                                          "enum": [
                                                            "<",
                                                            "<=",
                                                            "~",
                                                            ">=",
                                                            ">"
                                                          ],
                                                          "description": "This property is optional.\n"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "preparation": {
                                                "type": "string",
                                                "enum": [
                                                  "as_sold",
                                                  "prepared"
                                                ],
                                                "description": "Indicates whether the nutrition values refer to the product *as_sold* or *prepared*.\n\nThe preparation state affects nutrient values.\n"
                                              },
                                              "per": {
                                                "type": "string",
                                                "enum": [
                                                  "100g",
                                                  "100ml",
                                                  "serving"
                                                ],
                                                "description": "The nutrition data on the package can be per serving, per 100g or per 100ml.\n\nThis is essential to understand if values in the `nutrients` object apply for a serving, for 100g or for 100ml.\n"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "per_quantity": {
                                                "type": "number",
                                                "minimum": 0,
                                                "description": "The nutrition data on the package can be per serving, per 100g or per 100ml.\nWhen the data is given per serving, \nthe actual quantity that defines one serving may vary between products \nand is stored in this field.\n\nThis is essential to understand to which quantity values in `nutrients` apply for.\n\nFor example, if the label states \"per 250g\", then this field should be *250*.\n",
                                                "example": 250
                                              },
                                              "per_unit": {
                                                "type": "string",
                                                "description": "The nutrition data on the package can be per serving, per 100g or per 100ml.\nWhen the data is given per serving, \nthe actual unit that defines one serving may vary between products \nand is stored in this field.\n\nThis is essential to understand to which quantity values in `nutrients` apply for.\n\nFor example, if the label states \"per 250g\", then this field should be *g*.\n",
                                                "example": "g"
                                              },
                                              "source": {
                                                "type": "string",
                                                "examples": [
                                                  "packaging",
                                                  "manufacturer",
                                                  "usda",
                                                  "estimate"
                                                ],
                                                "description": "The nutrition data of products can be obtained through several sources.\n"
                                              },
                                              "source_description": {
                                                "type": "string",
                                                "description": "A description of the source used for this nutrition set.\n\nThis provides more information on how and when the source was used.\n\nThis property is optional.\n",
                                                "examples": [
                                                  "USDA non-branded foods 2025/04",
                                                  "Import from org-nestle-france through Equadis",
                                                  "Estimate from ingredients”, “Estimate from category: Olive oils"
                                                ]
                                              },
                                              "last_updated_t": {
                                                "type": "integer",
                                                "description": "A timestamp indicating when this nutrition set was last updated.\n",
                                                "examples": [
                                                  1631270265,
                                                  1512153487
                                                ]
                                              },
                                              "unspecified_nutrients": {
                                                "type": "array",
                                                "description": "A list of nutrients that are typically present, but that are not specified for this particular product,\nespecially for packaging source.\n\nThis property is optional.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "example": [
                                                  "fibers"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "title": "ProductNutriscore",
                              "type": "object",
                              "properties": {
                                "nutriscore": {
                                  "title": "Nutriscores",
                                  "type": "object",
                                  "properties": {
                                    "2021": {
                                      "title": "Nutriscore2021",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "category_available": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                1
                                              ]
                                            },
                                            "grade": {
                                              "examples": [
                                                "d"
                                              ],
                                              "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                                              "type": "string",
                                              "enum": [
                                                "a",
                                                "b",
                                                "c",
                                                "d",
                                                "e"
                                              ]
                                            },
                                            "nutrients_available": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                1
                                              ]
                                            },
                                            "nutriscore_applicable": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                1
                                              ]
                                            },
                                            "nutriscore_computed": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                1
                                              ]
                                            },
                                            "score": {
                                              "type": "integer",
                                              "examples": [
                                                13,
                                                18
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "data": {
                                              "title": "Nutriscore2021Data",
                                              "allOf": [
                                                {
                                                  "title": "Nutriscore2021InnerData",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "is_beverage": {
                                                          "type": "integer",
                                                          "enum": [
                                                            0,
                                                            1
                                                          ],
                                                          "examples": [
                                                            0
                                                          ]
                                                        },
                                                        "is_cheese": {
                                                          "type": "integer",
                                                          "enum": [
                                                            0,
                                                            1
                                                          ],
                                                          "examples": [
                                                            0
                                                          ]
                                                        },
                                                        "is_water": {
                                                          "type": "integer",
                                                          "enum": [
                                                            0,
                                                            1
                                                          ],
                                                          "examples": [
                                                            0
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "properties": {
                                                        "is_fat": {
                                                          "type": "integer",
                                                          "enum": [
                                                            0,
                                                            1
                                                          ],
                                                          "examples": [
                                                            0
                                                          ]
                                                        },
                                                        "energy": {
                                                          "type": "integer",
                                                          "examples": [
                                                            1996
                                                          ]
                                                        },
                                                        "energy_points": {
                                                          "type": "integer",
                                                          "examples": [
                                                            5
                                                          ]
                                                        },
                                                        "energy_value": {
                                                          "type": "integer",
                                                          "examples": [
                                                            1996
                                                          ]
                                                        },
                                                        "fiber": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            3.8
                                                          ]
                                                        },
                                                        "fiber_points": {
                                                          "type": "integer",
                                                          "examples": [
                                                            4
                                                          ]
                                                        },
                                                        "fiber_value": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            3.8
                                                          ]
                                                        },
                                                        "fruits_vegetables_nuts_colza_walnut_olive_oils": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            0
                                                          ]
                                                        },
                                                        "fruits_vegetables_nuts_colza_walnut_olive_oils_points": {
                                                          "type": "integer",
                                                          "examples": [
                                                            0
                                                          ]
                                                        },
                                                        "fruits_vegetables_nuts_colza_walnut_olive_oils_value": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            0
                                                          ]
                                                        },
                                                        "proteins": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            6.6
                                                          ]
                                                        },
                                                        "proteins_points": {
                                                          "type": "integer",
                                                          "examples": [
                                                            4
                                                          ]
                                                        },
                                                        "proteins_value": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            6.6
                                                          ]
                                                        },
                                                        "saturated_fat": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            6.2
                                                          ]
                                                        },
                                                        "saturated_fat_points": {
                                                          "type": "integer",
                                                          "examples": [
                                                            6
                                                          ]
                                                        },
                                                        "saturated_fat_value": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            6.2
                                                          ]
                                                        },
                                                        "sodium": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            210
                                                          ]
                                                        },
                                                        "sodium_points": {
                                                          "type": "integer",
                                                          "examples": [
                                                            2
                                                          ]
                                                        },
                                                        "sodium_value": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            210
                                                          ]
                                                        },
                                                        "sugars": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            21.5
                                                          ]
                                                        },
                                                        "sugars_points": {
                                                          "type": "integer",
                                                          "examples": [
                                                            4
                                                          ]
                                                        },
                                                        "sugars_value": {
                                                          "type": "number",
                                                          "format": "float",
                                                          "examples": [
                                                            21.5
                                                          ]
                                                        },
                                                        "negative_points": {
                                                          "type": "integer",
                                                          "examples": [
                                                            17
                                                          ]
                                                        },
                                                        "positive_points": {
                                                          "type": "integer",
                                                          "examples": [
                                                            4
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "grade": {
                                                      "examples": [
                                                        "d"
                                                      ],
                                                      "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                                                      "type": "string",
                                                      "enum": [
                                                        "a",
                                                        "b",
                                                        "c",
                                                        "d",
                                                        "e"
                                                      ]
                                                    },
                                                    "score": {
                                                      "type": "integer",
                                                      "examples": [
                                                        13
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "2023": {
                                      "title": "Nutriscore2023",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "category_available": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                1
                                              ]
                                            },
                                            "grade": {
                                              "examples": [
                                                "d"
                                              ],
                                              "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                                              "type": "string",
                                              "enum": [
                                                "a",
                                                "b",
                                                "c",
                                                "d",
                                                "e"
                                              ]
                                            },
                                            "nutrients_available": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                1
                                              ]
                                            },
                                            "nutriscore_applicable": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                1
                                              ]
                                            },
                                            "nutriscore_computed": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                1
                                              ]
                                            },
                                            "score": {
                                              "type": "integer",
                                              "examples": [
                                                13,
                                                18
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "data": {
                                              "title": "Nutriscore2023Data",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "is_beverage": {
                                                      "type": "integer",
                                                      "enum": [
                                                        0,
                                                        1
                                                      ],
                                                      "examples": [
                                                        0
                                                      ]
                                                    },
                                                    "is_cheese": {
                                                      "type": "integer",
                                                      "enum": [
                                                        0,
                                                        1
                                                      ],
                                                      "examples": [
                                                        0
                                                      ]
                                                    },
                                                    "is_water": {
                                                      "type": "integer",
                                                      "enum": [
                                                        0,
                                                        1
                                                      ],
                                                      "examples": [
                                                        0
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "properties": {
                                                    "is_fat_oil_nuts_seeds": {
                                                      "type": "integer",
                                                      "enum": [
                                                        0,
                                                        1
                                                      ],
                                                      "examples": [
                                                        0
                                                      ]
                                                    },
                                                    "is_red_meat_product": {
                                                      "type": "integer",
                                                      "enum": [
                                                        0,
                                                        1
                                                      ],
                                                      "examples": [
                                                        0
                                                      ]
                                                    },
                                                    "components": {
                                                      "title": "Nutriscore2023DataComponents",
                                                      "type": "object",
                                                      "properties": {
                                                        "negative": {
                                                          "type": "array",
                                                          "items": {
                                                            "title": "NutriscoreComponent",
                                                            "type": "object",
                                                            "properties": {
                                                              "id": {
                                                                "type": "string",
                                                                "examples": [
                                                                  "energy",
                                                                  "sugars",
                                                                  "saturated_fat",
                                                                  "salt",
                                                                  "fiber",
                                                                  "fruits_vegetables_legumes"
                                                                ]
                                                              },
                                                              "points": {
                                                                "type": "integer",
                                                                "examples": [
                                                                  5,
                                                                  6,
                                                                  7,
                                                                  2,
                                                                  1,
                                                                  0
                                                                ]
                                                              },
                                                              "points_max": {
                                                                "type": "integer",
                                                                "examples": [
                                                                  10,
                                                                  15,
                                                                  20,
                                                                  25,
                                                                  5,
                                                                  5
                                                                ]
                                                              },
                                                              "unit": {
                                                                "type": "string",
                                                                "examples": [
                                                                  "kJ",
                                                                  "g",
                                                                  "%"
                                                                ]
                                                              },
                                                              "value": {
                                                                "type": [
                                                                  "null",
                                                                  "number"
                                                                ],
                                                                "format": "float",
                                                                "examples": [
                                                                  21.5,
                                                                  6.2,
                                                                  0.53,
                                                                  3.8,
                                                                  0
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "positive": {
                                                          "type": "array",
                                                          "items": {
                                                            "title": "NutriscoreComponent",
                                                            "type": "object",
                                                            "properties": {
                                                              "id": {
                                                                "type": "string",
                                                                "examples": [
                                                                  "energy",
                                                                  "sugars",
                                                                  "saturated_fat",
                                                                  "salt",
                                                                  "fiber",
                                                                  "fruits_vegetables_legumes"
                                                                ]
                                                              },
                                                              "points": {
                                                                "type": "integer",
                                                                "examples": [
                                                                  5,
                                                                  6,
                                                                  7,
                                                                  2,
                                                                  1,
                                                                  0
                                                                ]
                                                              },
                                                              "points_max": {
                                                                "type": "integer",
                                                                "examples": [
                                                                  10,
                                                                  15,
                                                                  20,
                                                                  25,
                                                                  5,
                                                                  5
                                                                ]
                                                              },
                                                              "unit": {
                                                                "type": "string",
                                                                "examples": [
                                                                  "kJ",
                                                                  "g",
                                                                  "%"
                                                                ]
                                                              },
                                                              "value": {
                                                                "type": [
                                                                  "null",
                                                                  "number"
                                                                ],
                                                                "format": "float",
                                                                "examples": [
                                                                  21.5,
                                                                  6.2,
                                                                  0.53,
                                                                  3.8,
                                                                  0
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "count_proteins": {
                                                      "type": "number",
                                                      "format": "float",
                                                      "examples": [
                                                        0
                                                      ]
                                                    },
                                                    "count_proteins_reason": {
                                                      "type": "string",
                                                      "examples": [
                                                        "negative_points_greater_than_or_equal_to_11"
                                                      ]
                                                    },
                                                    "negative_points": {
                                                      "type": "integer",
                                                      "examples": [
                                                        19
                                                      ]
                                                    },
                                                    "positive_points": {
                                                      "type": "integer",
                                                      "examples": [
                                                        1
                                                      ]
                                                    },
                                                    "negative_points_max": {
                                                      "type": "integer",
                                                      "examples": [
                                                        55
                                                      ]
                                                    },
                                                    "positive_points_max": {
                                                      "type": "integer",
                                                      "examples": [
                                                        10
                                                      ]
                                                    },
                                                    "positive_nutrients": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "examples": [
                                                        [
                                                          "fiber",
                                                          "fruits_vegetables_legumes"
                                                        ]
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                "nutriscore_2021_tags": {
                                  "type": "array",
                                  "items": {
                                    "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                                    "type": "string",
                                    "enum": [
                                      "a",
                                      "b",
                                      "c",
                                      "d",
                                      "e"
                                    ]
                                  },
                                  "examples": [
                                    [
                                      "d"
                                    ]
                                  ]
                                },
                                "nutriscore_2023_tags": {
                                  "type": "array",
                                  "items": {
                                    "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                                    "type": "string",
                                    "enum": [
                                      "a",
                                      "b",
                                      "c",
                                      "d",
                                      "e"
                                    ]
                                  },
                                  "examples": [
                                    [
                                      "d"
                                    ]
                                  ]
                                },
                                "nutriscore_data": {
                                  "title": "Nutriscore2021Data",
                                  "allOf": [
                                    {
                                      "title": "Nutriscore2021InnerData",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "is_beverage": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                0
                                              ]
                                            },
                                            "is_cheese": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                0
                                              ]
                                            },
                                            "is_water": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                0
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "is_fat": {
                                              "type": "integer",
                                              "enum": [
                                                0,
                                                1
                                              ],
                                              "examples": [
                                                0
                                              ]
                                            },
                                            "energy": {
                                              "type": "integer",
                                              "examples": [
                                                1996
                                              ]
                                            },
                                            "energy_points": {
                                              "type": "integer",
                                              "examples": [
                                                5
                                              ]
                                            },
                                            "energy_value": {
                                              "type": "integer",
                                              "examples": [
                                                1996
                                              ]
                                            },
                                            "fiber": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                3.8
                                              ]
                                            },
                                            "fiber_points": {
                                              "type": "integer",
                                              "examples": [
                                                4
                                              ]
                                            },
                                            "fiber_value": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                3.8
                                              ]
                                            },
                                            "fruits_vegetables_nuts_colza_walnut_olive_oils": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                0
                                              ]
                                            },
                                            "fruits_vegetables_nuts_colza_walnut_olive_oils_points": {
                                              "type": "integer",
                                              "examples": [
                                                0
                                              ]
                                            },
                                            "fruits_vegetables_nuts_colza_walnut_olive_oils_value": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                0
                                              ]
                                            },
                                            "proteins": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                6.6
                                              ]
                                            },
                                            "proteins_points": {
                                              "type": "integer",
                                              "examples": [
                                                4
                                              ]
                                            },
                                            "proteins_value": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                6.6
                                              ]
                                            },
                                            "saturated_fat": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                6.2
                                              ]
                                            },
                                            "saturated_fat_points": {
                                              "type": "integer",
                                              "examples": [
                                                6
                                              ]
                                            },
                                            "saturated_fat_value": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                6.2
                                              ]
                                            },
                                            "sodium": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                210
                                              ]
                                            },
                                            "sodium_points": {
                                              "type": "integer",
                                              "examples": [
                                                2
                                              ]
                                            },
                                            "sodium_value": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                210
                                              ]
                                            },
                                            "sugars": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                21.5
                                              ]
                                            },
                                            "sugars_points": {
                                              "type": "integer",
                                              "examples": [
                                                4
                                              ]
                                            },
                                            "sugars_value": {
                                              "type": "number",
                                              "format": "float",
                                              "examples": [
                                                21.5
                                              ]
                                            },
                                            "negative_points": {
                                              "type": "integer",
                                              "examples": [
                                                17
                                              ]
                                            },
                                            "positive_points": {
                                              "type": "integer",
                                              "examples": [
                                                4
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "grade": {
                                          "examples": [
                                            "d"
                                          ],
                                          "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                                          "type": "string",
                                          "enum": [
                                            "a",
                                            "b",
                                            "c",
                                            "d",
                                            "e"
                                          ]
                                        },
                                        "score": {
                                          "type": "integer",
                                          "examples": [
                                            13
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "nutriscore_grade": {
                                  "examples": [
                                    "d"
                                  ],
                                  "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                                  "type": "string",
                                  "enum": [
                                    "a",
                                    "b",
                                    "c",
                                    "d",
                                    "e"
                                  ]
                                },
                                "nutriscore_score": {
                                  "description": "Nutri-Score for the product as an integer (see also `nutriscore_grade`).\n",
                                  "type": "integer",
                                  "examples": [
                                    13
                                  ]
                                },
                                "nutriscore_score_opposite": {
                                  "type": "integer",
                                  "examples": [
                                    -13
                                  ]
                                },
                                "nutriscore_tags": {
                                  "type": "array",
                                  "items": {
                                    "description": "Nutri-Score for the product as a letter.\n\nSee https://world.openfoodfacts.org/nutriscore.\n",
                                    "type": "string",
                                    "enum": [
                                      "a",
                                      "b",
                                      "c",
                                      "d",
                                      "e"
                                    ]
                                  },
                                  "examples": [
                                    [
                                      "d"
                                    ]
                                  ]
                                },
                                "nutriscore_version": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "This is data that is linked to products data quality\n",
                              "properties": {
                                "data_quality_bugs_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Each data quality bug describes a data quality bug on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
                                  }
                                },
                                "data_quality_errors_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Each Data Quality Error describes a data quality error on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
                                  }
                                },
                                "data_quality_info_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Each Data Quality Info describes a data quality info on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
                                  }
                                },
                                "data_quality_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Each Data Quality tag describes a data quality issue on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
                                  }
                                },
                                "data_quality_warnings_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Each Data Quality warning tag describes a data quality warning on the product.\n\nRefer to the [data quality taxonomy](https://static.openfoodfacts.org/data/taxonomies/data_quality.json)\n"
                                  }
                                },
                                "data_sources": {
                                  "type": "string",
                                  "description": "Source of data imported from producers.\n"
                                },
                                "data_sources_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "last_check_dates_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "last_checked_t": {
                                  "type": "integer"
                                },
                                "last_checker": {
                                  "type": "string"
                                },
                                "states": {
                                  "description": "comma separated list of values indicating some states of the product,\nlike things to be done, or to be completed.\nSee [states taxonomy](https://static.openfoodfacts.net/data/taxonomies/states.json)\n",
                                  "type": "string"
                                },
                                "states_hierarchy": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "states_tags": {
                                  "type": "array",
                                  "items": {
                                    "description": "Each state describe something that is completed or is to be done or improved on the product.\n\nRefer to [states taxonomy](https://static.openfoodfacts.net/data/taxonomies/states.json)\n",
                                    "type": "string"
                                  }
                                },
                                "misc_tags": {
                                  "description": "Information about different aspect of the product\n  Refer to [misc taxonomy](https://static.openfoodfacts.org/data/taxonomies/misc.json)\n",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            {
                              "title": "product_extended",
                              "type": "object",
                              "properties": {
                                "additives_original_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "additives_prev_original_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "added_countries_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "allergens_from_ingredients": {
                                  "type": "string"
                                },
                                "allergens_from_user": {
                                  "type": "string"
                                },
                                "amino_acids_prev_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "amino_acids_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "carbon_footprint_percent_of_known_ingredients": {
                                  "type": "integer"
                                },
                                "categories_properties": {
                                  "type": "object",
                                  "properties": {
                                    "agribalyse_food_code:en": {
                                      "type": "string"
                                    },
                                    "agribalyse_proxy_food_code:en": {
                                      "type": "string"
                                    },
                                    "ciqual_food_code:en": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "categories_properties_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "category_properties": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "description": "those are properties taken from the category taxonomy",
                                    "type": "string"
                                  }
                                },
                                "ciqual_food_name_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "compared_to_category": {
                                  "type": "string",
                                  "description": "the category to use for comparison.\n\n**TODO** explain how it is chosen.\n"
                                },
                                "conservation_conditions": {
                                  "type": "string"
                                },
                                "customer_service": {
                                  "type": "string",
                                  "description": "Contact info of customer service.\n"
                                },
                                "expiration_date": {
                                  "type": "string"
                                },
                                "link": {
                                  "type": "string",
                                  "description": "link to the product on the website of the producer\n"
                                },
                                "main_countries_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "minerals_prev_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "minerals_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "owner_fields": {
                                  "type": "object",
                                  "description": "Those are fields provided by the producer (through producers platform),\nand the value he provided.\n",
                                  "properties": {
                                    "additionalProperties": {
                                      "description": "you can retrieve all kind of properties, the same as on the parent object (the product).\nIt's not processed entries (like tags for example) but raw ones.\n",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "nova_groups_markers": {
                                  "type": "object",
                                  "description": "Detail of ingredients or processing that makes the products having Nova 3 or 4\n",
                                  "propertyNames": {
                                    "description": "Markers of level 3, 4, ...",
                                    "type": "integer",
                                    "enum": [
                                      3,
                                      4
                                    ]
                                  },
                                  "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "description": "This array has two elements for each marker. The first element is the tag type of the marker (e.g. \"ingredients\", \"additives\", \"categories\"), and the second is the tag id in the taxonomy (e.g. \"en:e471\")",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "nucleotides_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "origin": {
                                  "type": "string"
                                },
                                "purchase_places": {
                                  "type": "string",
                                  "description": "Country, state, or city where the product can be purchased.\n",
                                  "example": "Paris"
                                },
                                "purchase_places_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "stores": {
                                  "type": "string",
                                  "description": "Distributor name.\n",
                                  "example": "Walmart"
                                },
                                "stores_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "traces_from_ingredients": {
                                  "type": "string"
                                },
                                "traces_from_user": {
                                  "type": "string"
                                }
                              },
                              "patternProperties": {
                                "conservation_conditions_(?<language_code>\\w\\w)": {
                                  "type": "string"
                                },
                                "customer_service_(?<language_code>\\w\\w)": {
                                  "type": "string"
                                },
                                "origin_(?<language_code>\\w\\w)": {
                                  "type": "string",
                                  "description": "`origin` in language indicated by `language_code`\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Metadata of a product (author, editors, creation date, etc.)\n",
                              "properties": {
                                "created_t": {
                                  "type": "integer",
                                  "description": "Date when the product was added (UNIX timestamp format).\nSee also `entry_dates_tags`\n",
                                  "example": 1457680652
                                },
                                "creator": {
                                  "type": "string",
                                  "description": "The contributor who added the product first.\n"
                                },
                                "editors_tags": {
                                  "description": "List of editors who edited the product.\n",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "informers_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "interface_version_created": {
                                  "type": "string"
                                },
                                "interface_version_modified": {
                                  "type": "string"
                                },
                                "languages": {
                                  "type": "object",
                                  "patternProperties": {
                                    "en:(?<language_name>\\w\\w)": {
                                      "type": "integer",
                                      "description": "**TODO** explain !\n"
                                    }
                                  }
                                },
                                "languages_codes": {
                                  "type": "object",
                                  "patternProperties": {
                                    "(?<language_code>\\w\\w)": {
                                      "type": "integer"
                                    }
                                  },
                                  "description": "Same as `languages` but by language code, instead of language tags\n"
                                },
                                "languages_hierarchy": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "languages_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "last_edit_dates_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "last_editor": {
                                  "type": "string"
                                },
                                "last_modified_by": {
                                  "type": "string",
                                  "description": "The username of the user who last modified the product.\n",
                                  "example": "sebleouf"
                                },
                                "last_modified_t": {
                                  "type": "integer",
                                  "description": "Date when the product page was last modified.\nThis date is updated only when primary data is modified (data entered by the user or updated by an interface)\n"
                                },
                                "last_updated_t": {
                                  "type": "integer",
                                  "description": "Date when the product page was last modified.\nThis date is updated when primary data or secondary data is modified\n(primary: data entered by a user or read from an interface, secondary: data computed by a utility\nsuch as update_all_products.pl)\n"
                                },
                                "owner": {
                                  "description": "Id of the producer in case he provides his own data about a product (producer platform).\n",
                                  "type": "string"
                                },
                                "owners_tags": {
                                  "description": "Tagyfied version of owner\n",
                                  "type": "string"
                                },
                                "photographers_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "rev": {
                                  "description": "revision number of this product version (each edit adds a revision)",
                                  "type": "integer"
                                },
                                "sources": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "product_meta_source",
                                    "properties": {
                                      "fields": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "images": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      },
                                      "import_t": {
                                        "type": "integer"
                                      },
                                      "manufacturer": {
                                        "type": [
                                          "integer",
                                          "string"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "source_licence": {
                                        "type": "string"
                                      },
                                      "source_licence_url": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": [
                                          "null",
                                          "string"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "sources_fields": {
                                  "type": "object",
                                  "title": "product_meta_source_fields",
                                  "properties": {
                                    "org-gs1": {
                                      "type": "object",
                                      "properties": {
                                        "gln": {
                                          "type": "string"
                                        },
                                        "gpcCategoryCode": {
                                          "type": "string"
                                        },
                                        "gpcCategoryName": {
                                          "type": "string"
                                        },
                                        "isAllergenRelevantDataProvided": {
                                          "type": "string"
                                        },
                                        "lastChangeDateTime": {
                                          "type": "string"
                                        },
                                        "partyName": {
                                          "type": "string"
                                        },
                                        "productionVariantDescription": {
                                          "type": "string"
                                        },
                                        "publicationDateTime": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "teams": {
                                  "type": "string"
                                },
                                "teams_tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "update_key": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Knowledge panels for a product\n",
                              "properties": {
                                "knowledge_panels": {
                                  "type": "object",
                                  "title": "panels",
                                  "description": "The panels object is a dictionary of individual panel objects.\nEach key of the dictionary is the id of the panel, and the value is the panel object.\n\nApps typically display a number of root panels with known panel ids (e.g. health_card and environment_card). Panels can reference other panels and display them as sub-panels.",
                                  "examples": [
                                    {
                                      "additionalProperties": "string"
                                    }
                                  ],
                                  "additionalProperties": {
                                    "title": "panel",
                                    "type": "object",
                                    "description": "Each panel contains an optional title and an optional array of elements.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of the panel. If set to \"card\", the panel and its sub-panels should be displayed in a card. If set to \"inline\", the panel should have its content always displayed."
                                      },
                                      "expanded": {
                                        "type": "boolean",
                                        "description": "If true, the panel is to be displayed already expanded. If false, only the title should be displayed, and the user should be able to click or tap it to open the panel and display the elements."
                                      },
                                      "expand_for": {
                                        "type": "string",
                                        "description": "If set to \"large\", the content of the panel should be expanded on large screens, but it should still be possible to unexpand it."
                                      },
                                      "evaluation": {
                                        "type": "string",
                                        "description": "An evaluation status specifically for this title element. This can be used to directly color the icon if 'icon_color_from_evaluation' is true and this field is present, or it might provide context for the title itself. e.g. bad is red. Please be careful in choosing colors, to avoid 50 shades of red.",
                                        "example": "bad",
                                        "enum": [
                                          "good",
                                          "average",
                                          "neutral",
                                          "bad",
                                          "unknown"
                                        ]
                                      },
                                      "half_width_on_mobile": {
                                        "type": "boolean",
                                        "description": "If true, suggests that this panel could be rendered as half-width on mobile devices, allowing for side-by-side display with another half-width panel if applicable.",
                                        "example": true
                                      },
                                      "title_element": {
                                        "title": "title_element",
                                        "x-stoplight": {
                                          "id": "lox0wvl9bdgy2"
                                        },
                                        "type": "object",
                                        "description": "The title of a panel.",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "A short name of this panel, not including any actual values"
                                          },
                                          "title": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "grade",
                                              "percentage"
                                            ],
                                            "description": "Used to indicate how the value of this item is measured, such as \"grade\" for Nutri-Score and Green-Score or \"percentage\" for Salt"
                                          },
                                          "grade": {
                                            "type": "string",
                                            "description": "The value for this panel where it corresponds to a A to E grade such as the Nutri-Score or the Green-Score.",
                                            "enum": [
                                              "a+",
                                              "a",
                                              "b",
                                              "c",
                                              "d",
                                              "e",
                                              "f",
                                              "unknown"
                                            ]
                                          },
                                          "value": {
                                            "type": "number",
                                            "description": "The numeric value of the panel, where the type is \"percentage\""
                                          },
                                          "icon_url": {
                                            "type": "string"
                                          },
                                          "icon_color_from_evaluation": {
                                            "type": "string"
                                          },
                                          "icon_size": {
                                            "type": "string",
                                            "description": "If set to \"small\", the icon should be displayed at a small size.\n"
                                          }
                                        }
                                      },
                                      "elements": {
                                        "type": "array",
                                        "description": "An ordered list of elements to display in the content of the panel.",
                                        "items": {
                                          "title": "element",
                                          "x-stoplight": {
                                            "id": "e2ybdrtmx0tme"
                                          },
                                          "type": "object",
                                          "description": "Each element object contains one specific element object such as a text element or an image element.\n",
                                          "properties": {
                                            "element_type": {
                                              "type": "string",
                                              "enum": [
                                                "text",
                                                "image",
                                                "action",
                                                "panel",
                                                "panel_group",
                                                "table"
                                              ],
                                              "description": "The type of the included element object.\nThe element_type also indicates which field contains the included element object.\ne.g. if the element_type is \"text\", the included element object will be in the \"text_element\" field.\n\nNote that in the future, new type of element may be added,\nso your code should ignore unrecognized types, and unknown properties.\n\nTODO: add Map type\n"
                                            },
                                            "text_element": {
                                              "title": "text_element",
                                              "x-stoplight": {
                                                "id": "vdwxlt73qnqfa"
                                              },
                                              "type": "object",
                                              "description": "A text in simple HTML format to display.\n\nFor some specific texts that correspond to a product field (e.g. a product name, the ingredients list of a product),the edit_field_* fields are used to indicate how to edit the field value.",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "description": "the type of text, might influence the way you display it.\n",
                                                  "enum": [
                                                    "summary",
                                                    "warning",
                                                    "notes"
                                                  ]
                                                },
                                                "html": {
                                                  "type": "string",
                                                  "description": "Text to display in HTML format."
                                                },
                                                "language": {
                                                  "type": "string",
                                                  "description": "Language of the text. The name of the language is returned in the language requested when making the API call. e.g. if the text is in Polish, and the requested language is French, the language field will contain \"Polonais\" (French for \"Polish\"). Only set for specific fields such as the list of ingredients of a product."
                                                },
                                                "lc": {
                                                  "type": "string",
                                                  "description": "2 letter language code for the text. Only set for specific fields such as the list of ingredients of a product."
                                                },
                                                "edit_field_id": {
                                                  "type": "string",
                                                  "description": "id of the field used to edit this text in the product edit API."
                                                },
                                                "edit_field_type": {
                                                  "type": "string",
                                                  "description": "Type of the product field."
                                                },
                                                "edit_field_value": {
                                                  "type": "string",
                                                  "description": "Current value of the product field. This may differ from the html field which can contain extra formating."
                                                },
                                                "source_url": {
                                                  "type": "string",
                                                  "description": "Link to the source",
                                                  "example": "https://en.wikipedia.org/wiki/Sodium acetate"
                                                },
                                                "source_text": {
                                                  "type": "string",
                                                  "description": "name of the source",
                                                  "example": "Wikipedia"
                                                },
                                                "source_lc": {
                                                  "type": "string",
                                                  "description": "Source locale name",
                                                  "example": "en"
                                                },
                                                "source_language": {
                                                  "type": "string",
                                                  "description": "Human readable source locale name",
                                                  "example": "English"
                                                }
                                              }
                                            },
                                            "image_element": {
                                              "title": "image_element",
                                              "x-stoplight": {
                                                "id": "k4v4kwt489q3j"
                                              },
                                              "type": "object",
                                              "properties": {
                                                "url": {
                                                  "type": "string",
                                                  "description": "full URL of the image"
                                                },
                                                "width": {
                                                  "type": "integer",
                                                  "description": "Width of the image.\n\nThis is just a suggestion coming from the server, \nthe client may choose to use its own dimensions for the image.\n"
                                                },
                                                "height": {
                                                  "type": "integer",
                                                  "description": "Height of the image.\n\nThis is just a suggestion coming from the server,\nthe client may choose to use its own dimensions for the image.\n"
                                                },
                                                "alt_text": {
                                                  "type": "string",
                                                  "description": "Alt Text of the image."
                                                }
                                              }
                                            },
                                            "action_element": {
                                              "type": "string"
                                            },
                                            "panel_element": {
                                              "title": "panel_element",
                                              "x-stoplight": {
                                                "id": "ymx41elz4yrnj"
                                              },
                                              "type": "object",
                                              "description": "Panels can include other panels as sub-panels using the panel_element.",
                                              "properties": {
                                                "panel_id": {
                                                  "type": "string",
                                                  "description": "The id of the panel to include. The id is the key of the panel in the panels object returned in the knowledge_panels field."
                                                }
                                              }
                                            },
                                            "panel_group_element": {
                                              "title": "panel_group_element",
                                              "x-stoplight": {
                                                "id": "b7emlfrgiuue2"
                                              },
                                              "type": "object",
                                              "properties": {
                                                "title": {
                                                  "type": "string"
                                                },
                                                "panel_ids": {
                                                  "type": "array",
                                                  "description": "The ids of the panels to include. The ids are the keys of the panels in the panels object returned in the knowledge_panels field.",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "image": {
                                                  "type": "object",
                                                  "description": "An image related to the panel group (e.g. the ingredients or nutrition facts image for the ingredients and nutrition panel groups)."
                                                }
                                              },
                                              "description": "The panel group element is used to display an optional title followed by a number of sub-panels."
                                            },
                                            "table_element": {
                                              "title": "table_element",
                                              "type": "object",
                                              "description": "Element to display a table.",
                                              "properties": {
                                                "id": {
                                                  "type": "string",
                                                  "description": "An id for the table."
                                                },
                                                "title": {
                                                  "type": "string",
                                                  "description": "Title of the column.\n"
                                                },
                                                "rows": {
                                                  "type": "string"
                                                },
                                                "columns": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "title": "table_column",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string"
                                                      },
                                                      "text": {
                                                        "type": "string"
                                                      },
                                                      "text_for_small_screens": {
                                                        "type": "string"
                                                      },
                                                      "style": {
                                                        "type": "string"
                                                      },
                                                      "column_group_id": {
                                                        "type": "string"
                                                      },
                                                      "shown_by_default": {
                                                        "type": "boolean"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "required": [
                                            "element_type"
                                          ]
                                        }
                                      },
                                      "level": {
                                        "type": "string",
                                        "description": "a message level, as levels we use in log.\nIt might help theming the panel visually. Some possible values: info, recommendation\n",
                                        "example": "info"
                                      },
                                      "size": {
                                        "type": "string",
                                        "enum": [
                                          "small"
                                        ],
                                        "description": "size is either empty (normal display) \nor small to indicate a panel that should have a smaller font size\n",
                                        "example": "small"
                                      },
                                      "topics": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": "health"
                                        },
                                        "description": "topics currently include health, environment, problem"
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Specific data about a product to enable personal ranking\n",
                              "properties": {
                                "attribute_groups": {
                                  "type": "array",
                                  "description": "Each element is an attribute that can help compute a personal ranking for the product",
                                  "items": {
                                    "title": "product_attribute_group",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Unique id of the attribute.\n\nIt will be use to match against preferences parameters.\n"
                                      },
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "known",
                                          "unknown"
                                        ],
                                        "description": "wether we have the information to really compute this criteria or not."
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "A descriptive sentence about the situation of the product concerning attribute\n",
                                        "example": "Does not contain: Molluscs"
                                      },
                                      "match": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "a numeric value for the match,\ntelling how much the products ranks well for this particular attribute.\nThe higher the value, the better the match.\n"
                                      },
                                      "grade": {
                                        "description": "every attribute as a grade for a to e",
                                        "type": "string",
                                        "enum": [
                                          "unknown",
                                          "a",
                                          "b",
                                          "c",
                                          "d",
                                          "e"
                                        ]
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of attribute, for eventual display"
                                      },
                                      "icon_url": {
                                        "type": "string",
                                        "description": "an icon representing the attribute match (often using a color)"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "An eventual description of the value of the property upon which this attribute is based"
                                      },
                                      "description_short": {
                                        "type": "string",
                                        "description": "An eventual short description of the value of the property upon which this attribute is based"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "302": {
            "description": "Redirect to the correct server for the product type of the requested product",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "description": "URL to the correct server"
                },
                "examples": {
                  "redirect": {
                    "value": "https://world.openbeautyfacts.org/api/v3/product/8710447445990"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        },
        "description": "Retrieve information for a product with a specific barcode.\n\nThe fields parameter allows to specify what fields to retrieve.",
        "operationId": "get-product-by-barcode"
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Create or Update Product",
        "operationId": "patch-api-v3-product-barcode",
        "description": "This API allows to create or update a product (if the product already exists, its data is updated, otherwise it is created), or to analyze a test product (in which case no product is created or updated). To analyze a product, the \"barcode\" path component needs to contain the value \"test\" instead of a barcode.\n\nNew API to send structured product data in a JSON format instead of in a flattened list of key / value pairs field as-in the current product add / edit API that relies on a multipart/form-data format.\n\nImportant: this new Product WRITE API has been deployed in production, but it is still under development, and it may change.\n\nThis new API is used in particular to send structured packaging data: https://openfoodfacts.github.io/openfoodfacts-server/dev/explain-packaging-data/\n\nThe new API is gradually being extended to support other product fields.\n\nCurrently supported fields are:\n  - language specific fields (e.g. product name, ingredients text)\n  - tags fields (e.g. categories, labels)\n  - packaging fields (e.g. packagings, packagings_add, packagings_complete)\n  - image selection of uploaded images (e.g. front, ingredients, nutrition, packaging) for specific languages",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "description": "The barcode of the product to to create or update, or \"test\" to analyze the product data sent without creating or updating a product.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "3017620422003"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "title": "Language and country of the user",
                    "type": "object",
                    "properties": {
                      "lc": {
                        "type": "string",
                        "description": "2 letter code of the language of the interface. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the language may be inferred by the country of the user (passed through the cc field or inferred by the IP address). Full list at https://static.openfoodfacts.org/data/taxonomies/languages.json"
                      },
                      "cc": {
                        "type": "string",
                        "description": "2 letter code of the country of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the country may be inferred by the IP address of the request. Full list at https://static.openfoodfacts.org/data/taxonomies/countries.json"
                      }
                    },
                    "description": "",
                    "examples": [
                      {
                        "lc": "fr",
                        "cc": "fr"
                      }
                    ]
                  },
                  {
                    "title": "Fields requested and language for taxonomized tags fields",
                    "type": "object",
                    "description": "",
                    "properties": {
                      "fields": {
                        "type": "string",
                        "description": "Comma separated list of fields requested in the response. Special values: \"updated\": returns field that were updated by the query (e.g. sending \"packagings\" or \"packagings_add\" would return \"packagings\"), \"none\": returns no fields, \"all\": returns all fields except generated fields that need to be explicitly requested such as \"knowledge_panels\". Defaults to \"updated\" for WRITE requests, and \"all\" for READ requests."
                      },
                      "tags_lc": {
                        "type": "string",
                        "description": "2 letter language code to request names of tags in a specific language.\n\nFor READ requets: if passed, all taxonomized tags of the response will include a lc_name property with the translation in the requested language, if available. Otherwise, the property value will contain the name in the original language, prefixed by the 2 language code and a colon.\n\nFor WRITE requests: if passed, taxonomized tags fields with a lc_name property will be considered to be in this language."
                      }
                    },
                    "examples": [
                      {
                        "fields": "product_name,packagings",
                        "tags_lc": "fr"
                      },
                      {
                        "fields": "updated",
                        "tags_lc": "fr"
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "description": "Password for login",
                        "format": "password"
                      },
                      "product": {
                        "title": "Product update API V3 (WRITE)",
                        "type": "object",
                        "description": "Model for creating or updating products using the v3 version of the product update API.",
                        "examples": [],
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Tags (WRITE)",
                            "description": "Products have list of tags of different types (e.g. categories, labels) that can be replaced or added to with the following properties in API v3.\n",
                            "properties": {
                              "categories_tags": {
                                "type": "array",
                                "description": "An array of categories tag entries that will replace existing categories",
                                "items": {
                                  "title": "Input taxonomy tag",
                                  "type": "string",
                                  "description": "A tag entry, that will be matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\")\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\")\n- API v0 to v2: a string in the language of the request (specified with the lc field, or inferred from the subdomain the request is sent to (e.g. \"nl\" for requests sent to be.openfoodfacts.org)\n- API v3: a string in the default language of the field (e.g. French for categories_tags_fr) or in the language indicated by the tags_lc request field (e.g. Thés verts)\n\nAll entries will be matched to the corresponding taxonomy. It is possible to specify values that do not exist yet in the taxonomy. They may later be added as new taxonomy entries, or as new translations or synonyms of an existing entry."
                                }
                              },
                              "categories_tags_add": {
                                "type": "array",
                                "description": "An array of categories tag entries that will be added to existing categories",
                                "items": {
                                  "title": "Input taxonomy tag",
                                  "type": "string",
                                  "description": "A tag entry, that will be matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\")\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\")\n- API v0 to v2: a string in the language of the request (specified with the lc field, or inferred from the subdomain the request is sent to (e.g. \"nl\" for requests sent to be.openfoodfacts.org)\n- API v3: a string in the default language of the field (e.g. French for categories_tags_fr) or in the language indicated by the tags_lc request field (e.g. Thés verts)\n\nAll entries will be matched to the corresponding taxonomy. It is possible to specify values that do not exist yet in the taxonomy. They may later be added as new taxonomy entries, or as new translations or synonyms of an existing entry."
                                }
                              }
                            },
                            "patternProperties": {
                              "categories_tags_(?<language_code>\\w\\w)": {
                                "type": "array",
                                "description": "An array of categories tag entries that will replace existing categories, with a default language code",
                                "items": {
                                  "title": "Input taxonomy tag",
                                  "type": "string",
                                  "description": "A tag entry, that will be matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\")\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\")\n- API v0 to v2: a string in the language of the request (specified with the lc field, or inferred from the subdomain the request is sent to (e.g. \"nl\" for requests sent to be.openfoodfacts.org)\n- API v3: a string in the default language of the field (e.g. French for categories_tags_fr) or in the language indicated by the tags_lc request field (e.g. Thés verts)\n\nAll entries will be matched to the corresponding taxonomy. It is possible to specify values that do not exist yet in the taxonomy. They may later be added as new taxonomy entries, or as new translations or synonyms of an existing entry."
                                }
                              },
                              "categories_tags_(?<language_code>\\w\\w)_add": {
                                "type": "array",
                                "description": "An array of categories tag entries that will be added to existing categories, with a default language code",
                                "items": {
                                  "title": "Input taxonomy tag",
                                  "type": "string",
                                  "description": "A tag entry, that will be matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\")\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\")\n- API v0 to v2: a string in the language of the request (specified with the lc field, or inferred from the subdomain the request is sent to (e.g. \"nl\" for requests sent to be.openfoodfacts.org)\n- API v3: a string in the default language of the field (e.g. French for categories_tags_fr) or in the language indicated by the tags_lc request field (e.g. Thés verts)\n\nAll entries will be matched to the corresponding taxonomy. It is possible to specify values that do not exist yet in the taxonomy. They may later be added as new taxonomy entries, or as new translations or synonyms of an existing entry."
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "packagings": {
                                "type": "array",
                                "x-stoplight": {
                                  "id": "69xpogby1amz6"
                                },
                                "title": "Packagings (WRITE)",
                                "description": "The packagings object is an array of individual packaging component objects.\n\nThe Packaging data document explains how packaging data is structured in Open Food Facts: https://openfoodfacts.github.io/openfoodfacts-server/dev/explain-packaging-data/",
                                "examples": [],
                                "items": {
                                  "title": "Packaging component (WRITE)",
                                  "x-stoplight": {
                                    "id": "iacgfu9zaek8v"
                                  },
                                  "type": "object",
                                  "description": "Each packaging component has different properties to specify how many there are, its shape, material etc.\n\nThe shape, material and recycling properties will be mapped to one entry in the packaging_shapes, packaging_materials and packaging_recycling taxonomies.\n\nFor input, clients can either pass the id of a corresponding taxonomy entry (e.g. \"en:pizza-box\"), or a free text value prefixed with the language code of the text (e.g. \"en:Pizza box\", \"fr:boite à pizza\"). If the language code prefix is missing, the value of the \"lc\" field of the query will be used.\n\nThe resulting structure will contain the id of the canonical entry in the taxonomy if it good be matched, or the free text value prefixed with the language code otherwise.\n\nFor weights, the API is expecting a number with the number of grams. If a string is passed instead of a number, we will attempt to convert it to grams. The string may contain units (e.g. \"6.9 g\"), and use . or , as the decimal separator. Conversion may not work for all inputs. If a string was converted to a number, the API response will include a warning and specify the converted value.",
                                  "examples": [
                                    {
                                      "number_of_units": 6,
                                      "shape": {
                                        "id": "en:bottle"
                                      },
                                      "material": {
                                        "id": "en:plastic"
                                      },
                                      "recycling": {
                                        "id": "en:recycle"
                                      },
                                      "quantity_per_unit": "25 cl",
                                      "weight_measured": 10
                                    }
                                  ],
                                  "properties": {
                                    "number_of_units": {
                                      "type": "integer",
                                      "description": "Number of units of this packaging component contained in the product (e.g. 6 for a pack of 6 bottles)"
                                    },
                                    "shape": {
                                      "title": "Packaging component shape (WRITE)",
                                      "x-stoplight": {
                                        "id": "yi44igltu79cl"
                                      },
                                      "description": "The shape property is canonicalized using the packaging_shapes taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "material": {
                                      "title": "Packaging component material (WRITE)",
                                      "x-stoplight": {
                                        "id": "vgm9p553p4vd9"
                                      },
                                      "description": "The material property is canonicalized using the packaging_materials taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "recycling": {
                                      "title": "Packaging component recycling instruction (WRITE)",
                                      "x-stoplight": {
                                        "id": "72oyv89xtgc2n"
                                      },
                                      "description": "The recycling property is canonicalized using the packaging_recycling taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "quantity_per_unit": {
                                      "type": "string",
                                      "description": "Quantity (weight or volume) of food product contained in the packaging component. (e.g. 75cl for a wine bottle)"
                                    },
                                    "weight_specified": {
                                      "type": [
                                        "number",
                                        "string"
                                      ],
                                      "description": "Weight (as specified by the manufacturer) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component). If passed a string - possibly with an unit - it will be converted to a number."
                                    },
                                    "weight_measured": {
                                      "type": [
                                        "number",
                                        "string"
                                      ],
                                      "description": "Weight (as measured by one or more users) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component). If passed a string - possibly with an unit - it will be converted to a number."
                                    },
                                    "brands": {
                                      "type": "string",
                                      "description": "A comma separated list of brands / product names for the packaging component (e.g. \"Tetra Pak\", Tetra Brik\""
                                    },
                                    "labels": {
                                      "type": "string",
                                      "description": "A comma separated list of labels, canonicalized with the packaging_labels taxonomy (e.g. \"en:FSC, fr:Encre végétale\")"
                                    }
                                  }
                                }
                              },
                              "packagings_add": {
                                "type": "array",
                                "x-stoplight": {
                                  "id": "69xpogby1amz6"
                                },
                                "title": "Packagings (WRITE)",
                                "description": "The packagings object is an array of individual packaging component objects.\n\nThe Packaging data document explains how packaging data is structured in Open Food Facts: https://openfoodfacts.github.io/openfoodfacts-server/dev/explain-packaging-data/",
                                "examples": [],
                                "items": {
                                  "title": "Packaging component (WRITE)",
                                  "x-stoplight": {
                                    "id": "iacgfu9zaek8v"
                                  },
                                  "type": "object",
                                  "description": "Each packaging component has different properties to specify how many there are, its shape, material etc.\n\nThe shape, material and recycling properties will be mapped to one entry in the packaging_shapes, packaging_materials and packaging_recycling taxonomies.\n\nFor input, clients can either pass the id of a corresponding taxonomy entry (e.g. \"en:pizza-box\"), or a free text value prefixed with the language code of the text (e.g. \"en:Pizza box\", \"fr:boite à pizza\"). If the language code prefix is missing, the value of the \"lc\" field of the query will be used.\n\nThe resulting structure will contain the id of the canonical entry in the taxonomy if it good be matched, or the free text value prefixed with the language code otherwise.\n\nFor weights, the API is expecting a number with the number of grams. If a string is passed instead of a number, we will attempt to convert it to grams. The string may contain units (e.g. \"6.9 g\"), and use . or , as the decimal separator. Conversion may not work for all inputs. If a string was converted to a number, the API response will include a warning and specify the converted value.",
                                  "examples": [
                                    {
                                      "number_of_units": 6,
                                      "shape": {
                                        "id": "en:bottle"
                                      },
                                      "material": {
                                        "id": "en:plastic"
                                      },
                                      "recycling": {
                                        "id": "en:recycle"
                                      },
                                      "quantity_per_unit": "25 cl",
                                      "weight_measured": 10
                                    }
                                  ],
                                  "properties": {
                                    "number_of_units": {
                                      "type": "integer",
                                      "description": "Number of units of this packaging component contained in the product (e.g. 6 for a pack of 6 bottles)"
                                    },
                                    "shape": {
                                      "title": "Packaging component shape (WRITE)",
                                      "x-stoplight": {
                                        "id": "yi44igltu79cl"
                                      },
                                      "description": "The shape property is canonicalized using the packaging_shapes taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "material": {
                                      "title": "Packaging component material (WRITE)",
                                      "x-stoplight": {
                                        "id": "vgm9p553p4vd9"
                                      },
                                      "description": "The material property is canonicalized using the packaging_materials taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "recycling": {
                                      "title": "Packaging component recycling instruction (WRITE)",
                                      "x-stoplight": {
                                        "id": "72oyv89xtgc2n"
                                      },
                                      "description": "The recycling property is canonicalized using the packaging_recycling taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "quantity_per_unit": {
                                      "type": "string",
                                      "description": "Quantity (weight or volume) of food product contained in the packaging component. (e.g. 75cl for a wine bottle)"
                                    },
                                    "weight_specified": {
                                      "type": [
                                        "number",
                                        "string"
                                      ],
                                      "description": "Weight (as specified by the manufacturer) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component). If passed a string - possibly with an unit - it will be converted to a number."
                                    },
                                    "weight_measured": {
                                      "type": [
                                        "number",
                                        "string"
                                      ],
                                      "description": "Weight (as measured by one or more users) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component). If passed a string - possibly with an unit - it will be converted to a number."
                                    },
                                    "brands": {
                                      "type": "string",
                                      "description": "A comma separated list of brands / product names for the packaging component (e.g. \"Tetra Pak\", Tetra Brik\""
                                    },
                                    "labels": {
                                      "type": "string",
                                      "description": "A comma separated list of labels, canonicalized with the packaging_labels taxonomy (e.g. \"en:FSC, fr:Encre végétale\")"
                                    }
                                  }
                                }
                              },
                              "packagings_complete": {
                                "title": "packagings_complete",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Indicate if the packagings array contains all the packaging parts of the product. This field can be set by users when they enter or verify packaging data. Possible values are 0 or 1."
                              },
                              "lang": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "fr",
                                "description": "2 letter language code of the main language of the product (the most prominent on the packaging)"
                              },
                              "quantity": {
                                "type": "string"
                              },
                              "serving_size": {
                                "type": "string"
                              },
                              "images": {
                                "type": "object",
                                "properties": {
                                  "selected": {
                                    "description": "Images with specific information (e.g. front, ingredients, nutrition, packaging) for specific languages.\nEach selected image is a cropped version of an uploaded image.\n",
                                    "type": "object",
                                    "title": "Selected images",
                                    "properties": {
                                      "front": {
                                        "description": "Front images of the full product in languages shown on the packaging.\nIn most cases we have a front image selected for only one language,\nunless the product has different packagings for different countries with the same barcode,\nor if the product has two front sides (e.g. in bilingual countries).\n",
                                        "patternProperties": {
                                          "(?<language_code>\\w\\w)": {
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "description": "Front image in the language given by the 2 letter 'language_code'.\n",
                                                "title": "Selected image",
                                                "properties": {
                                                  "imgid": {
                                                    "type": "integer",
                                                    "example": 12,
                                                    "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                  },
                                                  "rev": {
                                                    "type": "integer",
                                                    "example": 65,
                                                    "description": "The revision number of the product when the image was selected.",
                                                    "readOnly": true
                                                  },
                                                  "generation": {
                                                    "type": "object",
                                                    "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                    "properties": {
                                                      "angle": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                      },
                                                      "coordinates_image_size": {
                                                        "type": "string",
                                                        "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                        "example": "full"
                                                      },
                                                      "normalize": {
                                                        "type": "boolean",
                                                        "description": "Normalize colors. Default is false."
                                                      },
                                                      "white_magic": {
                                                        "type": "boolean",
                                                        "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                      },
                                                      "x1": {
                                                        "type": "integer",
                                                        "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "x2": {
                                                        "type": "string",
                                                        "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y1": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y2": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                      }
                                                    }
                                                  },
                                                  "sizes": {
                                                    "readOnly": true,
                                                    "title": "Images Sizes",
                                                    "type": "object",
                                                    "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                    "properties": {
                                                      "100": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "200": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "400": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "full": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "null",
                                                "writeOnly": true,
                                                "description": "Write only value to unselect a selected image\n"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "ingredients": {
                                        "description": "Cropped images of the ingredients list in languages shown on the packaging.\n",
                                        "patternProperties": {
                                          "(?<language_code>\\w\\w)": {
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "description": "Ingredient list image in the language given by the 2 letter 'language_code'.\n",
                                                "title": "Selected image",
                                                "properties": {
                                                  "imgid": {
                                                    "type": "integer",
                                                    "example": 12,
                                                    "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                  },
                                                  "rev": {
                                                    "type": "integer",
                                                    "example": 65,
                                                    "description": "The revision number of the product when the image was selected.",
                                                    "readOnly": true
                                                  },
                                                  "generation": {
                                                    "type": "object",
                                                    "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                    "properties": {
                                                      "angle": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                      },
                                                      "coordinates_image_size": {
                                                        "type": "string",
                                                        "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                        "example": "full"
                                                      },
                                                      "normalize": {
                                                        "type": "boolean",
                                                        "description": "Normalize colors. Default is false."
                                                      },
                                                      "white_magic": {
                                                        "type": "boolean",
                                                        "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                      },
                                                      "x1": {
                                                        "type": "integer",
                                                        "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "x2": {
                                                        "type": "string",
                                                        "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y1": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y2": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                      }
                                                    }
                                                  },
                                                  "sizes": {
                                                    "readOnly": true,
                                                    "title": "Images Sizes",
                                                    "type": "object",
                                                    "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                    "properties": {
                                                      "100": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "200": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "400": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "full": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "null",
                                                "writeOnly": true,
                                                "description": "Write only value to unselect a selected image              \n"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "nutrition": {
                                        "description": "Cropped images of the nutrition facts table / list in languages shown on the packaging.\n",
                                        "patternProperties": {
                                          "(?<language_code>\\w\\w)": {
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "description": "Nutrition facts image in the language given by the 2 letter 'language_code'.\n",
                                                "title": "Selected image",
                                                "properties": {
                                                  "imgid": {
                                                    "type": "integer",
                                                    "example": 12,
                                                    "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                  },
                                                  "rev": {
                                                    "type": "integer",
                                                    "example": 65,
                                                    "description": "The revision number of the product when the image was selected.",
                                                    "readOnly": true
                                                  },
                                                  "generation": {
                                                    "type": "object",
                                                    "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                    "properties": {
                                                      "angle": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                      },
                                                      "coordinates_image_size": {
                                                        "type": "string",
                                                        "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                        "example": "full"
                                                      },
                                                      "normalize": {
                                                        "type": "boolean",
                                                        "description": "Normalize colors. Default is false."
                                                      },
                                                      "white_magic": {
                                                        "type": "boolean",
                                                        "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                      },
                                                      "x1": {
                                                        "type": "integer",
                                                        "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "x2": {
                                                        "type": "string",
                                                        "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y1": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y2": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                      }
                                                    }
                                                  },
                                                  "sizes": {
                                                    "readOnly": true,
                                                    "title": "Images Sizes",
                                                    "type": "object",
                                                    "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                    "properties": {
                                                      "100": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "200": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "400": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "full": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "null",
                                                "writeOnly": true,
                                                "description": "Write only value to unselect a selected image\n"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "packaging": {
                                        "description": "Cropped images of the packaging / recycling information in languages shown on the packaging.\n",
                                        "patternProperties": {
                                          "(?<language_code>\\w\\w)": {
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "description": "Packaging / recycling information image in the language given by the 2 letter 'language_code'.\n",
                                                "title": "Selected image",
                                                "properties": {
                                                  "imgid": {
                                                    "type": "integer",
                                                    "example": 12,
                                                    "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                  },
                                                  "rev": {
                                                    "type": "integer",
                                                    "example": 65,
                                                    "description": "The revision number of the product when the image was selected.",
                                                    "readOnly": true
                                                  },
                                                  "generation": {
                                                    "type": "object",
                                                    "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                    "properties": {
                                                      "angle": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                      },
                                                      "coordinates_image_size": {
                                                        "type": "string",
                                                        "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                        "example": "full"
                                                      },
                                                      "normalize": {
                                                        "type": "boolean",
                                                        "description": "Normalize colors. Default is false."
                                                      },
                                                      "white_magic": {
                                                        "type": "boolean",
                                                        "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                      },
                                                      "x1": {
                                                        "type": "integer",
                                                        "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "x2": {
                                                        "type": "string",
                                                        "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y1": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y2": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                      }
                                                    }
                                                  },
                                                  "sizes": {
                                                    "readOnly": true,
                                                    "title": "Images Sizes",
                                                    "type": "object",
                                                    "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                    "properties": {
                                                      "100": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "200": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "400": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "full": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "null",
                                                "writeOnly": true,
                                                "description": "Write only value to unselect a selected image\n"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "lc": "fr",
                    "cc": "fr",
                    "fields": "product_name,packagings",
                    "tags_lc": "fr",
                    "userid": "string",
                    "password": "string",
                    "code": "string",
                    "product": {
                      "packagings": [
                        {
                          "number_of_units": 6,
                          "shape": {
                            "id": "en:bottle"
                          },
                          "material": {
                            "id": "en:plastic"
                          },
                          "recycling": {
                            "id": "en:recycle"
                          },
                          "quantity_per_unit": "25 cl",
                          "weight_measured": 10
                        }
                      ],
                      "packagings_add": [
                        {
                          "number_of_units": 6,
                          "shape": {
                            "id": "en:bottle"
                          },
                          "material": {
                            "id": "en:plastic"
                          },
                          "recycling": {
                            "id": "en:recycle"
                          },
                          "quantity_per_unit": "25 cl",
                          "weight_measured": 10
                        }
                      ],
                      "product": {
                        "title": "Product update API V3 (WRITE)",
                        "type": "object",
                        "description": "Model for creating or updating products using the v3 version of the product update API.",
                        "examples": [],
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Tags (WRITE)",
                            "description": "Products have list of tags of different types (e.g. categories, labels) that can be replaced or added to with the following properties in API v3.\n",
                            "properties": {
                              "categories_tags": {
                                "type": "array",
                                "description": "An array of categories tag entries that will replace existing categories",
                                "items": {
                                  "title": "Input taxonomy tag",
                                  "type": "string",
                                  "description": "A tag entry, that will be matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\")\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\")\n- API v0 to v2: a string in the language of the request (specified with the lc field, or inferred from the subdomain the request is sent to (e.g. \"nl\" for requests sent to be.openfoodfacts.org)\n- API v3: a string in the default language of the field (e.g. French for categories_tags_fr) or in the language indicated by the tags_lc request field (e.g. Thés verts)\n\nAll entries will be matched to the corresponding taxonomy. It is possible to specify values that do not exist yet in the taxonomy. They may later be added as new taxonomy entries, or as new translations or synonyms of an existing entry."
                                }
                              },
                              "categories_tags_add": {
                                "type": "array",
                                "description": "An array of categories tag entries that will be added to existing categories",
                                "items": {
                                  "title": "Input taxonomy tag",
                                  "type": "string",
                                  "description": "A tag entry, that will be matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\")\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\")\n- API v0 to v2: a string in the language of the request (specified with the lc field, or inferred from the subdomain the request is sent to (e.g. \"nl\" for requests sent to be.openfoodfacts.org)\n- API v3: a string in the default language of the field (e.g. French for categories_tags_fr) or in the language indicated by the tags_lc request field (e.g. Thés verts)\n\nAll entries will be matched to the corresponding taxonomy. It is possible to specify values that do not exist yet in the taxonomy. They may later be added as new taxonomy entries, or as new translations or synonyms of an existing entry."
                                }
                              }
                            },
                            "patternProperties": {
                              "categories_tags_(?<language_code>\\w\\w)": {
                                "type": "array",
                                "description": "An array of categories tag entries that will replace existing categories, with a default language code",
                                "items": {
                                  "title": "Input taxonomy tag",
                                  "type": "string",
                                  "description": "A tag entry, that will be matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\")\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\")\n- API v0 to v2: a string in the language of the request (specified with the lc field, or inferred from the subdomain the request is sent to (e.g. \"nl\" for requests sent to be.openfoodfacts.org)\n- API v3: a string in the default language of the field (e.g. French for categories_tags_fr) or in the language indicated by the tags_lc request field (e.g. Thés verts)\n\nAll entries will be matched to the corresponding taxonomy. It is possible to specify values that do not exist yet in the taxonomy. They may later be added as new taxonomy entries, or as new translations or synonyms of an existing entry."
                                }
                              },
                              "categories_tags_(?<language_code>\\w\\w)_add": {
                                "type": "array",
                                "description": "An array of categories tag entries that will be added to existing categories, with a default language code",
                                "items": {
                                  "title": "Input taxonomy tag",
                                  "type": "string",
                                  "description": "A tag entry, that will be matched against a taxonomy (e.g. a category, a label)\n\nThe entry is a string that can contain either:\n\n- a taxonomy entry id, in the form [2 letter language code]:[normalized canonical name] (e.g. \"en:green-teas\")\n- a string in a specific language, prefixed by the 2 letter language code (e.g. \"fr:Thés verts\")\n- API v0 to v2: a string in the language of the request (specified with the lc field, or inferred from the subdomain the request is sent to (e.g. \"nl\" for requests sent to be.openfoodfacts.org)\n- API v3: a string in the default language of the field (e.g. French for categories_tags_fr) or in the language indicated by the tags_lc request field (e.g. Thés verts)\n\nAll entries will be matched to the corresponding taxonomy. It is possible to specify values that do not exist yet in the taxonomy. They may later be added as new taxonomy entries, or as new translations or synonyms of an existing entry."
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "packagings": {
                                "type": "array",
                                "x-stoplight": {
                                  "id": "69xpogby1amz6"
                                },
                                "title": "Packagings (WRITE)",
                                "description": "The packagings object is an array of individual packaging component objects.\n\nThe Packaging data document explains how packaging data is structured in Open Food Facts: https://openfoodfacts.github.io/openfoodfacts-server/dev/explain-packaging-data/",
                                "examples": [],
                                "items": {
                                  "title": "Packaging component (WRITE)",
                                  "x-stoplight": {
                                    "id": "iacgfu9zaek8v"
                                  },
                                  "type": "object",
                                  "description": "Each packaging component has different properties to specify how many there are, its shape, material etc.\n\nThe shape, material and recycling properties will be mapped to one entry in the packaging_shapes, packaging_materials and packaging_recycling taxonomies.\n\nFor input, clients can either pass the id of a corresponding taxonomy entry (e.g. \"en:pizza-box\"), or a free text value prefixed with the language code of the text (e.g. \"en:Pizza box\", \"fr:boite à pizza\"). If the language code prefix is missing, the value of the \"lc\" field of the query will be used.\n\nThe resulting structure will contain the id of the canonical entry in the taxonomy if it good be matched, or the free text value prefixed with the language code otherwise.\n\nFor weights, the API is expecting a number with the number of grams. If a string is passed instead of a number, we will attempt to convert it to grams. The string may contain units (e.g. \"6.9 g\"), and use . or , as the decimal separator. Conversion may not work for all inputs. If a string was converted to a number, the API response will include a warning and specify the converted value.",
                                  "examples": [
                                    {
                                      "number_of_units": 6,
                                      "shape": {
                                        "id": "en:bottle"
                                      },
                                      "material": {
                                        "id": "en:plastic"
                                      },
                                      "recycling": {
                                        "id": "en:recycle"
                                      },
                                      "quantity_per_unit": "25 cl",
                                      "weight_measured": 10
                                    }
                                  ],
                                  "properties": {
                                    "number_of_units": {
                                      "type": "integer",
                                      "description": "Number of units of this packaging component contained in the product (e.g. 6 for a pack of 6 bottles)"
                                    },
                                    "shape": {
                                      "title": "Packaging component shape (WRITE)",
                                      "x-stoplight": {
                                        "id": "yi44igltu79cl"
                                      },
                                      "description": "The shape property is canonicalized using the packaging_shapes taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "material": {
                                      "title": "Packaging component material (WRITE)",
                                      "x-stoplight": {
                                        "id": "vgm9p553p4vd9"
                                      },
                                      "description": "The material property is canonicalized using the packaging_materials taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "recycling": {
                                      "title": "Packaging component recycling instruction (WRITE)",
                                      "x-stoplight": {
                                        "id": "72oyv89xtgc2n"
                                      },
                                      "description": "The recycling property is canonicalized using the packaging_recycling taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "quantity_per_unit": {
                                      "type": "string",
                                      "description": "Quantity (weight or volume) of food product contained in the packaging component. (e.g. 75cl for a wine bottle)"
                                    },
                                    "weight_specified": {
                                      "type": [
                                        "number",
                                        "string"
                                      ],
                                      "description": "Weight (as specified by the manufacturer) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component). If passed a string - possibly with an unit - it will be converted to a number."
                                    },
                                    "weight_measured": {
                                      "type": [
                                        "number",
                                        "string"
                                      ],
                                      "description": "Weight (as measured by one or more users) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component). If passed a string - possibly with an unit - it will be converted to a number."
                                    },
                                    "brands": {
                                      "type": "string",
                                      "description": "A comma separated list of brands / product names for the packaging component (e.g. \"Tetra Pak\", Tetra Brik\""
                                    },
                                    "labels": {
                                      "type": "string",
                                      "description": "A comma separated list of labels, canonicalized with the packaging_labels taxonomy (e.g. \"en:FSC, fr:Encre végétale\")"
                                    }
                                  }
                                }
                              },
                              "packagings_add": {
                                "type": "array",
                                "x-stoplight": {
                                  "id": "69xpogby1amz6"
                                },
                                "title": "Packagings (WRITE)",
                                "description": "The packagings object is an array of individual packaging component objects.\n\nThe Packaging data document explains how packaging data is structured in Open Food Facts: https://openfoodfacts.github.io/openfoodfacts-server/dev/explain-packaging-data/",
                                "examples": [],
                                "items": {
                                  "title": "Packaging component (WRITE)",
                                  "x-stoplight": {
                                    "id": "iacgfu9zaek8v"
                                  },
                                  "type": "object",
                                  "description": "Each packaging component has different properties to specify how many there are, its shape, material etc.\n\nThe shape, material and recycling properties will be mapped to one entry in the packaging_shapes, packaging_materials and packaging_recycling taxonomies.\n\nFor input, clients can either pass the id of a corresponding taxonomy entry (e.g. \"en:pizza-box\"), or a free text value prefixed with the language code of the text (e.g. \"en:Pizza box\", \"fr:boite à pizza\"). If the language code prefix is missing, the value of the \"lc\" field of the query will be used.\n\nThe resulting structure will contain the id of the canonical entry in the taxonomy if it good be matched, or the free text value prefixed with the language code otherwise.\n\nFor weights, the API is expecting a number with the number of grams. If a string is passed instead of a number, we will attempt to convert it to grams. The string may contain units (e.g. \"6.9 g\"), and use . or , as the decimal separator. Conversion may not work for all inputs. If a string was converted to a number, the API response will include a warning and specify the converted value.",
                                  "examples": [
                                    {
                                      "number_of_units": 6,
                                      "shape": {
                                        "id": "en:bottle"
                                      },
                                      "material": {
                                        "id": "en:plastic"
                                      },
                                      "recycling": {
                                        "id": "en:recycle"
                                      },
                                      "quantity_per_unit": "25 cl",
                                      "weight_measured": 10
                                    }
                                  ],
                                  "properties": {
                                    "number_of_units": {
                                      "type": "integer",
                                      "description": "Number of units of this packaging component contained in the product (e.g. 6 for a pack of 6 bottles)"
                                    },
                                    "shape": {
                                      "title": "Packaging component shape (WRITE)",
                                      "x-stoplight": {
                                        "id": "yi44igltu79cl"
                                      },
                                      "description": "The shape property is canonicalized using the packaging_shapes taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "material": {
                                      "title": "Packaging component material (WRITE)",
                                      "x-stoplight": {
                                        "id": "vgm9p553p4vd9"
                                      },
                                      "description": "The material property is canonicalized using the packaging_materials taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "recycling": {
                                      "title": "Packaging component recycling instruction (WRITE)",
                                      "x-stoplight": {
                                        "id": "72oyv89xtgc2n"
                                      },
                                      "description": "The recycling property is canonicalized using the packaging_recycling taxonomy.",
                                      "examples": [
                                        {
                                          "id": "string"
                                        },
                                        {
                                          "lc_name": "bouteille"
                                        }
                                      ],
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Canonical id of the entry in the taxonomy. If the value cannot be mapped to a taxonomy entry, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "lc_name": {
                                              "type": "string",
                                              "description": "Name of the entry in the language specified in the tags_lc field of the request. If the translation is not available, the value must be the name of the entry in its original language prefixed by the language 2 letter code and a colon."
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "quantity_per_unit": {
                                      "type": "string",
                                      "description": "Quantity (weight or volume) of food product contained in the packaging component. (e.g. 75cl for a wine bottle)"
                                    },
                                    "weight_specified": {
                                      "type": [
                                        "number",
                                        "string"
                                      ],
                                      "description": "Weight (as specified by the manufacturer) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component). If passed a string - possibly with an unit - it will be converted to a number."
                                    },
                                    "weight_measured": {
                                      "type": [
                                        "number",
                                        "string"
                                      ],
                                      "description": "Weight (as measured by one or more users) of one unit of the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water bottles, it might be 30, the weight in grams of 1 empty water bottle without its cap which is a different packaging component). If passed a string - possibly with an unit - it will be converted to a number."
                                    },
                                    "brands": {
                                      "type": "string",
                                      "description": "A comma separated list of brands / product names for the packaging component (e.g. \"Tetra Pak\", Tetra Brik\""
                                    },
                                    "labels": {
                                      "type": "string",
                                      "description": "A comma separated list of labels, canonicalized with the packaging_labels taxonomy (e.g. \"en:FSC, fr:Encre végétale\")"
                                    }
                                  }
                                }
                              },
                              "packagings_complete": {
                                "title": "packagings_complete",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Indicate if the packagings array contains all the packaging parts of the product. This field can be set by users when they enter or verify packaging data. Possible values are 0 or 1."
                              },
                              "lang": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "fr",
                                "description": "2 letter language code of the main language of the product (the most prominent on the packaging)"
                              },
                              "quantity": {
                                "type": "string"
                              },
                              "serving_size": {
                                "type": "string"
                              },
                              "images": {
                                "type": "object",
                                "properties": {
                                  "selected": {
                                    "description": "Images with specific information (e.g. front, ingredients, nutrition, packaging) for specific languages.\nEach selected image is a cropped version of an uploaded image.\n",
                                    "type": "object",
                                    "title": "Selected images",
                                    "properties": {
                                      "front": {
                                        "description": "Front images of the full product in languages shown on the packaging.\nIn most cases we have a front image selected for only one language,\nunless the product has different packagings for different countries with the same barcode,\nor if the product has two front sides (e.g. in bilingual countries).\n",
                                        "patternProperties": {
                                          "(?<language_code>\\w\\w)": {
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "description": "Front image in the language given by the 2 letter 'language_code'.\n",
                                                "title": "Selected image",
                                                "properties": {
                                                  "imgid": {
                                                    "type": "integer",
                                                    "example": 12,
                                                    "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                  },
                                                  "rev": {
                                                    "type": "integer",
                                                    "example": 65,
                                                    "description": "The revision number of the product when the image was selected.",
                                                    "readOnly": true
                                                  },
                                                  "generation": {
                                                    "type": "object",
                                                    "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                    "properties": {
                                                      "angle": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                      },
                                                      "coordinates_image_size": {
                                                        "type": "string",
                                                        "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                        "example": "full"
                                                      },
                                                      "normalize": {
                                                        "type": "boolean",
                                                        "description": "Normalize colors. Default is false."
                                                      },
                                                      "white_magic": {
                                                        "type": "boolean",
                                                        "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                      },
                                                      "x1": {
                                                        "type": "integer",
                                                        "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "x2": {
                                                        "type": "string",
                                                        "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y1": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y2": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                      }
                                                    }
                                                  },
                                                  "sizes": {
                                                    "readOnly": true,
                                                    "title": "Images Sizes",
                                                    "type": "object",
                                                    "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                    "properties": {
                                                      "100": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "200": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "400": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "full": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "null",
                                                "writeOnly": true,
                                                "description": "Write only value to unselect a selected image\n"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "ingredients": {
                                        "description": "Cropped images of the ingredients list in languages shown on the packaging.\n",
                                        "patternProperties": {
                                          "(?<language_code>\\w\\w)": {
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "description": "Ingredient list image in the language given by the 2 letter 'language_code'.\n",
                                                "title": "Selected image",
                                                "properties": {
                                                  "imgid": {
                                                    "type": "integer",
                                                    "example": 12,
                                                    "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                  },
                                                  "rev": {
                                                    "type": "integer",
                                                    "example": 65,
                                                    "description": "The revision number of the product when the image was selected.",
                                                    "readOnly": true
                                                  },
                                                  "generation": {
                                                    "type": "object",
                                                    "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                    "properties": {
                                                      "angle": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                      },
                                                      "coordinates_image_size": {
                                                        "type": "string",
                                                        "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                        "example": "full"
                                                      },
                                                      "normalize": {
                                                        "type": "boolean",
                                                        "description": "Normalize colors. Default is false."
                                                      },
                                                      "white_magic": {
                                                        "type": "boolean",
                                                        "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                      },
                                                      "x1": {
                                                        "type": "integer",
                                                        "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "x2": {
                                                        "type": "string",
                                                        "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y1": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y2": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                      }
                                                    }
                                                  },
                                                  "sizes": {
                                                    "readOnly": true,
                                                    "title": "Images Sizes",
                                                    "type": "object",
                                                    "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                    "properties": {
                                                      "100": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "200": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "400": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "full": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "null",
                                                "writeOnly": true,
                                                "description": "Write only value to unselect a selected image              \n"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "nutrition": {
                                        "description": "Cropped images of the nutrition facts table / list in languages shown on the packaging.\n",
                                        "patternProperties": {
                                          "(?<language_code>\\w\\w)": {
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "description": "Nutrition facts image in the language given by the 2 letter 'language_code'.\n",
                                                "title": "Selected image",
                                                "properties": {
                                                  "imgid": {
                                                    "type": "integer",
                                                    "example": 12,
                                                    "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                  },
                                                  "rev": {
                                                    "type": "integer",
                                                    "example": 65,
                                                    "description": "The revision number of the product when the image was selected.",
                                                    "readOnly": true
                                                  },
                                                  "generation": {
                                                    "type": "object",
                                                    "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                    "properties": {
                                                      "angle": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                      },
                                                      "coordinates_image_size": {
                                                        "type": "string",
                                                        "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                        "example": "full"
                                                      },
                                                      "normalize": {
                                                        "type": "boolean",
                                                        "description": "Normalize colors. Default is false."
                                                      },
                                                      "white_magic": {
                                                        "type": "boolean",
                                                        "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                      },
                                                      "x1": {
                                                        "type": "integer",
                                                        "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "x2": {
                                                        "type": "string",
                                                        "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y1": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y2": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                      }
                                                    }
                                                  },
                                                  "sizes": {
                                                    "readOnly": true,
                                                    "title": "Images Sizes",
                                                    "type": "object",
                                                    "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                    "properties": {
                                                      "100": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "200": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "400": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "full": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "null",
                                                "writeOnly": true,
                                                "description": "Write only value to unselect a selected image\n"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "packaging": {
                                        "description": "Cropped images of the packaging / recycling information in languages shown on the packaging.\n",
                                        "patternProperties": {
                                          "(?<language_code>\\w\\w)": {
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "description": "Packaging / recycling information image in the language given by the 2 letter 'language_code'.\n",
                                                "title": "Selected image",
                                                "properties": {
                                                  "imgid": {
                                                    "type": "integer",
                                                    "example": 12,
                                                    "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                                  },
                                                  "rev": {
                                                    "type": "integer",
                                                    "example": 65,
                                                    "description": "The revision number of the product when the image was selected.",
                                                    "readOnly": true
                                                  },
                                                  "generation": {
                                                    "type": "object",
                                                    "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                                    "properties": {
                                                      "angle": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                                      },
                                                      "coordinates_image_size": {
                                                        "type": "string",
                                                        "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                                        "example": "full"
                                                      },
                                                      "normalize": {
                                                        "type": "boolean",
                                                        "description": "Normalize colors. Default is false."
                                                      },
                                                      "white_magic": {
                                                        "type": "boolean",
                                                        "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                                      },
                                                      "x1": {
                                                        "type": "integer",
                                                        "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "x2": {
                                                        "type": "string",
                                                        "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y1": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                                      },
                                                      "y2": {
                                                        "type": "string",
                                                        "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                                      }
                                                    }
                                                  },
                                                  "sizes": {
                                                    "readOnly": true,
                                                    "title": "Images Sizes",
                                                    "type": "object",
                                                    "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                                    "properties": {
                                                      "100": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "200": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "400": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      },
                                                      "full": {
                                                        "title": "Image Size",
                                                        "type": "object",
                                                        "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                                        "properties": {
                                                          "h": {
                                                            "type": "integer",
                                                            "example": 400,
                                                            "description": "The height of the reduced/full image in pixels.\n"
                                                          },
                                                          "w": {
                                                            "type": "integer",
                                                            "example": 255,
                                                            "description": "The width of the reduced/full image in pixels.\n"
                                                          },
                                                          "url": {
                                                            "type": "string",
                                                            "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                            "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "null",
                                                "writeOnly": true,
                                                "description": "Write only value to unselect a selected image\n"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "Structured data for the product is passed in the product field.\n\nFor complex structures such as the packagings object, it is possible to replace pre-existing data, or completing it:\n\n- an object sent in the packagings field will replace any pre-existing data.\n- an object sent in the field suffixed with _add (e.g. packagings_add) will be merged with any pre-existing data.\n"
        },
        "responses": {
          "200": {
            "description": "The response will include a \"product\" structure. The fields returned in this structure will depend on the value of the \"fields\" input field:\n\n- \"updated\" (default): all fields updated by the query will be returned, including fields that are directly generated from the updated fields. For instance, sending \"packagings\" or \"packagings_add\" will return the \"packagings\" field.\n\n- \"none\": no fields are returned.\n\n- \"all\": returns all fields except generated fields that need to be explicitly requested such as \"knowledge_panels\".\n\nThe \"fields\" values can also be concatenated: \"all,knowledge_panels\"",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "product": {
                          "$ref": "#/paths/~1api~1v3~1product~1%7Bbarcode%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/product"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Update of packagings": {
                    "value": {
                      "status": "success_with_errors",
                      "result": {
                        "id": "en:product-updated",
                        "en_name": "Product updated",
                        "lc_name": "Produit mis à jour"
                      },
                      "errors": [
                        {
                          "message": {
                            "id": "en:sugars-higher-than-carbohydrates",
                            "name": "Sugars higher than carbohydrates",
                            "lc_name": "Sucres plus élevés que les glucides",
                            "description": "Sugars (40g) are higher than carbohydrates (35g).",
                            "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                          },
                          "field": {
                            "id": "nutriment.sugars",
                            "value": "40"
                          },
                          "impact": {
                            "id": "en:nutrients-not-updated",
                            "name": "Nutrients not updated",
                            "lc_name": "Nutriments non mis à jour",
                            "description": "The nutrients were not updated.",
                            "lc_description": "Les nutriments n'ont pas été mis à jour."
                          }
                        }
                      ],
                      "product": {
                        "packagings": [
                          {
                            "material": "en:pp-polypropylene",
                            "number": "2",
                            "recycling": "en:discard",
                            "shape": "en:lid"
                          },
                          {
                            "material": "en:non-corrugated-cardboard",
                            "number": "1",
                            "recycling": "en:recycle",
                            "shape": "en:box",
                            "weight": 120
                          },
                          {
                            "material": "en:paper-and-fibreboard-aluminium",
                            "number": "2",
                            "recycling": "en:recycle",
                            "shape": "en:seal"
                          },
                          {
                            "material": "en:clear-glass",
                            "number": "2",
                            "recycling": "en:recycle",
                            "shape": "en:jar",
                            "quantity": "200 ML",
                            "quantity_value": 200,
                            "quantity_unit": "ml",
                            "weight": 80
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/product/{barcode}/images": {
      "post": {
        "tags": [
          "Images"
        ],
        "summary": "Upload Product Image",
        "operationId": "post-api-v3-product-barcode-images",
        "description": "\nThis endpoint allows to upload an image for a product. The image is uploaded in the request body as a base64 encoded string.\nOptionally, it is possible to select the uploaded image for specific information (e.g. front, ingredients, nutrition, packaging) for specific languages. Each selected image is a cropped version of the uploaded image.\n\nIf the product does not exist, it will be created.",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "description": "The barcode of the product corresponding to the image.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "3017620422003"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "title": "Language and country of the user",
                    "type": "object",
                    "properties": {
                      "lc": {
                        "type": "string",
                        "description": "2 letter code of the language of the interface. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the language may be inferred by the country of the user (passed through the cc field or inferred by the IP address). Full list at https://static.openfoodfacts.org/data/taxonomies/languages.json"
                      },
                      "cc": {
                        "type": "string",
                        "description": "2 letter code of the country of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the country may be inferred by the IP address of the request. Full list at https://static.openfoodfacts.org/data/taxonomies/countries.json"
                      }
                    },
                    "description": "",
                    "examples": [
                      {
                        "lc": "fr",
                        "cc": "fr"
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "string",
                        "description": "Username for login\n\nNote: you must always use the username (and not the email)\nas it is far less brittle.\n"
                      },
                      "password": {
                        "type": "string",
                        "description": "Password for login",
                        "format": "password"
                      },
                      "image_data_base64": {
                        "type": "string",
                        "description": "Base64 encoded image data (supported formats: JPEG, PNG, GIF, HEIC)"
                      },
                      "selected": {
                        "description": "Optional instructions to select (and possibly crop) the uploaded image for specific information (e.g. front, ingredients, nutrition, packaging) for specific languages.\n",
                        "type": "object",
                        "title": "Selected images",
                        "properties": {
                          "front": {
                            "description": "Front images of the full product in languages shown on the packaging.\nIn most cases we have a front image selected for only one language,\nunless the product has different packagings for different countries with the same barcode,\nor if the product has two front sides (e.g. in bilingual countries).\n",
                            "patternProperties": {
                              "(?<language_code>\\w\\w)": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Front image in the language given by the 2 letter 'language_code'.\n",
                                    "title": "Selected image",
                                    "properties": {
                                      "imgid": {
                                        "type": "integer",
                                        "example": 12,
                                        "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                      },
                                      "rev": {
                                        "type": "integer",
                                        "example": 65,
                                        "description": "The revision number of the product when the image was selected.",
                                        "readOnly": true
                                      },
                                      "generation": {
                                        "type": "object",
                                        "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                        "properties": {
                                          "angle": {
                                            "type": "integer",
                                            "example": 0,
                                            "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                          },
                                          "coordinates_image_size": {
                                            "type": "string",
                                            "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                            "example": "full"
                                          },
                                          "normalize": {
                                            "type": "boolean",
                                            "description": "Normalize colors. Default is false."
                                          },
                                          "white_magic": {
                                            "type": "boolean",
                                            "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                          },
                                          "x1": {
                                            "type": "integer",
                                            "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "x2": {
                                            "type": "string",
                                            "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "y1": {
                                            "type": "string",
                                            "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "y2": {
                                            "type": "string",
                                            "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                          }
                                        }
                                      },
                                      "sizes": {
                                        "readOnly": true,
                                        "title": "Images Sizes",
                                        "type": "object",
                                        "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                        "properties": {
                                          "100": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "200": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "400": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "full": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "null",
                                    "writeOnly": true,
                                    "description": "Write only value to unselect a selected image\n"
                                  }
                                ]
                              }
                            }
                          },
                          "ingredients": {
                            "description": "Cropped images of the ingredients list in languages shown on the packaging.\n",
                            "patternProperties": {
                              "(?<language_code>\\w\\w)": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Ingredient list image in the language given by the 2 letter 'language_code'.\n",
                                    "title": "Selected image",
                                    "properties": {
                                      "imgid": {
                                        "type": "integer",
                                        "example": 12,
                                        "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                      },
                                      "rev": {
                                        "type": "integer",
                                        "example": 65,
                                        "description": "The revision number of the product when the image was selected.",
                                        "readOnly": true
                                      },
                                      "generation": {
                                        "type": "object",
                                        "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                        "properties": {
                                          "angle": {
                                            "type": "integer",
                                            "example": 0,
                                            "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                          },
                                          "coordinates_image_size": {
                                            "type": "string",
                                            "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                            "example": "full"
                                          },
                                          "normalize": {
                                            "type": "boolean",
                                            "description": "Normalize colors. Default is false."
                                          },
                                          "white_magic": {
                                            "type": "boolean",
                                            "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                          },
                                          "x1": {
                                            "type": "integer",
                                            "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "x2": {
                                            "type": "string",
                                            "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "y1": {
                                            "type": "string",
                                            "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "y2": {
                                            "type": "string",
                                            "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                          }
                                        }
                                      },
                                      "sizes": {
                                        "readOnly": true,
                                        "title": "Images Sizes",
                                        "type": "object",
                                        "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                        "properties": {
                                          "100": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "200": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "400": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "full": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "null",
                                    "writeOnly": true,
                                    "description": "Write only value to unselect a selected image              \n"
                                  }
                                ]
                              }
                            }
                          },
                          "nutrition": {
                            "description": "Cropped images of the nutrition facts table / list in languages shown on the packaging.\n",
                            "patternProperties": {
                              "(?<language_code>\\w\\w)": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Nutrition facts image in the language given by the 2 letter 'language_code'.\n",
                                    "title": "Selected image",
                                    "properties": {
                                      "imgid": {
                                        "type": "integer",
                                        "example": 12,
                                        "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                      },
                                      "rev": {
                                        "type": "integer",
                                        "example": 65,
                                        "description": "The revision number of the product when the image was selected.",
                                        "readOnly": true
                                      },
                                      "generation": {
                                        "type": "object",
                                        "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                        "properties": {
                                          "angle": {
                                            "type": "integer",
                                            "example": 0,
                                            "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                          },
                                          "coordinates_image_size": {
                                            "type": "string",
                                            "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                            "example": "full"
                                          },
                                          "normalize": {
                                            "type": "boolean",
                                            "description": "Normalize colors. Default is false."
                                          },
                                          "white_magic": {
                                            "type": "boolean",
                                            "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                          },
                                          "x1": {
                                            "type": "integer",
                                            "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "x2": {
                                            "type": "string",
                                            "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "y1": {
                                            "type": "string",
                                            "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "y2": {
                                            "type": "string",
                                            "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                          }
                                        }
                                      },
                                      "sizes": {
                                        "readOnly": true,
                                        "title": "Images Sizes",
                                        "type": "object",
                                        "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                        "properties": {
                                          "100": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "200": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "400": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "full": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "null",
                                    "writeOnly": true,
                                    "description": "Write only value to unselect a selected image\n"
                                  }
                                ]
                              }
                            }
                          },
                          "packaging": {
                            "description": "Cropped images of the packaging / recycling information in languages shown on the packaging.\n",
                            "patternProperties": {
                              "(?<language_code>\\w\\w)": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Packaging / recycling information image in the language given by the 2 letter 'language_code'.\n",
                                    "title": "Selected image",
                                    "properties": {
                                      "imgid": {
                                        "type": "integer",
                                        "example": 12,
                                        "description": "The imgid of the original/source image edited (rotated, cropped, normalized etc) to produce the selected image.\nWhen uploading a new image and selecting it, the imgid will be automatically assigned by the server, and this field should not be passed.\nWhen selecting a previously uploaded image, the imgid must be passed to identify the source image.\n"
                                      },
                                      "rev": {
                                        "type": "integer",
                                        "example": 65,
                                        "description": "The revision number of the product when the image was selected.",
                                        "readOnly": true
                                      },
                                      "generation": {
                                        "type": "object",
                                        "description": "Properties to specify if the image is cropped, rotated, normalized or with the white background removed.\n",
                                        "properties": {
                                          "angle": {
                                            "type": "integer",
                                            "example": 0,
                                            "description": "The angle of the image rotation (if it was rotated). Only supported values are 0, 90, 180, 270."
                                          },
                                          "coordinates_image_size": {
                                            "type": "string",
                                            "description": "Possible values are \"full\" or \"400\". Indicates if the crop coordinates are relative to the full image, or to a resized version (max width and max height = 400)",
                                            "example": "full"
                                          },
                                          "normalize": {
                                            "type": "boolean",
                                            "description": "Normalize colors. Default is false."
                                          },
                                          "white_magic": {
                                            "type": "boolean",
                                            "description": "Try to remove the background for photos taken on a white background. Default is false.\n"
                                          },
                                          "x1": {
                                            "type": "integer",
                                            "description": "The x coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "x2": {
                                            "type": "string",
                                            "description": "The x coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "y1": {
                                            "type": "string",
                                            "description": "The y coordinate of the top left corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image.\n"
                                          },
                                          "y2": {
                                            "type": "string",
                                            "description": "The y coordinate of the bottom right corner of the area of interest.\nIf the image is rotated, the coordinates are relative to the rotated image. \n"
                                          }
                                        }
                                      },
                                      "sizes": {
                                        "readOnly": true,
                                        "title": "Images Sizes",
                                        "type": "object",
                                        "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                        "properties": {
                                          "100": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "200": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "400": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          },
                                          "full": {
                                            "title": "Image Size",
                                            "type": "object",
                                            "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                            "properties": {
                                              "h": {
                                                "type": "integer",
                                                "example": 400,
                                                "description": "The height of the reduced/full image in pixels.\n"
                                              },
                                              "w": {
                                                "type": "integer",
                                                "example": 255,
                                                "description": "The width of the reduced/full image in pixels.\n"
                                              },
                                              "url": {
                                                "type": "string",
                                                "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "null",
                                    "writeOnly": true,
                                    "description": "Write only value to unselect a selected image\n"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "Image data for the product is passed in the image_data_base64 field as a base64 encoded string.\n"
        },
        "responses": {
          "200": {
            "description": "The response will include a \"product\" structure. The fields returned in this structure will depend on the value of the \"fields\" input field:\n\n- \"updated\" (default): all fields updated by the query will be returned, including fields that are directly generated from the updated fields. For instance, sending \"packagings\" or \"packagings_add\" will return the \"packagings\" field.\n\n- \"none\": no fields are returned.\n\n- \"all\": returns all fields except generated fields that need to be explicitly requested such as \"knowledge_panels\".\n\nThe \"fields\" values can also be concatenated: \"all,knowledge_panels\"",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "product": {
                          "properties": {
                            "images": {
                              "type": "object",
                              "properties": {
                                "uploaded": {
                                  "description": "List with only the image just uploaded by the user. The key is the image id (imgid) and the value is an object with the image data.\n",
                                  "type": "object",
                                  "title": "images_uploaded",
                                  "patternProperties": {
                                    "(?<imgid>\\d+)": {
                                      "type": "object",
                                      "title": "Uploaded image",
                                      "description": "Image uploaded by a user or provided by a manufacturer identified by an integer 'imgid'.\n",
                                      "properties": {
                                        "uploader": {
                                          "type": "string",
                                          "description": "userid of the user who uploaded the image.\n",
                                          "example": "stephane"
                                        },
                                        "sizes": {
                                          "title": "Images Sizes",
                                          "type": "object",
                                          "description": "Contains the information about the images of a product in different sizes.\nThe reduced images are the ones with numbers as the key(100, 200 and 400)\nwhile the full images have `full` as the key.\n",
                                          "properties": {
                                            "100": {
                                              "title": "Image Size",
                                              "type": "object",
                                              "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                              "properties": {
                                                "h": {
                                                  "type": "integer",
                                                  "example": 400,
                                                  "description": "The height of the reduced/full image in pixels.\n"
                                                },
                                                "w": {
                                                  "type": "integer",
                                                  "example": 255,
                                                  "description": "The width of the reduced/full image in pixels.\n"
                                                },
                                                "url": {
                                                  "type": "string",
                                                  "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                  "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                }
                                              }
                                            },
                                            "200": {
                                              "title": "Image Size",
                                              "type": "object",
                                              "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                              "properties": {
                                                "h": {
                                                  "type": "integer",
                                                  "example": 400,
                                                  "description": "The height of the reduced/full image in pixels.\n"
                                                },
                                                "w": {
                                                  "type": "integer",
                                                  "example": 255,
                                                  "description": "The width of the reduced/full image in pixels.\n"
                                                },
                                                "url": {
                                                  "type": "string",
                                                  "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                  "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                }
                                              }
                                            },
                                            "400": {
                                              "title": "Image Size",
                                              "type": "object",
                                              "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                              "properties": {
                                                "h": {
                                                  "type": "integer",
                                                  "example": 400,
                                                  "description": "The height of the reduced/full image in pixels.\n"
                                                },
                                                "w": {
                                                  "type": "integer",
                                                  "example": 255,
                                                  "description": "The width of the reduced/full image in pixels.\n"
                                                },
                                                "url": {
                                                  "type": "string",
                                                  "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                  "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                }
                                              }
                                            },
                                            "full": {
                                              "title": "Image Size",
                                              "type": "object",
                                              "description": "Contains the information (width, height and URL) about an image in a specific size.\nThe URL is generated at runtime if the `generate_images_urls` parameter is set to true.\n",
                                              "properties": {
                                                "h": {
                                                  "type": "integer",
                                                  "example": 400,
                                                  "description": "The height of the reduced/full image in pixels.\n"
                                                },
                                                "w": {
                                                  "type": "integer",
                                                  "example": 255,
                                                  "description": "The width of the reduced/full image in pixels.\n"
                                                },
                                                "url": {
                                                  "type": "string",
                                                  "example": "https://static.openfoodfacts.org/images/products/000/000/000/0000/400.jpg",
                                                  "description": "The URL of the image. This property is generated at runtime if the generate_images_urls parameter is set to true.\n"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/product/{barcode}/images/uploaded/{imgid}": {
      "delete": {
        "tags": [
          "Images"
        ],
        "summary": "Delete Product Image",
        "operationId": "delete-api-v3-product-barcode-images-uploaded-imgid",
        "description": "This endpoint allows to delete an uploaded image for a product.\nSelected images that are cropped from it will also be deleted.\n\nImage deletion is allowed only for moderators and admins, so the request must be authenticated with a session cookie or userid and password.",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "description": "The barcode of the product corresponding to the image.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "3017620422003"
            }
          },
          {
            "name": "imgid",
            "in": "path",
            "description": "The id of the image to be deleted.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User not authenticated or not allowed to delete the image"
          },
          "404": {
            "description": "Product or image not found"
          }
        }
      }
    },
    "/api/v3/taxonomy_canonicalize_tags": {
      "get": {
        "summary": "Get canonical tags for a list of local tags",
        "tags": [
          "Taxonomy"
        ],
        "parameters": [
          {
            "name": "tagtype",
            "in": "query",
            "required": true,
            "description": "The type of taxonomy to canonicalize tags for (e.g., ingredients, categories).",
            "schema": {
              "type": "string",
              "example": "ingredients"
            }
          },
          {
            "name": "local_tags_list",
            "in": "query",
            "required": true,
            "description": "A comma-separated list of local tags to canonicalize.",
            "schema": {
              "type": "string",
              "example": "sucre,eau"
            }
          },
          {
            "name": "lc",
            "in": "query",
            "required": false,
            "description": "2-letter code of the language of the user. Used for localizing some fields in returned values.\nIf not passed, the language may be inferred by the subdomain of the request.\n",
            "schema": {
              "type": "string",
              "example": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "canonical_tags_list": {
                          "type": "string",
                          "example": "en:sugar,en:water"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/taxonomy_display_tags": {
      "get": {
        "summary": "Get display tags in a specific language for a list of taxonomy tags",
        "tags": [
          "Taxonomy"
        ],
        "parameters": [
          {
            "name": "tagtype",
            "in": "query",
            "required": true,
            "description": "The type of taxonomy to retrieve display tags for (e.g., ingredients, categories).",
            "schema": {
              "type": "string",
              "example": "ingredients"
            }
          },
          {
            "name": "canonical_tags_list",
            "in": "query",
            "required": true,
            "description": "A comma-separated list of canonical taxonomy tags to retrieve display tags for.",
            "schema": {
              "type": "string",
              "example": "en:sugar,en:water"
            }
          },
          {
            "name": "lc",
            "in": "query",
            "required": false,
            "description": "2-letter code of the language to return display tags in.\n",
            "schema": {
              "type": "string",
              "example": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "display_tags": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "sucre, eau"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/taxonomy_suggestions": {
      "parameters": [],
      "get": {
        "summary": "Get Taxonomy Suggestions",
        "tags": [
          "Taxonomy"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "suggestions": {
                          "type": "array",
                          "description": "Array of sorted strings suggestions in the language requested in the \"lc\" field.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "matched_synonyms": {
                          "type": "object",
                          "description": "Dictionary of strings associating canonical names (as seen in suggestions field) with the synonym that best matches the query. An entry is present for all suggestions, even when the synonym is the same with the canonical name.\n\nThis value is present only if get_synonyms parameter is present.\n",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-api-v3-taxonomy_suggestions-taxonomy",
        "description": "Open Food Facts uses multilingual [taxonomies](https://wiki.openfoodfacts.org/Global_taxonomies) to normalize entries for categories, labels, ingredients, packaging shapes / materials / recycling instructions and many more fields.\n\nThis API returns taxonomy entries suggestions that can be used in product edit forms, search forms etc. (for instance in autocomplete dropdowns using libraries like Tagify or select2 on the Web).\n\nSuggestions filtering:\n\nThe string parameter allows to get only suggestions that contain a specific string (useful for autocomplete suggestions).\n\nSuggestions ordering:\n\n- For packaging shapes and materials, suggestions are ordered first by the number of packaging components they appear in (restricted by country, categories and shape (for materials) if they are passed as parameters).\n- for all other taxonomies, results are ordered alphabetically\n\nIf a string is passed, an additional sort is done to put first suggestions that start with the string, followed by suggestions with a word that start with the string, and then suggestions that contain the string anywhere.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "additives"
            },
            "in": "query",
            "name": "tagtype"
          },
          {
            "schema": {
              "type": "string",
              "example": "us"
            },
            "in": "query",
            "name": "cc",
            "required": false,
            "description": "2 letter code of the country of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the country may be inferred by the IP address of the request."
          },
          {
            "schema": {
              "type": "string",
              "example": "fr"
            },
            "in": "query",
            "name": "lc",
            "required": false,
            "description": "2 letter code of the language of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the language may be inferred by the Accept-Language header of the request."
          },
          {
            "schema": {
              "type": "string",
              "example": "pe"
            },
            "in": "query",
            "name": "string",
            "description": "Optional string used to filter suggestions (useful for autocomplete).  If passed, suggestions starting with the string will be returned first, followed by suggestions matching the string at the beginning of a word, and suggestions matching the string inside a word."
          },
          {
            "schema": {
              "type": "string",
              "example": "yougurts"
            },
            "in": "query",
            "name": "categories",
            "description": "Comma separated list of categories tags (e.g. \"en:fats,en:unsalted-butters\" or categories names in the language indicated by the \"lc\" field (e.g. \"graisses, beurres salés\" in French)"
          },
          {
            "schema": {
              "type": "string",
              "example": "bottle"
            },
            "in": "query",
            "name": "shape",
            "description": "Shape of packaging component (tag identified in the packaging_shapes taxonomy, or plain text tag name in the language indicated by the \"lc\" field)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of suggestions. Default is 25, max is 400."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "get_synonyms",
            "description": "Whether or not to include \"matched_synonyms\" in the response. Set to 1 to include."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "term",
            "description": "Alias for the \"string\" parameter provided for backward compatibility. \"string\" takes precedence."
          }
        ]
      }
    },
    "/api/v3/tag/{tagtype}/{tag_or_tagid}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "us"
          },
          "in": "query",
          "name": "cc",
          "required": false,
          "description": "2 letter code of the country of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the country may be inferred by the IP address of the request."
        },
        {
          "schema": {
            "type": "string",
            "example": "fr"
          },
          "in": "query",
          "name": "lc",
          "required": false,
          "description": "2 letter code of the language of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the language may be inferred by the Accept-Language header of the request."
        },
        {
          "schema": {
            "type": "string",
            "example": "categories"
          },
          "name": "tagtype",
          "in": "path",
          "required": true,
          "description": "Type of the tag"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "tag_or_tagid",
          "in": "path",
          "required": true,
          "description": "Tag name (e.g. yogurts) or tag id (e.g. en:yogurts)"
        }
      ],
      "get": {
        "summary": "Get Tag Knowledge Panels",
        "tags": [
          "Knowledge Panels"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "tagtype": {
                          "type": "string",
                          "description": "Input tagtype\n"
                        },
                        "tagid": {
                          "type": "string",
                          "description": "Input tagid\n"
                        },
                        "tag": {
                          "type": "object",
                          "properties": {
                            "tagid": {
                              "type": "string",
                              "description": "Canonicalized tagid corresponding to the input tag_or_tagid"
                            },
                            "tagtype": {
                              "type": "string",
                              "description": "Canonicalized tagtype"
                            },
                            "knowledge_panels": {
                              "description": "Knowledge panels for the tag",
                              "type": "object",
                              "title": "panels",
                              "examples": [
                                {
                                  "additionalProperties": "string"
                                }
                              ],
                              "additionalProperties": {
                                "title": "panel",
                                "type": "object",
                                "description": "Each panel contains an optional title and an optional array of elements.",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Type of the panel. If set to \"card\", the panel and its sub-panels should be displayed in a card. If set to \"inline\", the panel should have its content always displayed."
                                  },
                                  "expanded": {
                                    "type": "boolean",
                                    "description": "If true, the panel is to be displayed already expanded. If false, only the title should be displayed, and the user should be able to click or tap it to open the panel and display the elements."
                                  },
                                  "expand_for": {
                                    "type": "string",
                                    "description": "If set to \"large\", the content of the panel should be expanded on large screens, but it should still be possible to unexpand it."
                                  },
                                  "evaluation": {
                                    "type": "string",
                                    "description": "An evaluation status specifically for this title element. This can be used to directly color the icon if 'icon_color_from_evaluation' is true and this field is present, or it might provide context for the title itself. e.g. bad is red. Please be careful in choosing colors, to avoid 50 shades of red.",
                                    "example": "bad",
                                    "enum": [
                                      "good",
                                      "average",
                                      "neutral",
                                      "bad",
                                      "unknown"
                                    ]
                                  },
                                  "half_width_on_mobile": {
                                    "type": "boolean",
                                    "description": "If true, suggests that this panel could be rendered as half-width on mobile devices, allowing for side-by-side display with another half-width panel if applicable.",
                                    "example": true
                                  },
                                  "title_element": {
                                    "title": "title_element",
                                    "x-stoplight": {
                                      "id": "lox0wvl9bdgy2"
                                    },
                                    "type": "object",
                                    "description": "The title of a panel.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "A short name of this panel, not including any actual values"
                                      },
                                      "title": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "grade",
                                          "percentage"
                                        ],
                                        "description": "Used to indicate how the value of this item is measured, such as \"grade\" for Nutri-Score and Green-Score or \"percentage\" for Salt"
                                      },
                                      "grade": {
                                        "type": "string",
                                        "description": "The value for this panel where it corresponds to a A to E grade such as the Nutri-Score or the Green-Score.",
                                        "enum": [
                                          "a+",
                                          "a",
                                          "b",
                                          "c",
                                          "d",
                                          "e",
                                          "f",
                                          "unknown"
                                        ]
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "The numeric value of the panel, where the type is \"percentage\""
                                      },
                                      "icon_url": {
                                        "type": "string"
                                      },
                                      "icon_color_from_evaluation": {
                                        "type": "string"
                                      },
                                      "icon_size": {
                                        "type": "string",
                                        "description": "If set to \"small\", the icon should be displayed at a small size.\n"
                                      }
                                    }
                                  },
                                  "elements": {
                                    "type": "array",
                                    "description": "An ordered list of elements to display in the content of the panel.",
                                    "items": {
                                      "title": "element",
                                      "x-stoplight": {
                                        "id": "e2ybdrtmx0tme"
                                      },
                                      "type": "object",
                                      "description": "Each element object contains one specific element object such as a text element or an image element.\n",
                                      "properties": {
                                        "element_type": {
                                          "type": "string",
                                          "enum": [
                                            "text",
                                            "image",
                                            "action",
                                            "panel",
                                            "panel_group",
                                            "table"
                                          ],
                                          "description": "The type of the included element object.\nThe element_type also indicates which field contains the included element object.\ne.g. if the element_type is \"text\", the included element object will be in the \"text_element\" field.\n\nNote that in the future, new type of element may be added,\nso your code should ignore unrecognized types, and unknown properties.\n\nTODO: add Map type\n"
                                        },
                                        "text_element": {
                                          "title": "text_element",
                                          "x-stoplight": {
                                            "id": "vdwxlt73qnqfa"
                                          },
                                          "type": "object",
                                          "description": "A text in simple HTML format to display.\n\nFor some specific texts that correspond to a product field (e.g. a product name, the ingredients list of a product),the edit_field_* fields are used to indicate how to edit the field value.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "the type of text, might influence the way you display it.\n",
                                              "enum": [
                                                "summary",
                                                "warning",
                                                "notes"
                                              ]
                                            },
                                            "html": {
                                              "type": "string",
                                              "description": "Text to display in HTML format."
                                            },
                                            "language": {
                                              "type": "string",
                                              "description": "Language of the text. The name of the language is returned in the language requested when making the API call. e.g. if the text is in Polish, and the requested language is French, the language field will contain \"Polonais\" (French for \"Polish\"). Only set for specific fields such as the list of ingredients of a product."
                                            },
                                            "lc": {
                                              "type": "string",
                                              "description": "2 letter language code for the text. Only set for specific fields such as the list of ingredients of a product."
                                            },
                                            "edit_field_id": {
                                              "type": "string",
                                              "description": "id of the field used to edit this text in the product edit API."
                                            },
                                            "edit_field_type": {
                                              "type": "string",
                                              "description": "Type of the product field."
                                            },
                                            "edit_field_value": {
                                              "type": "string",
                                              "description": "Current value of the product field. This may differ from the html field which can contain extra formating."
                                            },
                                            "source_url": {
                                              "type": "string",
                                              "description": "Link to the source",
                                              "example": "https://en.wikipedia.org/wiki/Sodium acetate"
                                            },
                                            "source_text": {
                                              "type": "string",
                                              "description": "name of the source",
                                              "example": "Wikipedia"
                                            },
                                            "source_lc": {
                                              "type": "string",
                                              "description": "Source locale name",
                                              "example": "en"
                                            },
                                            "source_language": {
                                              "type": "string",
                                              "description": "Human readable source locale name",
                                              "example": "English"
                                            }
                                          }
                                        },
                                        "image_element": {
                                          "title": "image_element",
                                          "x-stoplight": {
                                            "id": "k4v4kwt489q3j"
                                          },
                                          "type": "object",
                                          "properties": {
                                            "url": {
                                              "type": "string",
                                              "description": "full URL of the image"
                                            },
                                            "width": {
                                              "type": "integer",
                                              "description": "Width of the image.\n\nThis is just a suggestion coming from the server, \nthe client may choose to use its own dimensions for the image.\n"
                                            },
                                            "height": {
                                              "type": "integer",
                                              "description": "Height of the image.\n\nThis is just a suggestion coming from the server,\nthe client may choose to use its own dimensions for the image.\n"
                                            },
                                            "alt_text": {
                                              "type": "string",
                                              "description": "Alt Text of the image."
                                            }
                                          }
                                        },
                                        "action_element": {
                                          "type": "string"
                                        },
                                        "panel_element": {
                                          "title": "panel_element",
                                          "x-stoplight": {
                                            "id": "ymx41elz4yrnj"
                                          },
                                          "type": "object",
                                          "description": "Panels can include other panels as sub-panels using the panel_element.",
                                          "properties": {
                                            "panel_id": {
                                              "type": "string",
                                              "description": "The id of the panel to include. The id is the key of the panel in the panels object returned in the knowledge_panels field."
                                            }
                                          }
                                        },
                                        "panel_group_element": {
                                          "title": "panel_group_element",
                                          "x-stoplight": {
                                            "id": "b7emlfrgiuue2"
                                          },
                                          "type": "object",
                                          "properties": {
                                            "title": {
                                              "type": "string"
                                            },
                                            "panel_ids": {
                                              "type": "array",
                                              "description": "The ids of the panels to include. The ids are the keys of the panels in the panels object returned in the knowledge_panels field.",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "image": {
                                              "type": "object",
                                              "description": "An image related to the panel group (e.g. the ingredients or nutrition facts image for the ingredients and nutrition panel groups)."
                                            }
                                          },
                                          "description": "The panel group element is used to display an optional title followed by a number of sub-panels."
                                        },
                                        "table_element": {
                                          "title": "table_element",
                                          "type": "object",
                                          "description": "Element to display a table.",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "An id for the table."
                                            },
                                            "title": {
                                              "type": "string",
                                              "description": "Title of the column.\n"
                                            },
                                            "rows": {
                                              "type": "string"
                                            },
                                            "columns": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "title": "table_column",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "text": {
                                                    "type": "string"
                                                  },
                                                  "text_for_small_screens": {
                                                    "type": "string"
                                                  },
                                                  "style": {
                                                    "type": "string"
                                                  },
                                                  "column_group_id": {
                                                    "type": "string"
                                                  },
                                                  "shown_by_default": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "element_type"
                                      ]
                                    }
                                  },
                                  "level": {
                                    "type": "string",
                                    "description": "a message level, as levels we use in log.\nIt might help theming the panel visually. Some possible values: info, recommendation\n",
                                    "example": "info"
                                  },
                                  "size": {
                                    "type": "string",
                                    "enum": [
                                      "small"
                                    ],
                                    "description": "size is either empty (normal display) \nor small to indicate a panel that should have a smaller font size\n",
                                    "example": "small"
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "health"
                                    },
                                    "description": "topics currently include health, environment, problem"
                                  }
                                }
                              },
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "operationId": "get-api-v3-tag-tagtype-tag_or_tagid",
        "description": "Return knowledge panels for a tag.\n\nCurrently the knowledge panels returned are:\n\nCategories:\n- Packaging stats for a category"
      }
    },
    "/api/v3/product_revert": {
      "parameters": [],
      "post": {
        "summary": "Revert Product to Previous Revision",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post-api-v3-product_revert",
        "description": "For moderators only, revert a product to a previous revision.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "title": "Fields requested and language for taxonomized tags fields",
                    "type": "object",
                    "description": "",
                    "properties": {
                      "fields": {
                        "type": "string",
                        "description": "Comma separated list of fields requested in the response. Special values: \"updated\": returns field that were updated by the query (e.g. sending \"packagings\" or \"packagings_add\" would return \"packagings\"), \"none\": returns no fields, \"all\": returns all fields except generated fields that need to be explicitly requested such as \"knowledge_panels\". Defaults to \"updated\" for WRITE requests, and \"all\" for READ requests."
                      },
                      "tags_lc": {
                        "type": "string",
                        "description": "2 letter language code to request names of tags in a specific language.\n\nFor READ requets: if passed, all taxonomized tags of the response will include a lc_name property with the translation in the requested language, if available. Otherwise, the property value will contain the name in the original language, prefixed by the 2 language code and a colon.\n\nFor WRITE requests: if passed, taxonomized tags fields with a lc_name property will be considered to be in this language."
                      }
                    },
                    "examples": [
                      {
                        "fields": "product_name,packagings",
                        "tags_lc": "fr"
                      },
                      {
                        "fields": "updated",
                        "tags_lc": "fr"
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Barcode of the product"
                      },
                      "rev": {
                        "type": "integer",
                        "description": "Revision number to revert to"
                      }
                    }
                  }
                ]
              }
            }
          },
          "description": "The code and rev fields are mandatory.\n"
        },
        "parameters": []
      }
    },
    "/api/v3/external_sources": {
      "get": {
        "operationId": "get-api-v3-external-sources",
        "tags": [
          "Knowledge Panels"
        ],
        "summary": "List external knowledge panel sources (JSON)",
        "description": "Returns the ordered list of external knowledge panel sources configured on the server.\n\nProviders can use the `knowledge_panel_url` field to point to their own API.\nThe URL may contain **template variables** that the frontend will expand before calling:\n\n- `$code` → product barcode\n- `$lc`   → UI language (2 letters)\n- `$cc`   → user/device country (2 letters)\n\nExample:\n`https://provider.example.com/off/v1/knowledge-panel/$code?lang=$lc&country=$cc`\n\nThe frontend percent-encodes the variable values when substituting them into the URL.\n",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "external_sources": {
                          "type": "array",
                          "description": "Ordered list of external knowledge panel sources.",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "knowledge_panel_url",
                              "section"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the external panel within the file.",
                                "example": "empreinte_souffrance"
                              },
                              "name": {
                                "type": "string",
                                "description": "End-user display name of the panel or provider.",
                                "example": "Empreinte Souffrance"
                              },
                              "description": {
                                "type": "string",
                                "description": "Short description shown in preferences and provider header.",
                                "example": "Indicator of the amount of animal suffering calculated per product."
                              },
                              "icon_url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL to a square logo (PNG/SVG).",
                                "example": "https://example.org/logo.png"
                              },
                              "knowledge_panel_url": {
                                "type": "string",
                                "format": "uri",
                                "description": "Base URL to fetch knowledge panels **from the external provider**.\n\nThe URL can contain the following **template variables**, replaced by the frontend:\n- `$code` → product barcode\n- `$lc`   → UI language (2 letters)\n- `$cc`   → user/device country (2 letters)\n\nExample:\n`https://provider.example.com/off/v1/knowledge-panel/$code?lang=$lc&country=$cc`\n\nNotes:\n- The frontend substitutes variables with percent-encoded values.\n- The web component does not auto-append language anymore: include `?lang=$lc` yourself if needed.\n"
                              },
                              "provider_name": {
                                "type": "string",
                                "description": "Provider organization display name.",
                                "example": "Empreinte Souffrance"
                              },
                              "provider_website": {
                                "type": "string",
                                "format": "uri",
                                "description": "Public website of the provider (linked in UI).",
                                "example": "https://empreinte-souffrance.org/"
                              },
                              "privacy_policy_url": {
                                "type": "string",
                                "format": "uri",
                                "description": "Link to privacy notice for the external service (optional).",
                                "example": "https://provider.example.com/privacy"
                              },
                              "section": {
                                "type": "string",
                                "description": "Machine id of the section this panel belongs to (e.g. `animal_welfare`).",
                                "example": "animal_welfare"
                              },
                              "scope": {
                                "type": "string",
                                "description": "Visibility scope of the panel.",
                                "enum": [
                                  "public",
                                  "users",
                                  "moderators"
                                ],
                                "default": "public"
                              },
                              "user_in_scope": {
                                "type": "boolean",
                                "description": "True if current user is in the panel scope.\nYou must make an authenticated request to have this set to the right values\n(otherwise it will be the value corresponding to public scope)\n"
                              },
                              "filters": {
                                "type": "object",
                                "description": "Display filters applied on the current product context.",
                                "properties": {
                                  "categories": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "List of category tags; panel is shown if any matches the product categories.",
                                    "example": [
                                      "en:chicken-eggs"
                                    ]
                                  },
                                  "countries": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Two-letter country codes (or \"world\"); strict equality with current user/device country.",
                                    "example": [
                                      "fr",
                                      "world"
                                    ]
                                  },
                                  "languages": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Two-letter language codes; strict equality with current UI language.",
                                    "example": [
                                      "fr",
                                      "en"
                                    ]
                                  },
                                  "product_types": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Product types (e.g. \"food\"); strict equality with current product type.",
                                    "example": [
                                      "food"
                                    ]
                                  }
                                }
                              }
                            },
                            "examples": [
                              {
                                "id": "empreinte_souffrance",
                                "name": "Empreinte Souffrance",
                                "description": "Indicator of the amount of animal suffering calculated per product.",
                                "icon_url": "https://example.org/logo.png",
                                "knowledge_panel_url": "https://provider.example.com/off/v1/knowledge-panel/$code?lang=$lc&country=$cc",
                                "provider_name": "Empreinte Souffrance",
                                "provider_website": "https://empreinte-souffrance.org/",
                                "section": "animal_welfare",
                                "filters": {
                                  "categories": [
                                    "en:chicken-eggs"
                                  ],
                                  "countries": [
                                    "fr",
                                    "world"
                                  ],
                                  "languages": [
                                    "fr",
                                    "en"
                                  ],
                                  "product_types": [
                                    "food"
                                  ]
                                },
                                "privacy_policy_url": "https://provider.example.com/privacy",
                                "scope": "moderators"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/preferences": {
      "get": {
        "summary": "Get List of Preference Importance Values",
        "description": "These parameters are used to compute the product preferences score.\n\nfor an overview see [Explanation on Product Attributes](https://openfoodfacts.github.io/documentation/docs/Product-Opener/api/explain-product-attributes/)\"\n",
        "tags": [
          "Product Attributes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "preferences": {
                          "type": "array",
                          "description": "A list of user preference importance values.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ID of the preference importance.",
                                "example": "important"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the preference importance.",
                                "example": "Important"
                              },
                              "factor": {
                                "type": "integer",
                                "description": "The factor associated with the preference importance (optional, not set for not_important). Indicates that the product attribute score should be multiplied by this factor when this importance is selected.",
                                "example": 1
                              },
                              "minimum_match": {
                                "type": "integer",
                                "description": "The minimum match percentage required for the preference (optional, set for mandatory). Indicates that product with a lesser score for this attribute should not be considered a match.",
                                "example": 20
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v3.4/attribute_groups": {
      "get": {
        "summary": "Get List of Attribute Groups and Attributes",
        "description": "for an overview see [Explanation on Product Attributes](https://openfoodfacts.github.io/documentation/docs/Product-Opener/api/explain-product-attributes/)\"\n",
        "tags": [
          "Product Attributes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Response status",
                      "type": "object",
                      "description": "A response object to describe if a READ or WRITE request was successful or not, and if there were errors or warnings, and what the impact of those errors or warnings was.",
                      "examples": [
                        {
                          "status": "success_with_errors",
                          "result": {
                            "id": "product_updated",
                            "name": "Product updated",
                            "lc_name": "Produit mis à jour"
                          },
                          "errors": [
                            {
                              "message": {
                                "id": "sugars_higher_than_carbohydrates",
                                "name": "Sugars higher than carbohydrates",
                                "lc_name": "Sucres plus élevés que les glucides",
                                "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                              },
                              "field": {
                                "id": "nutriment.sugars",
                                "value": "40"
                              },
                              "impact": {
                                "id": "nutrients_not_updated",
                                "name": "Nutrients not updated",
                                "lc_name": "Nutriments non mis à jour",
                                "description": "The nutrients were not updated.",
                                "lc_description": "Les nutriments n'ont pas été mis à jour."
                              }
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "success_with_warnings",
                            "success_with_errors",
                            "failure"
                          ],
                          "description": "Overall status of the request: whether it failed or succeeded, with or without warnings or errors."
                        },
                        "result": {
                          "type": "object",
                          "description": "Overall result\nof the request (e.g. a product has been created)",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier of a response result entry"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the response result entry in English."
                            },
                            "lc_name": {
                              "type": "string",
                              "description": "Name of the response result entry in the language specified in tags_lc, if supplied."
                            }
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "description": "List of warnings. Warnings are used to alert about something that may be wrong, but is not necessarily wrong (e.g. a nutrient value that is unexpectedly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors. Errors are used to alert about something that is definitely wrong (e.g. a nutrient value that is impossibly high).",
                          "items": {
                            "title": "Warning or error message",
                            "x-stoplight": {
                              "id": "eakkz8p7qfoj0"
                            },
                            "type": "object",
                            "description": "Describes a warning or error for a READ or WRITE request, which field triggered it, and what the impact was (e.g. the field was ignored).",
                            "examples": [
                              {
                                "message": {
                                  "id": "sugars_higher_than_carbohydrates",
                                  "name": "Sugars higher than carbohydrates",
                                  "lc_name": "Sucres plus élevés que les glucides",
                                  "description": "Sugars (40g) are higher than carbohydrates (35g).",
                                  "lc_description": "Les sucres (40g) sont plus élévés que les glucdes."
                                },
                                "field": {
                                  "id": "nutriment.sugars",
                                  "value": "40"
                                },
                                "impact": {
                                  "id": "nutrients_not_updated",
                                  "name": "Nutrients not updated",
                                  "lc_name": "Nutriments non mis à jour",
                                  "description": "The nutrients were not updated.",
                                  "lc_description": "Les nutriments n'ont pas été mis à jour."
                                }
                              }
                            ],
                            "properties": {
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier of a response message.\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in English."
                                  },
                                  "lc_name": {
                                    "type": "string",
                                    "description": "Name of the response message entry in the language specified in tags_lc, if supplied."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in English."
                                  },
                                  "lc_description": {
                                    "type": "string",
                                    "description": "Description of the problem specific to the request, in the language specified in tags_lc, if supplied."
                                  }
                                }
                              },
                              "field": {
                                "type": "object",
                                "description": "Field that triggered the warning or error.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the field that triggered the warning or error."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the field that triggered the warning or error."
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "lc_name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "lc_description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "attribute_groups": {
                          "type": "array",
                          "description": "A list of attribute groups.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ID of the attribute group.",
                                "example": "nutritional_quality"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the attribute group.",
                                "example": "Nutritional quality"
                              },
                              "warning": {
                                "type": "string",
                                "description": "A warning message related to the attribute group (optional).",
                                "example": "There is always a possibility that data about allergens may be missing, incomplete, incorrect or that the product's composition has changed."
                              },
                              "attributes": {
                                "type": "array",
                                "description": "A list of attributes in the group.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The ID of the attribute.",
                                      "example": "nutriscore"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the attribute.",
                                      "example": "Nutri-Score"
                                    },
                                    "icon_url": {
                                      "type": "string",
                                      "description": "The URL of the icon representing the attribute.",
                                      "example": "http://static.openfoodfacts.org/images/attributes/dist/nutriscore-a.svg"
                                    },
                                    "setting_name": {
                                      "type": "string",
                                      "description": "The name of the setting for the attribute.",
                                      "example": "Good nutritional quality (Nutri-Score)"
                                    },
                                    "setting_note": {
                                      "type": "string",
                                      "description": "Additional notes about the setting (optional).",
                                      "example": "The Nutri-Score is computed and can be taken into account for all products, even if it is not displayed on the packaging."
                                    },
                                    "panel_id": {
                                      "type": "string",
                                      "description": "The panel ID associated with the attribute (optional).",
                                      "example": "nutriscore"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A detailed description of the attribute (optional).",
                                      "example": "Organic farming aims to protect the environment and to conserve biodiversity by prohibiting or limiting the use of synthetic fertilizers, pesticides and food additives."
                                    },
                                    "description_short": {
                                      "type": "string",
                                      "description": "A short description of the attribute (optional).",
                                      "example": "Organic products promote ecological sustainability and biodiversity."
                                    },
                                    "default": {
                                      "type": "string",
                                      "description": "The default value for the attribute (optional).",
                                      "example": "very_important"
                                    },
                                    "values": {
                                      "type": "array",
                                      "description": "The possible values for the attribute. Some attributes like allergens have only values \"not_important\" and \"mandatory\".",
                                      "items": {
                                        "type": "string",
                                        "example": "not_important"
                                      }
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "description": "Additional parameters for the attribute (optional, used for specific attributes like Unwanted ingredients).",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The ID of the parameter.",
                                            "example": "attribute_unwanted_ingredients_tags"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the parameter.",
                                            "example": "Unwanted ingredients"
                                          },
                                          "tagtype": {
                                            "type": "string",
                                            "description": "The tag type of the parameter.",
                                            "example": "ingredients"
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The type of the parameter. \"tags\" indicates a comma-separated list of canonical tags is expected.",
                                            "enum": [
                                              "tags"
                                            ],
                                            "example": "tags"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "cc": {
        "schema": {
          "type": "string",
          "example": "us"
        },
        "in": "query",
        "name": "cc",
        "required": false,
        "description": "2 letter code of the country of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the country may be inferred by the IP address of the request."
      },
      "lc": {
        "schema": {
          "type": "string",
          "example": "fr"
        },
        "in": "query",
        "name": "lc",
        "required": false,
        "description": "2 letter code of the language of the user. Used for localizing some fields in returned values (e.g. knowledge panels). If not passed, the language may be inferred by the Accept-Language header of the request."
      }
    },
    "schemas": {
      "ExternalKnowledgePanelList": {
        "type": "array",
        "description": "Ordered list of external knowledge panel sources.",
        "items": {
          "type": "object",
          "required": [
            "id",
            "name",
            "knowledge_panel_url",
            "section"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier of the external panel within the file.",
              "example": "empreinte_souffrance"
            },
            "name": {
              "type": "string",
              "description": "End-user display name of the panel or provider.",
              "example": "Empreinte Souffrance"
            },
            "description": {
              "type": "string",
              "description": "Short description shown in preferences and provider header.",
              "example": "Indicator of the amount of animal suffering calculated per product."
            },
            "icon_url": {
              "type": "string",
              "format": "uri",
              "description": "URL to a square logo (PNG/SVG).",
              "example": "https://example.org/logo.png"
            },
            "knowledge_panel_url": {
              "type": "string",
              "format": "uri",
              "description": "Base URL to fetch knowledge panels **from the external provider**.\n\nThe URL can contain the following **template variables**, replaced by the frontend:\n- `$code` → product barcode\n- `$lc`   → UI language (2 letters)\n- `$cc`   → user/device country (2 letters)\n\nExample:\n`https://provider.example.com/off/v1/knowledge-panel/$code?lang=$lc&country=$cc`\n\nNotes:\n- The frontend substitutes variables with percent-encoded values.\n- The web component does not auto-append language anymore: include `?lang=$lc` yourself if needed.\n"
            },
            "provider_name": {
              "type": "string",
              "description": "Provider organization display name.",
              "example": "Empreinte Souffrance"
            },
            "provider_website": {
              "type": "string",
              "format": "uri",
              "description": "Public website of the provider (linked in UI).",
              "example": "https://empreinte-souffrance.org/"
            },
            "privacy_policy_url": {
              "type": "string",
              "format": "uri",
              "description": "Link to privacy notice for the external service (optional).",
              "example": "https://provider.example.com/privacy"
            },
            "section": {
              "type": "string",
              "description": "Machine id of the section this panel belongs to (e.g. `animal_welfare`).",
              "example": "animal_welfare"
            },
            "scope": {
              "type": "string",
              "description": "Visibility scope of the panel.",
              "enum": [
                "public",
                "users",
                "moderators"
              ],
              "default": "public"
            },
            "user_in_scope": {
              "type": "boolean",
              "description": "True if current user is in the panel scope.\nYou must make an authenticated request to have this set to the right values\n(otherwise it will be the value corresponding to public scope)\n"
            },
            "filters": {
              "type": "object",
              "description": "Display filters applied on the current product context.",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of category tags; panel is shown if any matches the product categories.",
                  "example": [
                    "en:chicken-eggs"
                  ]
                },
                "countries": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Two-letter country codes (or \"world\"); strict equality with current user/device country.",
                  "example": [
                    "fr",
                    "world"
                  ]
                },
                "languages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Two-letter language codes; strict equality with current UI language.",
                  "example": [
                    "fr",
                    "en"
                  ]
                },
                "product_types": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Product types (e.g. \"food\"); strict equality with current product type.",
                  "example": [
                    "food"
                  ]
                }
              }
            }
          },
          "examples": [
            {
              "id": "empreinte_souffrance",
              "name": "Empreinte Souffrance",
              "description": "Indicator of the amount of animal suffering calculated per product.",
              "icon_url": "https://example.org/logo.png",
              "knowledge_panel_url": "https://provider.example.com/off/v1/knowledge-panel/$code?lang=$lc&country=$cc",
              "provider_name": "Empreinte Souffrance",
              "provider_website": "https://empreinte-souffrance.org/",
              "section": "animal_welfare",
              "filters": {
                "categories": [
                  "en:chicken-eggs"
                ],
                "countries": [
                  "fr",
                  "world"
                ],
                "languages": [
                  "fr",
                  "en"
                ],
                "product_types": [
                  "food"
                ]
              },
              "privacy_policy_url": "https://provider.example.com/privacy",
              "scope": "moderators"
            }
          ]
        }
      }
    }
  },
  "tags": [
    {
      "name": "Products",
      "description": "Endpoints for managing product data, creating, updating, and reverting products."
    },
    {
      "name": "Product Attributes",
      "description": "Endpoints for retrieving product attribute groups and user preference importance values."
    },
    {
      "name": "Images",
      "description": "Endpoints for uploading, managing, and deleting product images."
    },
    {
      "name": "Taxonomy",
      "description": "Endpoints for retrieving taxonomy suggestions and data."
    },
    {
      "name": "Knowledge Panels",
      "description": "Endpoints for retrieving knowledge panels for tags and categories."
    }
  ]
}