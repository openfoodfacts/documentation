name: Validate Markdown Files

on:
  push:
    branches: [main, master]
    paths:
      - "docs/**/*.md"
      - "**/*.md"
  pull_request:
    branches: [main, master]
    paths:
      - "docs/**/*.md"
      - "**/*.md"

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install fumadocs-transpiler
        run: npm install -g fumadocs-transpiler@latest

      - name: Find markdown files
        id: find-files
        run: |
          echo "Searching for markdown files..."
          MD_FILES=$(find . -name "*.md" -not -path "./node_modules/*" -not -path "./.git/*" | wc -l)
          echo "found_files=$MD_FILES" >> $GITHUB_OUTPUT
          echo "Found $MD_FILES markdown files"

      - name: Validate all markdown files
        if: steps.find-files.outputs.found_files > 0
        run: |
          echo "🔍 Validating markdown files for Fumadocs compatibility..."

          # Create a basic config for validation
          cat > fumadocs-validation.config.json << 'EOF'
          {
            "componentMappings": {
              "callout-info": "<Callout type=\"info\">{{content}}</Callout>",
              "callout-warn": "<Callout type=\"warn\">{{content}}</Callout>",
              "callout-error": "<Callout type=\"error\">{{content}}</Callout>",
              "callout-note": "<Callout type=\"note\">{{content}}</Callout>"
            },
            "preserveOriginal": false,
            "outputExtension": ".mdx",
            "imports": [],
            "backupOriginal": false,
            "validateSyntax": true
          }
          EOF

          # Validate files in common directories
          VALIDATION_FAILED=false

          for dir in docs content pages src; do
            if [ -d "$dir" ]; then
              echo "Validating files in $dir/"
              if ! fumadocs-transpiler "$dir" --config fumadocs-validation.config.json --validate-only --verbose; then
                VALIDATION_FAILED=true
              fi
            fi
          done

          # Also validate root level .md files
          ROOT_MD_FILES=$(find . -maxdepth 1 -name "*.md" | wc -l)
          if [ $ROOT_MD_FILES -gt 0 ]; then
            echo "Validating root level markdown files"
            for file in *.md; do
              if [ -f "$file" ]; then
                echo "Validating $file"
                if ! fumadocs-transpiler "$file" --config fumadocs-validation.config.json --validate-only; then
                  VALIDATION_FAILED=true
                fi
              fi
            done
          fi

          if [ "$VALIDATION_FAILED" = true ]; then
            echo "Some markdown files have validation errors"
            exit 1
          else
            echo "All markdown files are valid for Fumadocs conversion"
          fi

      - name: Create validation summary
        if: always()
        run: |
          echo "## 📋 Markdown Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.find-files.outputs.found_files }}" -eq 0 ]; then
            echo "ℹ️ **No markdown files found**" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ job.status }}" == "success" ]; then
            echo "✅ **All markdown files are valid for Fumadocs conversion**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📊 Statistics:" >> $GITHUB_STEP_SUMMARY
            echo "- 📝 Total markdown files: ${{ steps.find-files.outputs.found_files }}" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Validation status: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some markdown files have validation errors**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the workflow logs for detailed error information." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Resources:" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 [fumadocs-transpiler](https://www.npmjs.com/package/fumadocs-transpiler)" >> $GITHUB_STEP_SUMMARY
          echo "- 📚 [Fumadocs Documentation](https://fumadocs.vercel.app/)" >> $GITHUB_STEP_SUMMARY
          echo "- 🛠️ [Manual Conversion Workflow](../../actions/workflows/manual-fumadocs-conversion.yml)" >> $GITHUB_STEP_SUMMARY
